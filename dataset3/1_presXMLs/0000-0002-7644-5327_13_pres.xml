<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/sda1/Dissertation/grobid/grobid-0.5.6/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-agent reinforcement learning</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2019-12-22">December 22, 2019</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schnebli</forename><surname>Zoltan</surname></persName>
						</author>
						<title level="a" type="main">Multi-agent reinforcement learning</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2019-12-22">December 22, 2019</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.5.6" ident="GROBID" when="2019-12-24T15:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Temporal Action‐Graph Games:
A New Representation for Dynamic Games  
</p>
<p>Albert Xin Jiang Kevin Leyton‐Brown Avi Pfeffer
University of British  University of British Columbia Charles River 
</p>
<p>Columbia  Analytics  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Game Theory In One Slide 
</p>
<p>• A game:
– an interaction between two or more self‐interested agents
– each agent independently chooses a strategy
– each agent derives utility from the resulting strategy profile
</p>
<p>• Strategies:
– simultaneous‐move games: choosing from a set of actions
– dynamic games: choosing actions at multiple points in time; conditioned on 
</p>
<p>observations
</p>
<p>– can randomize over actions  
</p>
<p>• Reasoning about games:
– Often involves computation of solution concepts e.g.  Nash equilibrium</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Representations of Games
</p>
<p>no utility 
structure  
</p>
<p>Simultaneous‐
normal form
</p>
<p>move  
</p>
<p>Temporal extensive form  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Representations of Games
</p>
<p>no utility  strict utility 
structure  independence  
</p>
<p>Simultaneous‐ Graphical Games
normal form
</p>
<p>move [Kearns, Littman &  Singh 2001]  
 
</p>
<p>Multi‐agent influence 
diagrams
</p>
<p>Temporal extensive 
 
</p>
<p>(MAIDs) [Koller & Milch
form  2001]   </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Representations of Games
</p>
<p>no utility  strict utility  context‐specific 
structure  independence  indep., anonymity  
</p>
<p>Action‐Graph 
</p>
<p>Simultaneous‐ Graphical Games Games (AGGs)  
normal form [Kearns, Littman &  [Bhat & Leyton‐Brown move  2004]   Singh 2001]  
</p>
<p> [Jiang & Leyton‐Brown   
2006]
</p>
<p> 
Multi‐agent influence 
diagrams
</p>
<p>Temporal extensive 
 
</p>
<p>(MAIDs) [Koller & Milch
form  2001]   </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Representations of Games
</p>
<p>no utility  strict utility  context‐specific 
structure  independence  indep., anonymity  
</p>
<p>Action‐Graph 
</p>
<p>Simultaneous‐ Graphical Games Games (AGGs)  
normal form [Bhat & Leyton‐Brown 
</p>
<p>move [Kearns, Littman &  2004]   Singh 2001]  
 [Jiang & Leyton‐Brown   
2006]
</p>
<p> 
Multi‐agent influence 
diagrams Temporal  
</p>
<p>Temporal extensive  (MAIDs) 
Action‐Graph 
</p>
<p>[Koller & Milch  
form  2001] Games    (TAGGs)  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Overview
</p>
<p>• AGGs
</p>
<p>• TAGGs
</p>
<p>• Computation
</p>
<p>• Experiments</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>AGGs
</p>
<p>• played on a set of action nodes
• each agent chooses an action node from a subset of action 
</p>
<p>nodes  
• for each action node, an action count is tallied
</p>
<p>• utility dependence expressed by the action graph
– utility of an agent depends only on
</p>
<p>• action chosen by the agent
• action counts on the neighbors of the chosen action (configuration)
</p>
<p>• representation is compact when action graph has small in‐
degrees  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Example: simultaneous‐move 
tollbooth game  
</p>
<p>• tollbooth with 3 lanes
– 5 cars arrive
– cars choose lanes simultaneously
– utility depends on number of cars choosing same lane
</p>
<p>• context‐specific independence (CSI): different independencies under diff
context (player’s own action)
</p>
<p>• anonymity: utility depends on the numbers of agents taking certain   
actions, not their identities
</p>
<p>  
</p>
<p>L1 L2 L3</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Example: Dynamic Tollbooth Game
</p>
<p>• tollbooth with 3 lanes
– 20 cars arrive in 4 waves of 5 cars each
– in each wave, cars choose lanes simultaneously
– driver can observe number of cars in each lane
– utility depends on number of cars choosing same lane, either before him or at 
</p>
<p>the same time  
 
</p>
<p>• Extending AGGs to multiple time steps:
– Action counts accumulate over time
– Need to be able to  specify agents’ observations
– Model uncertainty using chance variables
</p>
<p> 
 
</p>
<p>302 04 30</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Defining TAGGs
</p>
<p>• A TAGG is a tuple
– N: set of players
– T: duration
– set of actions 
– set of chance variables
– set of decisions
– set of utility functions</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>TAGGs
</p>
<p>• A decision D
– Action set: a subset of 
– Observation set O[D]: of actions, decisions and chance vars
– Set of payoff times pt(D)
</p>
<p>• Utility function
– One for each action at each time step
– Set of parents
– Utility depends only on its parents’ instantiation at time
– Evaluated at payoff times of decisions  
</p>
<p> </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Strategies
</p>
<p>• A behavior strategy at decision D is a mapping 
from an instantiation of O[D] at time t(D)‐1 to a   
distribution over its action set.  
</p>
<p>• A behavior strategy for player i is a tuple
consisting of a behavior strategy fo r each of  her 
decisions  
</p>
<p>• Behavior strategy profile: tuple of behavior 
strategies for all players   </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Induced Bayes Net
</p>
<p>• Induced BN of a TAGG given a strategy profile
– Formally describes how the TAGG is played out
– Decisions, chance variables and utilities correspond to random 
</p>
<p>variables in the BN  
– Action counts are time‐dependent: we have a separate action 
</p>
<p>count variable for each action at each time step  
– Decision‐payoff variable        as utility of decision D received at 
</p>
<p>payoff time  
– Expected utility of a player is the sum of the expected values of 
</p>
<p>her decisions’ decision‐payoff variables.  
– Can similarly defin e induced MAID of a TAGG
</p>
<p> </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Induced BN / MAID: tollbooth example</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>TAGGs and MAIDs
 
</p>
<p>• Any TAGG is utility‐equivalent to its induced 
MAID  
– However, induced MAID (and BN) has large in‐
degree; exponentially larger representation size   
</p>
<p>• For the other direction, any MAID can be 
efficiently encoded as a TAGG with same   
space complexity  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Overview
</p>
<p>• AGGs
</p>
<p>• TAGGs
</p>
<p>• Computation
</p>
<p>• Experiments</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Computing Expected Utility
</p>
<p>• Computing expected utility of a player, given a 
behavior strategy profile  
– An essential step in many game‐theoretic 
computations  
</p>
<p>• Can be cast as inference problem on the induced 
BN: compute expected valu es of   
– Can apply standard BN inference algorithm
– TAGGs have additional structure; can be exploited to 
speedup c omputation  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Exploiting anonymity
</p>
<p>• Induced BN has large in‐degrees 
for action‐count variables  
– Their CPDs are counting functions 
with causal ind ependence   
structure [Heckerman&Breese 19 96]
</p>
<p>– Can reduce in‐degree by   
transforming the BN  
</p>
<p>• Create nodes re presenting 
intermediate counts  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Exploiting Temporal Structure
</p>
<p>• A network satisfies the Markov property if parents of 
variables at time t are at t or t‐1.  
– Parts of the transformed BN (action counts) satisfy MP
– Can transform it to one satisfying MP by duplicating 
variables  
</p>
<p>• Adapt the interface algorithm for Dynamic BNs
– interface: set of variables in time t that have children in 
time t+1
</p>
<p>•  d‐separates “past” from “future”
– algorithm eliminates v ariables in the temporal order; 
keeping distribution over interface variables  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Tollbooth example
</p>
<p>• interface at t: the action count variables at time t</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Computation, Ctd
</p>
<p>• Further exploiting the structure of transformed BN within 
the same time step  
</p>
<p>• We can exploit CSI for further speedup
 
</p>
<p>• Our algorithm computes EU in poly time if 
– the number of interface variables at each time are bounded
– inference over the chance variables can be done efficiently
</p>
<p>• Our methods an be applied to speedup computation of 
Nash equilibria  </p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Overview
</p>
<p>• AGGs
</p>
<p>• TAGGs
</p>
<p>• Computation
</p>
<p>• Experiments</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Experiments
</p>
<p>• Compute EU for tollbooth games (3 lanes)
</p>
<p>• Approach 1: standard clique tree algorithm on 
induced BN  
</p>
<p>• Approach 2: same clique tree algorithm on 
transformed BN  
</p>
<p>• Approach 3: our algorithm</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Experiments: Tollbooth 
(5 cars per time step, varying T )</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Experiments: Tollbooth
(T=3, varying # cars per time ste p)</p>
</div>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Conclusions
</p>
<p>• Temporal Action‐Graph Games (TAGGs)
– novel compact representation for dynamic games
– extends AGGs to dynamic setting
– compactly expres s wider variety of utility 
structure, inclu ding CSI and anonymity  
</p>
<p>– exploit such structure for  efficient computation
• expected utility
• Nash equilibrium</p>
</div>
</body>
		<back>
			<div type="references">

				<listBibl>


				</listBibl>
			</div>
		</back>
	</text>
</TEI>
