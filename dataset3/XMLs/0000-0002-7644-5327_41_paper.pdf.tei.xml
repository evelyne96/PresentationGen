<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/sda1/Dissertation/grobid/grobid-0.5.6/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">RESOURCE ALLOCATION IN COMPETITIVE MULTIAGENT SYSTEMS</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2003-08">August 2003</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Leyton-Brown</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Moshe</forename><surname>Tennenholtz</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><surname>Boutilier</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Cramton</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carla</forename><surname>Gomes</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amy</forename><surname>Greenwald</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Parkes</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tuomas</forename><surname>Sandholm</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bart</forename><surname>Selman</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Walsh</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mike</forename><surname>Wellman</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Industrial Engineering and Management Technion</orgName>
								<orgName type="institution">Israel Institute of Technology)</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">RESOURCE ALLOCATION IN COMPETITIVE MULTIAGENT SYSTEMS</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2003-08">August 2003</date>
						</imprint>
					</monogr>
					<note>Approved for the University Committee on Graduate Studies: iii iv</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.5.6" ident="GROBID" when="2019-12-24T15:33+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In systems involving multiple autonomous agents, it is often necessary to decide how scarce resources should be allocated. When agents have competing interests, they may have incentive to deviate from protocols or to lie to other agents about their preferences. Due to the strategic nature of such interactions, there has been a recent surge of interest in addressing problems in competitive multiagent systems by bringing together techniques from computer science and game-theoretic economics. In some cases, the interesting issue is the application of ideas from computer science to make existing economic mechanisms practical. In other cases, selfish agents' conflicting demands of a computer system can best be understood and/or managed through game-theoretic analysis. This thesis addresses problems that fall into both cases.</p><p>The first part of this work considers game-theoretic issues in multiagent resource allocation:</p><p>• using incentives to diffuse temporally-focused usage of a resource on a computer network at the lowest possible cost;</p><p>• identifying a protocol to allow agents to cooperate in (single-good) first-price auctions, and showing that in equilibrium such collusion benefits both colluding and non-colluding agents at the auctioneer's expense;</p><p>• compactly representing strategic multiagent situations as local-effect games, a novel class of multi-player general-sum games for which pure-strategy Nash equilibria can often be proven to exist and be computed efficiently.</p><p>v</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Academic influences</head><p>Foremost, Yoav Shoham has been an ideal advisor for me. He gave me the freedom to develop in my own direction while still providing strong guidance, making sure that I focused on the most interesting problems and didn't neglect fruitful avenues.</p><p>Yoav has been generous in every way, providing me with introductions, invitations to academic, industry and government meetings, the means to attend a wide variety of conferences all around the world, the freedom to build a large computer cluster, and of course innumerable hours of his own time. My research meetings with Yoav are always exhausting: in five minutes he can identify a weak point in an argument that I have accepted for a month. It is an understatement to say that Yoav has taught me a great deal.</p><p>Moshe Tennenholtz has all but co-advised me; during his three years as a visiting scholar at Stanford he had a profound impact on my development as a researcher. Our hours-long conversations spent attacking a problem have been among the most rewarding I've had in research. His insight, his attention to detail and his knowledge of the literature all served to carry our work much farther than would have been possible otherwise. On a more personal note, Moshe is a very open, giving person, and I have benefited many times from his kindness. Many other people at Stanford have taught, guided and helped me. Balaji Prabhakar mentored me on issues in networking; without his involvement the work in Chapter 2 could never have even gotten off the ground. Daphne Koller is an amazing academic, and has challenged and inspired me throughout my time at Stanford. vii Andrew Ng gave very generously of his time, making extensive (and very helpful) comments on a draft of this thesis. The many students with whom I worked at Stanford taught me a lot, and also made doing research much more fun. Particularly, I'd like to thank Eugene Nudelman and Ryan Porter, my officemates for most of my time at Stanford, for many useful (and diverting) discussions. Finally, I'd like to thank the Stanford professors who helped me by serving on various committees as I progressed through my Ph.D: the members of my reading committee (Andrew Ng, Yoav Shoham, Moshe Tennenholtz), my orals committee (reading committee plus Daphne Koller, David Kreps) and my quals committee (Daphne Koller, Chris Manning, Moshe Tennenholtz).</p><p>There are of course many people in the larger research community who have influenced me academically. Though this list is certainly incomplete, I'd particularly like to thank</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The second part considers computational issues in multiagent resource allocation, concentrating on the winner determination problem (WDP) in combinatorial auctions:</p><p>• solving several variants of the WDP using heuristic branch-and-bound search algorithms;</p><p>• building a benchmark suite for WDP algorithms by modeling real-world valuations described in the economics literature;</p><p>• modeling the (empirical) computational hardness of the WDP, analyzing these models, and applying them to construct algorithm portfolios and to generate harder problem instances.</p><p>vi than anything else have defined my time at Stanford.</p><p>Finally, I'd like to thank my friends, with the caveat that there are many people that space does not permit me to mention here. Carlos and Philippe are friends I met during the Stanford recruitment weekend in the summer of 1998. We have been together for just about everything over the past five years: hiking trips, impromptu tutorials on each others' research areas, dot-com fantasies, international travel, chats in our offices while avoiding work, and ultimately seeking work in our respective job hunts. Geoff was around for a lot of the above, and also introduced me to the appreciation of wine. I've also been lucky with randomly-assigned roommates; in particular, Dan is a great friend who introduced me to many new people and experiences; Farhad and Irfan gave me a welcoming introduction to Pakistani culture and food; and Ryan made my final year (separated from Jude while she finished her Master's in New Zealand) much more lively and enjoyable.</p><p>I'm lucky to have remained in close contact with many friends back home in Canada, particularly Christa, Tara, Jai and Navin. Navin deserves particular mention here as he found time during his own (physics) Ph.D. studies to join me as a coauthor on the work described in Chapter 3.</p><p>I'd like to thank the members of the DAGS and multiagent research groups. Many DAGS members have been both friends and informal teachers: I've been lucky to have them around for everything from ski trips to qual study groups. (I'd particularly like to thank Ben for explaining SVMs to me on a ski lift-in between black-diamond mogul runs!) Finally, it often seems that I've learned more from the members of the multiagent group than anywhere else in my time at Stanford. I thus have a long list of people to thank (many of whom also featured in the list of coauthors): Alex, Bikash, Bob McGrew, Bob Wilson, Christian, Eugene, Galen, Jenn, Jim, Karèn, Mark, Moises, Moshe, Pedrito, Piero, Rob, Ryan, Shobha and of course Yoav. I've always found that this lively group has struck the perfect balance between being friendly and accepting on one hand, and pushing me to learn more and to think more clearly on the other. No longer having so many of these people just a desk or an office away will be one of the hardest things about leaving Stanford.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Multiagent Systems</head><p>In recent years, and especially with the advent of the internet, there has been increasing interest in multiagent systems. Different researchers do not always agree about what sort of systems to consider "multiagent," however; in particular there are differences of opinion about where to draw a line between "agents" and "objects." 1 I'll begin by stating the characteristics that I see as fundamental to multiagent systems:</p><p>1. Agents are autonomous; 2. Information is distributed asymmetrically, and agents must choose what information to share with others (and in some cases whether to tell the truth).</p><p>Agents must therefore make autonomous decisions about how to act, taking into account their own local information and their knowledge about the presence, desires and declared local information of other agents.</p><p>Multiagent systems can broadly be divided into two categories. Cooperative multiagent systems are those in which all agents share the same desires. Therefore, given complete information about the world there is some outcome or set of outcomes which every agent agrees is preferable to all other outcomes. Of course these outcomes may be difficult to achieve in practice, since physical separation, insufficient communication bandwidth or computational limitations may prevent agents from achieving common knowledge of all relevant information or from determining which outcomes they prefer given this information. An example of a cooperative multiagent system is a team of robots which act together to achieve an objective in an unknown environment.</p><p>A more general class is competitive multiagent systems. Here we relax the assumption that all agents have the same interests, assuming only that each agent's preferences can be described by some utility function. In a sense, the term "competitive" is misleading, since some utility functions can lead agents to want to cooperate with each other, or to cooperate in some situations and to compete in others. The key way in which competitive multiagent systems differ from the cooperative variety is that agents cannot be assumed to have the same interests: even in situations where agents are best off cooperating they may not realize it, or may not behave as though their interests are aligned. An example of a competitive multiagent system is a peer-to-peer file sharing system, in which not all agents affect each other, but in which agents compete for scarce bandwidth and attempt to avoid having to provide files for other agents.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Resource Allocation in Multiagent Systems</head><p>The above example illustrates a common feature of multiagent systems: the presence of resources, scarce commodities of which agents make use and which the system explicitly or implicitly allocates. Indeed, many multiagent systems exist primarily to distribute such resources. In cooperative multiagent systems it is comparatively simple to allocate resources optimally. A global policy can be established according to which agents first communicate relevant information and the system then determines an allocation. This allocation can be computed by a central authority, by a distinguished agent, or implicitly by a group of agents. Because all agents prefer the same outcome(s) given full information, the notion of an optimal allocation is well-defined.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3.">OVERVIEW</head><p>3 Things are not so clear in the case of competitive multiagent systems. First of all, individual agents may not have incentive to declare their private information in order to allow the system to select its chosen outcome. Instead, they may be able to lie about their information in a way that will cause the system to select an outcome which they prefer. Protocols must therefore be defined to give selfish agents incentive to truthfully declare any relevant private information, by ensuring that agents hurt themselves by lying. Secondly, there is no unequivocal notion of optimality in a competitive multiagent system. Instead, systems can be designed to achieve one of a number of different-and often mutually exclusive-objectives: social-welfare maximization (i.e., maximizing the sum of agents' utilities), revenue maximization (i.e., maximizing the amount that agents are made to pay in exchange for the resources allocated to them), pareto-optimality (finding an outcome satisfying the condition that there does not exist another outcome in which no agent is worse off and some agent is better off), and so on.</p><p>The past few years have seen a surge of interest in addressing these problems by bringing together techniques from computer science and game theoretic economics.</p><p>After all, microeconomics has been concerned with designing protocols for the allocation of scarce resources among selfish agents for half a century. Computer science and economics have made contact in several different ways. In some cases, the interesting problem is to apply ideas from computer science to make it practical to use existing economic mechanisms. In other cases, selfish agents' conflicting demands of a computer system can best be managed by the introduction of game theoretic incentives. The influence between the disciplines can also be more symmetric, requiring a synthesized view of both computational limitations and the self-interested behavior of agents.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Overview</head><p>This thesis considers problems that fall into all of these categories. The topics covered are divided into two parts, based on whether the work focuses on game-theoretic or computational issues in multiagent resource allocation. In <ref type="figure" target="#fig_49">Figure 1</ref>.1 these topics are related to each other in terms of whether they originate in computer science or in game-theoretic economics, and of the extent to which the approach used in addressing them is either theoretical or applied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3.1">Game-Theoretic Topics</head><p>In this part, we examine three different game-theoretic issues in competitive multiagent systems: the application of game-theoretic incentives to computer networks; cooperation among selfish agents in an auction; and the computation of pure-strategy Nash equilibria in compactly-represented games.</p><p>Chapter 2 investigates an incentive-based approach to balancing the load on a network resource. Traditionally, network loads are managed using a technological approach (e.g., fair-queueing systems); however, when loads result from agents' selfish actions, better solutions can be achieved at a lower cost when new incentives are provided. More specifically, we consider the problem of sharing network resources when users' preferences lead to temporally concentrated loads, resulting in inefficient use of the network. We consider a setting in which bandwidth or access to service is available during different time slots at a fixed cost, but all agents have a natural preference for choosing the same time slot. We present four mechanisms that motivate users to distribute the load by probabilistically waiving the cost for each time slot, and analyze the equilibria that arise under these mechanisms.</p><p>Chapter 3 considers the problem of designing a protocol (a "bidding ring") to allow agents to cooperate in a first-price sealed-bid auction, so that at least one of the cooperating agents benefits and no agent has an incentive to deviate from the protocol. Unlike previous work on this topic, the work presented in this chapter allows for the existence of multiple cartels in the auction, includes the choice of whether or not to collude as part of agents' strategy space, and does not assume that non-colluding agents hold false beliefs. We show a Bayes-Nash equilibrium in which agents choose to join bidding rings when invited and to truthfully declare their valuations to a ring center. Furthermore, we show that the existence of bidding rings benefits ring centers and all agents, both members and non-members of bidding rings, at the auctioneer's expense.</p><p>Finally, Chapter 4 considers the problem of compactly representing realistic games, and leveraging this compact representation to yield tractable computation of Nash equilibria. Many of the real-world multiagent systems for which game-theoretic representations are natural involve many players and many actions for each player; however, current algorithmic techniques for the computation of Nash equilibria are unable to scale up beyond much smaller games. We introduce a new class of games, local-effect games (LEGs), which model several realistic settings and also admit compact representation. We show both theoretically and empirically that these games often (but not always) have pure-strategy Nash equilibria. Finding a potential function is a good technique for finding such equilibria. We give necessary and sufficient conditions for LEGs to have potential functions and provide the functions for the cases in which they exist; we also show a general case where pure-strategy equilibria exist in the absence of potential functions. In experiments, we show that myopic best-response dynamics converge quickly to pure strategy equilibria in a class of games not covered by our positive theoretical results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3.2">Computational Topics</head><p>The second part of this thesis investigates a computational problem in competitive multiagent systems. In the past half-decade computer scientists have devoted a great deal of study to combinatorial auctions (CAs), a resource-allocation paradigm which allows agents to indicate their interest in arbitrary bundles of goods even when their valuations for these goods are non-additive. The inherent flexibility of combinatorial auctions makes them useful for a wide variety of resource allocation applications ranging from process scheduling on shared computational resources to the federal government's multi-billion-dollar sale of radio spectrum licenses. However, combinatorial auctions have an Achilles' heel: they require the use of a complex and computationally expensive optimization procedure to identify the set of winning bids. We examine this combinatorial auction winner determination problem (WDP), studying the design of WDP algorithms, WDP benchmark distributions, the use of machine learning techniques to build models of the empirical running time of such algorithms on such benchmark data, and various applications of these empirical hardness models.</p><p>We begin with an introduction to combinatorial auctions and various formulations of the winner determination problem in Chapter 5. Chapter 6 considers the design of algorithms for the WDP. Two algorithms are presented, CASS and CAMUS. The former is a branch-and-bound search algorithm, which is guaranteed to find an optimal solution and which uses a variety of heuristics to perform well in practice. CAMUS is a generalization of CASS which handles an important variant of combinatorial auctions in which each good at auction may have multiple identical "units."</p><p>Chapter 7 describes a benchmark suite which has been widely used for the evaluation of WDP algorithms. Since very few general CA's have been held, there is little data recording the bidding behavior of real bidders. Instead, to evaluate WDP algorithms we must generate artificial data that is as representative of realistic scenarios as possible. We present five instance generators, each modeling a real-world application of combinatorial auctions described in the economics literature.</p><p>Chapter 8 provides experimental results for the CASS algorithm on the benchmark suite presented in Chapter 7. We demonstrate CASS's scaling and anytime properties and then compare CASS to the two most widely-cited approaches to solving the WDP:</p><p>Sandholm's Bidtree algorithm and ILOG's CPLEX integer programming solver.</p><p>Chapter 9 investigates the empirical hardness of the winner determination problem. We identify a large number of distribution-nonspecific features of data instances and use statistical regression techniques to learn, evaluate and interpret a function from these features to the predicted hardness of an instance, focusing mostly on ILOG's CPLEX solver. Surprisingly, we find that it is possible to build very accurate models of running time, even though this value varies substantially on problem instances involving the same number of bids and goods.</p><p>Finally, Chapter 10 presents two applications of our empirical hardness models.</p><p>First, we show how to build algorithm portfolios that select among a set of black-box algorithms, and give experimental results using CPLEX, CASS and one other specialpurpose WDP algorithm. Second, we present techniques for using empirical hardness models to make benchmark distributions harder, and evaluate these techniques on the distributions introduced in Chapter 7.</p><p>Part I</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Game-Theoretic Issues in</head><p>Multiagent Resource Allocation 9</p><p>Chapter 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Congestion Management in Networks</head><p>We explore the problem of sharing network resources when users' preferences lead to temporally concentrated loads, resulting in an inefficient use of the network. In such cases external incentives can be supplied to smooth out demand, obviating the need for expensive technological mechanisms. Taking a game-theoretic approach, we consider a setting in which bandwidth or access to service is available during different time slots at a fixed cost, but all agents have a natural preference for choosing the same time slot. We present four mechanisms that motivate users to distribute the load by probabilistically waiving the cost for each time slot, and analyze the equilibria that arise under these mechanisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Introduction</head><p>Competition for network resources is intrinsic to a network's operation and leads to congestion. Since users access resources in a distributed and uncoordinated fashion, it is common for a network to experience congestion even when the average demand for a resource is much less than its capacity. Some of these congestion epochs are simply a product of the statistical nature of user access patterns and traffic types, and are thus unpredictable. To cope with this lack of coordination among users and the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">INTRODUCTION</head><p>unpredictability of congestion epochs, networks send "congestion signals" to users to help them share its resources in a fair and satisfactory fashion. For example, packets at a congested router may be either dropped or marked <ref type="bibr" target="#b21">[Floyd, 1994]</ref>.</p><p>A great deal of network congestion is not only caused by a lack of coordination, but also by users who aim to selfishly maximize the bandwidth available to them (see <ref type="bibr" target="#b109">Shenker [1995]</ref>). There exists a substantial body of work on the fair management of this sort of congestion in networks. In particular, the problem of designing congestion control and pricing mechanisms to provide differentiated qualities-of-service (QoS) in the Internet has received a lot of attention recently. The first common type of solution to this problem is technological: the network can erect "bandwidth firewalls" between packet flows using scheduling algorithms like Weighted Fair Queuing <ref type="bibr" target="#b18">[Demers et al., 1990]</ref>. Such scheduling algorithms decrease or eliminate the dependence of one flow's</p><p>QoS from the QoS of other flows. They can be difficult to implement in high-capacity routers, however, as they require the maintenance of per-flow state to distinguish, buffer and schedule the packets of individual flows. This has led researchers to explore trading off performance for simplicity of implementation, yielding router mechanisms that provide approximate fairness <ref type="bibr" target="#b22">[Floyd &amp; Jacobson, 1993;</ref><ref type="bibr" target="#b87">Pan et al., 2000;</ref><ref type="bibr" target="#b86">Pan et al., 2001</ref>].</p><p>An alternate line of research takes an economic approach to congestion management. Following this approach the network attempts to induce users to condition their flows; this avoids the implementation complexity inherent in erecting explicit bandwidth firewalls. Using ideas from economics, MacKie-Mason and <ref type="bibr" target="#b68">Varian [1994]</ref> argued that this incentive can be provided by charging agents for the damage caused to others by their ill-conditioned flows. This work proposes a "smart market" that uses bids to set a price for network usage at each of several time slots. <ref type="bibr" target="#b26">Gibbens and Kelly [1999]</ref> suggest charging a user for the role its packets play in causing congestion; see also <ref type="bibr" target="#b27">[Gibbens &amp; Key, 1999]</ref> and <ref type="bibr" target="#b48">[Key &amp; McAuley, 1999]</ref>. <ref type="bibr" target="#b83">Odlyzko [1997]</ref> proposes "Paris Metro Pricing": partitions of the network that behave identically but charge different prices, inviting users to choose the partition they believe will offer the best balance of cost and congestion.  In some situations, times of high demand are regular and predictable. Such focused loading can occur because many users' utility functions are maximized by using the network at some specific time. For example, early studies of long-distance telephone networks show a spike in usage when rates drop <ref type="bibr" target="#b74">[Mitchell, 1978]</ref>. <ref type="figure">Figure 2</ref>.1 is a representative graph adapted from p. 450 of this paper, which shows telephone network traffic versus time of day. Note that usage falls off before the 1 PM rate drop, spikes afterwards and then falls off again. A recent study <ref type="bibr" target="#b5">[Blair, 1998</ref>] considers dialup data traffic in Ireland and the UK-where ISPs provide free Internet access but users pay for the duration of their phone connections-showing that a focused load on the telephone network occurs due to an increase in data connections when phone charges drop. Web servers also experience focused loading just before deadlines, or just after new content or services are made available. While these times are known well in advance, users have no incentive to avoid accessing the web site close to the deadline and thus can cause server overloads or crashes, to which system managers typically respond by buying more resources.</p><p>What approaches would more directly address the source of the problem? It is instructive to examine a particularly elegant solution employed by radio broadcasters.</p><p>To boost audience levels, radio shows routinely offer prizes to listeners such as concert tickets, vacations and money. Listeners tune in, wait for a signal such as a particular song and then call in hoping to win the prize. Of course, this invites an episode of severe focused loading at the switch board of the radio station as many listeners simultaneously call. The brilliantly simple way out is to announce that "caller number 9" will be the winner. This provides an incentive for listeners to randomize their callin times-calling in too early or too late will not work-and the focused load is thereby diffused.</p><p>Of course, many of the general-purpose congestion management techniques surveyed above may also be applied to the special case of focused loading. We believe, however, that separate consideration of this special case is worthwhile, for two main reasons. First, the fact that focused loading occurs at very predictable times means that it is possible to know in advance the cases for which a specialized solution should be used. Second, the generality of the above congestion management techniques prevents them from explicitly taking into account information about agent valuation functions. Focused loading occurs because many agents prefer to use the network at the same time. This additional knowledge makes it possible to design mechanisms that collect more revenue and make fewer (e.g., computational) demands on the network.</p><p>In this work we propose a game theoretic model of the problem of defocusing predictable and time-dependent focused loads. We attempt to explain why techniques such as the radio show announcement can be effective, while also contributing a formal model that permits analysis. While we do not rely on any particularly advanced results from game theory or mechanism design, we do assume that the reader is familiar with such concepts as individual rationality, risk attitudes (e.g,. risk neutrality, risk aversion) and dominant strategies. Also in the game theoretic tradition, we refer to users as agents. Good introductions to the concepts listed above are provided in <ref type="bibr" target="#b24">[Fudenberg &amp; Tirole, 1991;</ref><ref type="bibr" target="#b85">Osborne &amp; Rubinstein, 1994]</ref>.</p><p>In Section 2.2 we give a formal model of the temporal resource contention problem, define metrics for evaluating agent distributions and related notions of optimality, and specify agent utility functions. In Section 2.3 we propose a simple mechanism under which load balancing is a weak equilibrium for agents who value slots identically. We strengthen this to a strict equilibrium in Section 2.4 and also prove that this mechanism is arbitrarily close to optimal. In Sections 2.5 and 2.6 we relax the assumption that all agents have identical utility functions and present two mechanisms that balance load when only bounds on agent valuations are known. Since these mechanisms cannot take into account exactly how much each agent would be willing to pay to use the network, these mechanisms are not optimal; however, we prove a bound on their optimality which depends on the tightness of the bound on agent utility functions.</p><p>If these mechanisms were used in the original case where agents value slots identically, then they too would be arbitrarily close to optimal. Finally, in Section 2.7 we summarize and compare the four mechanisms presented in this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Problem Definition</head><p>In order to motivate the notation that we will use throughout the chapter, it is helpful to begin with an example. Consider a network resource with a fixed number of identical time slots, where usage cost does not depend on the time slot. For example, consider a usage-based web service such as a pay-per-view streaming video service in which usage is divided into half-hour blocks from 7 PM to midnight. We assume that each agent wants to use the network during only one time slot, that each agent knows his own valuation for each slot, and that all agents' utilities are maximized by using the network during the same slot. For example, all agents might prefer to use the network from 7:00 to 7:30, having strictly monotonically-decreasing valuations for later slots as compared to earlier slots. Since time slots are priced identically, rational agents would all choose to use the network from 7:00 to 7:30, leading to a focused load. We further assume that although the capacity of the network resource is unlimited (e.g., hosted on an ASP) the operator of the resource has an exogenous desire for users to de-focus their demands (e.g., the ASP charges the operator for peak bandwidth used 1 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Mechanism Characteristics</head><p>In order to spread out the focused load, the network will provide agents with an incentive to choose slots other than s. In this chapter we will consider mechanisms in which agents are probabilistically spared the usage cost for the slot they choose. The cost of using the slot is waived according to a probability which depends on the slot chosen, and which is independent of the probabilities corresponding to other slots.</p><p>More formally, a mechanism Φ is defined by a tuple t, m, N, f (.) . The network operates over t time slots, where each slot has a fixed usage cost of m, and where the set N of n agents, a 1 . . . a n , intend to use the network. Each agent a i takes an action A i of using a slot. The function f : A 1 × · · · × A n → [0, 1] n maps the actions taken by all agents into individual probabilities P i that the cost of the slot chosen by a i will be</p><p>waived. Though f is specified by the mechanism, the network must draw from each P i to determine whether the usage cost will actually be waived for each agent. Note that the probability that each slot will be made free is determined independently. By q we denote the expected number of slots that will be offered to at least one agent for free. The distribution of agents is denoted d, and so d(s) is the number of agents who chose slot s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Agent Characteristics</head><p>We assume that all agents are risk neutral. Agent a i 's valuation for slot s is given by an arbitrary non-negative function v i (s). Let s i = arg max s v i (s) and s i = arg min s v i (s).</p><p>Because we are concerned with cases in which focused loading occurs we will assume that all agents have identical and unique most-and least-preferred slots, although this assumption is not required for any of our results. (If agents find several slots to be the most preferable, some amount of load balancing is likely to occur without any intervention by the network, as agents will distribute themselves across these slots.)</p><p>Therefore, we define constants s and s such that for all i, s i = s and s i = s. In Sections 2.3 and 2.4 we will make the assumption that all agents' valuation functions is a value between the mean and peak bandwidths, capturing the trade-off between the long-term average amount of bandwidth used by the connection and the instantaneous peak bandwidth consumption. See, for example <ref type="bibr" target="#b111">[Songhurst et al., 1999]</ref>, and the references therein.</p><p>are identical (in these sections we will use the notation v rather than v i to describe agents' valuations). Of course this assumption is not realistic; we relax it in Sections 2.5 and 2.6. Let v l and v u be lower and upper bounds on all agents' valuations,</p><formula xml:id="formula_0">respectively: i.e., ∀i, s v l (s) ≤ v i (s) ≤ v u (s).</formula><p>It is important to note that these bounds apply to all agents: in our model no agent has a valuation for slot s lower than v l (s) or higher than v u (s). 2 Using this notation, the restriction on agents' valuations in sections 3 and 4 can be understood as the case where ∀s v l (s) = v u (s).</p><p>Finally, each agent a i may also receive a signal from the network, denoted σ(a i ).</p><p>In our model, the decision faced by agents is simply to choose a slot s. </p><formula xml:id="formula_1">u i (ϕ) = t s 1 =1 . . . t s i =1 . . . t s n =1 n i=1 ϕ(i)(s i ) · v i (s i ) − 1 − f (s 1 , . . . , s n ) i m (2.1)</formula><p>We can now give a key definition:</p><formula xml:id="formula_2">Definition 2.1 ϕ is a Nash equilibrium of Φ if ∀i, ∀S, u i (ϕ) ≥ u i ({ϕ \ i, S}).</formula><p>2 While these bounds strengthen our results, the assumption that they exist is not unrealistic. The upper bound is easily justified by the fact that no agent is willing to pay an arbitrarily large amount. The lower bound is trickier, since agent a i might simply not be interested in using some slot s (i.e., v i (s) = 0). However, since we're interested in defocusing the load, in practice we will be considering time slots that agents want to use. Therefore, it is not unrealistic to assume that every agent has a non-zero valuation for every slot.</p><p>Intuitively, no agent can gain by unilaterally deviating from a Nash equilibrium.</p><p>This type of equilibrium is also referred to as a weak Nash equilibrium since it is possible that the agent receives equal utility from alternative strategies. When no such alternative exists, we have a strict Nash equilibrium:</p><formula xml:id="formula_3">Definition 2.2 ϕ is a strict Nash equilibrium of Φ if ∀i, ∀S = ϕ(i), u i (ϕ) &gt; u i ({ϕ \ i, S}).</formula><p>Equation (2.1) is complicated because it accounts for the calculation of the probability that slot s i is free, starting from a strategy profile. Although this definition of utility is necessary for discussing Nash equilibria, in other parts of the chapter we will find it more convenient to take as given the same distribution p for all agents, indicating the probability of each slot being free. We can then specify an expression for a i 's expected utility for choosing slot s:</p><formula xml:id="formula_4">u i (s) = v i (s) − 1 − p(s) m (2.2)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.3">Restrictions on the Class of Mechanisms</head><p>We now consider restrictions on the class of mechanisms that could be used to solve the focused loading problem, not to make the problem easier to solve, but in order to identify solutions with desirable characteristics. First, we introduce a restriction concerned with agents' incentives to participate (as discussed below, this condition is stronger than the standard mechanism design requirement of individual rationality).</p><p>Next, we discuss restrictions that could arise from implementation considerations and the case of continuous pricing.</p><formula xml:id="formula_5">Definition 2.3 A mechanism Φ is participation-safe if and only if m ≤ v l (s).</formula><p>We will consider only participation-safe mechanisms in this chapter; that is, we require that the fixed usage cost for the network resource must never exceed the lower bound on any agent's valuation for his most-preferred slot. Intuitively, this means that every agent will always be able to choose at least one slot in which his payment will never exceed his valuation, and hence that it will be rational for him to participate regardless of how the mechanism assigns free slots. Observe that participation-safety implies individual rationality, because, regardless of P i , agent a i can choose slot s and achieve a non-negative utility. Individual rationality does depend on P i , and thus is a weaker condition.</p><p>We do not restrict the class of mechanisms in order to simplify analysis. As it turns out, it is very easy to design and analyze mechanisms that have a fixed cost exceeding all agents' valuations, and then reward agents only when they behave as desired. Such mechanisms can have good theoretical characteristics (such as optimality, defined below) and can remain consistent with individual rationality by assuring agents nonnegative expected gain. Indeed, it turns out that in what follows, everywhere we prove ε-optimality or (c + ε)-optimality, we could prove optimality or c-optimality, respectively, if we were not restricted to participation-safe mechanisms. However, we believe that such mechanisms would be considered unreasonable to deploy in practice despite their theoretical benefits, because they address the problem of focused loading by threatening agents with unviable alternatives-slots whose expected costs exceed agents' valuations-rather than giving agents positive incentives to behave as desired.</p><p>Because of the difficulty of implementing complex protocols on a highly-loaded </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.4">Evaluating Outcomes</head><p>The network has two aims: to balance the load caused by the agents' selection of slots and to collect as much revenue as possible. We denote the network's expected revenue given a mechanism Φ and equilibrium ϕ as E <ref type="bibr">[R|Φ, ϕ]</ref>. The network collects a payment of m from each participating agent except for those who receive free slots.</p><p>Expected revenue is given by:</p><formula xml:id="formula_6">E[R|Φ, ϕ] = n i=1 t s 1 =1 . . . t s n =1 n i=1 ϕ(i)(s i ) · 1 − f (s 1 , . . . , s n ) i m (2.3)</formula><p>We define g as the monetary value to the network of the variance of load across the set of time slots. Lower variance corresponds to a more even load and thus to a higher dollar value; thus g must decrease strictly as variance increases. We will say that load is balanced when g is maximized, which corresponds to minimal variance.</p><p>We define the superlinear summation class of functions to be the set of functions in</p><formula xml:id="formula_7">which g(d) = −κ i h(d(i)),</formula><p>where h is superlinear in d(i) and κ is a constant that is used to indicate the relative importance of load balancing to the network. Note that this measure is only reasonable if we assume that each agent consumes about the same amount of load. The expected value of load balancing is given by:</p><formula xml:id="formula_8">E[g|ϕ] = d g(d)P rob(d|ϕ) (2.4)</formula><p>Maximizing revenue and maximizing g are conflicting goals, as it costs the network more to induce an agent to choose slot s than to choose slot s. Indeed, note that revenue is maximized in the original focused loading equilibrium when all agents choose s and ∀i P i = 0. According to our problem definition, agents are willing to distribute themselves this way, and thus this equilibrium can be achieved without waiving any agents' usage fees. In some systems this could be a desirable outcome; however, we have assumed that the mechanism designer would prefer at least some balancing of the load. The network must therefore trade off quality of load balancing against expected revenue; the degree of trade-off desired may be specified through the choice of κ. Given definitions of the expected values R and g, we can define z, the network operator's evaluation of equilibrium ϕ of mechanism Φ:</p><formula xml:id="formula_9">z(Φ, ϕ) = E[R|Φ, ϕ] + E[g|ϕ]</formula><p>(2.5)</p><p>It will be useful to define the best possible distribution of agents given a free slot distribution that applies to all agents. Imagine a mechanism Φ all in which all strategy profiles are in equilibrium, and P i = p(A i ) (i.e., the probability that a slot will be free for agent a i depends only on his action). Intuitively, this is the best distribution of agents for the mechanism, given the constraint that the free slot distribution must be the same for all agents. Note that this expression may not have a unique maximum. We will denote an ideal distribution d as d * .</p><p>Next, we define the optimality of an equilibrium under a mechanism. Essentially, an equilibrium of a given mechanism is optimal if there does not exist another equilibrium of any other mechanism that yields a higher expected value of z.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2.5 A mechanism-equilibrium pair (Φ, ϕ) is optimal if and only if for all</head><formula xml:id="formula_10">other pairs (Φ , ϕ ), z(Φ, ϕ) ≥ z(Φ , ϕ ), where n is held constant.</formula><p>This definition of optimality is problematic when agents have different valuation functions that are not known by the network-the case we take up in Sections 2.5 and 2.6. An optimal mechanism for this case would have to set each agent's expected payment to exactly his valuation for any slot chosen, by constructing a different P i for each agent. For every set of agents there does exist a set of such mechanisms. However, it is impossible to select such a mechanism based on the information available; furthermore such a mechanism will violate our restriction that it be participation-safe, because an agent a i who chooses slot s is charged v i (s), which can be exceed v l (s).</p><p>To overcome this difficulty we provide an alternate notion of optimality that bounds the average loss per agent as compared to an optimal mechanism:</p><formula xml:id="formula_11">Definition 2.6 A mechanism-equilibrium pair (Φ, ϕ) is c-optimal if and only if for all other pairs (Φ , ϕ ), z(Φ, ϕ) + cn ≥ z(Φ , ϕ ), where n is held constant and c &gt; 0.</formula><p>For convenience, we will also make use of the term [c-]optimal to refer to equilibria alone, in cases where the mechanism giving rise to the equilibrium is unambiguous.</p><formula xml:id="formula_12">Definition 2.7 An equilibrium ϕ is [c-]optimal if ϕ is an equilibrium of mechanism Φ, and (Φ, ϕ) is [c-]optimal.</formula><p>We call ϕ where all agents choose the same slot a focused-loading equilibrium.</p><p>We assume that g and v do not take values that would cause ϕ to be optimal. This assumption is only required for our proof of Theorem 2.9, but it is a reasonable one for us to make since if ϕ were optimal, we would have no problem to solve in the first place.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Preselection Mechanism</head><p>In this section we consider a simple mechanism, designed to make agents indifferent between all time slots despite their initial preferences. This mechanism will be formally referred to as Φ 1 , and informally called 'preselection', since it decides which slots will be free before observing the actions of the agents. This mechanism is unrealistic in several ways, and we do not discuss it here in order to propose that it should be used in practice. Indeed, such a mechanism is an obvious first approach to the problem of focused loading, and so it is important to demonstrate its insufficiency.</p><p>Furthermore, the exposition of this mechanism will prove useful as a starting point for the discussion of more sophisticated mechanisms.</p><p>Φ 1 works as follows:</p><p>1. The network determines free slots by drawing from p. (Thus,</p><formula xml:id="formula_13">P i = p(A i ).)</formula><p>2. Agents choose a slot.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Equilibria</head><p>We know from the definition of the problem that when there is no chance that they will win a free slot agents prefer slot s to slot s. We can overcome this preference by selecting an appropriate p(s). An agent's expected utility is given by</p><formula xml:id="formula_14">u i (s) = v(s) − (1 − p(s))m.</formula><p>Recall that we assume v l = v u until Section 2.5; here we use (unsubscripted) v to denote the valuation function that all agents share. We can make agents indifferent between slots by requiring that all time slots will have the same expected utility for agents: that is, that the expected utility derived from each time slot is equal to the average expected utility over all time slots. This is expressed by</p><formula xml:id="formula_15">the equation v(s) − 1 − p(s) m = 1 t i v(i) − 1 − p(i) m .</formula><p>Algebraic manipulation and q = Σ s p(s) give us:</p><formula xml:id="formula_16">p * (s) = 1 t qm + i v(i) −v(s) m (2.6)</formula><p>Observe that since free slots are free for all agents, q represents the expected number of free slots. Because we will find this probability distribution useful throughout the chapter, we have given it a name: p * .</p><p>If free slots are awarded according to p * , it is a weak Nash equilibrium for all agents to select a slot uniformly at random. We will call this equilibrium ϕ 1 . Consider the case where all other agents play according to ϕ 1 , and one remaining agent a i must decide his strategy. Since the choice of any slot entails equal utility on expectation, a i can do no better than to randomly pick a slot. Again, ϕ 1 is only a weak equilibrium:</p><p>indeed, there is no strategy a i could follow that would make him worse off.</p><p>We now make several remarks about the preselection mechanism. First, note that the above analysis assumes that a i is risk-neutral. If a i is risk-averse, he will prefer slot s, since it gives the largest fixed payment, v(s). Second, this mechanism is not susceptible to collusion, because each agent is indifferent between all pure strategies regardless of the actions of other agents. Finally, since all strategy profiles are weak equilibria under the preselection mechanism, it would be reasonable to ask why we pay special attention to ϕ 1 . It may be argued that randomization is a "natural" response to indifference, and so we will consider this as a primary case in the next subsection; however, none of our results depend on the assumption that agents will choose this strategy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Bounds on q and m</head><p>It appears that deviation from ϕ 1 will never be profitable for agents, since we have guaranteed that all slots provide the same expected utility. Consider the most profitable deviation, from s to s. We have claimed that the utility of both slots is the</p><formula xml:id="formula_17">same: v(s) − 1 − p(s) m = v(s) − 1 − p(s) m.</formula><p>However if qm is too small or too large, p(s)−p(s) &gt; 1 will hold. Since we want to interpret p(s) and p(s) as probability measures, we must add the constraints p(s) ≥ 0 and p(s) ≤ 1. Without these constraints, the equation for p * still makes sense if we consider continuous pricing rather than our default model of free/non-free slots; p &gt; 1 corresponds to an expected slot cost of less than zero (paying agents to choose a slot) while p &lt; 0 corresponds to an expected slot cost of more than m. Substituting p(s) ≥ 0 into Equation (2.6) and</p><p>rearranging, we get:</p><formula xml:id="formula_18">q ≥ tv(s) − Σ i v(i) m (2.7)</formula><p>For the second condition, we require that p(s) ≤ 1, which gives us:</p><formula xml:id="formula_19">q ≤ t v(s) + m −Σ i v(i) m (2.8)</formula><p>We must also ensure that a value of q exists for a given m and v. Intersecting the two bounds and simplifying, we get:</p><formula xml:id="formula_20">m ≥ v(s) − v(s) (2.9) Indeed, if m &lt; v(s) − v(s)</formula><p>then if an agent were certain to win a free slot in s and guaranteed never to win a free slot in s, he would still prefer s to s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">Maximizing Revenue</head><p>Equation <ref type="formula">(2.</ref>3) gave a general expression for E <ref type="bibr">[R|Φ, d]</ref>. However, under equilibrium ϕ 1 all agents randomly select a slot, which allows us to write an expression for E[R|Φ 1 , ϕ 1 ] that does not include a summation. In ϕ 1 expected revenue is given by the percentage of non-free slots times cost per slot times number of agents:</p><formula xml:id="formula_21">E[R|Φ 1 , ϕ 1 ] = 1 − q t mn (2.10)</formula><p>Increasing m will increase expected revenue; however, recall that we require that the mechanism be participation-safe, and hence that m ≤ v l (s). Regardless of the particular value of m, reducing q (the expected number of free slots) will increase expected revenue.</p><p>We will now show how the network can maximize revenue. We define v avg as 1 t s v(s). The requirement that an agent's utility for slot s must be greater than or equal to zero-i.e., that v(s) − 1 − p(s) m ≥ 0-can be rewritten, substituting in</p><formula xml:id="formula_22">p * , as v avg − (1 − q t )m ≥ 0.</formula><p>The seller's revenue will be maximized when all agents get zero utility. Thus we must have:</p><formula xml:id="formula_23">1 − q t m = v avg (2.11)</formula><p>We substitute in the lower bound for q from Equation (2.7): i.e., q = 1 m tv(s) − Σ i v(i) . Rearranging for m, we get m = v(s). This satisfies Equation (2.9) and ensures that the mechanism is participation-safe, so we are done. This is intuitive because when we minimize q we set p(s) = 0. We know that agents are indifferent between all slots, and so agents will be willing to choose any slot when the cost of s does not exceed their valuation. We thus set m = v(s) and (plugging m into the lower bound on q) q = t 1 − v avg /v(s) .</p><p>We have shown that each agent can be made to pay an expected amount exactly equal to his utility for any slot he chooses. However, ϕ 1 is not guaranteed to achieve an ideal distribution of agents, and therefore ϕ 1 is not optimal. The easiest way to show this is to present another equilibrium of the preselection mechanism that is optimal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.4">Optimal Equilibria</head><p>Consider an equilibrium in which each of the agents deterministically chooses one slot.</p><p>(Recall that any strategy is rational under Φ 1 , and thus that any set of strategies is a weak equilibrium.) In one such equilibrium, agents deterministically choose slots so that the distribution of all agents is ideal; we will call this equilibrium ϕ * 1 . Unsurprisingly, we can show:</p><formula xml:id="formula_24">Theorem 2.8 (Φ 1 , ϕ * 1 ) is optimal.</formula><p>Remark. Recall that a mechanism-equilibrium pair is optimal when there does not exist another mechanism that has an equilibrium giving rise to a distribution that yields a higher value according to the evaluation function z.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Let E[R i |Φ, ϕ] be the expected revenue extracted from agent a i , given mechanism Φ and equilibrium ϕ. First, we prove by contradiction that Φ 1 yields at least as large a z as any other Φ, both given the same equilibrium of the respective mechanisms. Assume that there exists a pair (Φ, ϕ) such that z(Φ, ϕ) &gt; z(Φ 1 , ϕ). Second, we consider the case where Φ and Φ 1 give rise to different equilibria. As described above, under ϕ * 1 agents deterministically distribute themselves so as to give rise to the distribution d * . Recall that d * is an ideal distribution:</p><formula xml:id="formula_25">∀ϕ z(Φ 1 , ϕ * 1 ) ≥ z(Φ 1 , ϕ) . Thus, ∀Φ, ϕ z(Φ 1 , ϕ * 1 ) ≥ z(Φ 1 , ϕ) ≥ z(Φ, ϕ).</formula><p>The equilibrium ϕ * 1 is optimal, but it is extremely unlikely that it would arise through the choices of real agents. As mentioned above, the fact that agents are indifferent between all slots means that every combination of agent strategies is a weak equilibrium. In fact, the preselection mechanism gives rise to many equilibria that minimize g(d). For example, the case in which all agents choose slot s is a weak equilibrium. Since discouraging focused loading is the purpose of the preselection mechanism, it is undesirable to find that such behavior remains an equilibrium! However, this drawback is inherent to the setting as we have modeled it so far; a preselection mechanism can only yield weak equilibria or focused-loading equilibria.</p><p>Theorem 2.9 When agents have identical utility functions and no signals are given to agents and the network preselects p before agents move, all equilibria are either weak or focused-loading.</p><p>Remark. Intuitively, this proof shows that under the conditions of the preselection mechanism any incentive given to one agent is given to all the agents, and that the mechanism designer must therefore choose between encouraging all agents to choose the same slot and making all agents indifferent between a set of slots.</p><p>Proof. Consider two agents a i and a j , without restriction. The network has only three choices with respect to a i 's preferences:</p><p>1. a i strictly prefers some slot s k to every other slot. However, every other agent a j has the same preference. Therefore, no agents will choose any other slot. This is a strict equilibrium, but it is also a focused-loading equilibrium.</p><p>2. a i will (non-strictly) prefer some slot s k to all other slots: he will strictly prefer s k to s l , and will be indifferent between s k and at least one other slot. Thus no agents will choose slot s l , and g will not be minimized. Any set of mixed strategies over slots between which agents are indifferent will constitute a weak equilibrium.</p><p>3. a i is indifferent between all pairs of slots s k and s l . In this case a i receives the same payment regardless of his action, so randomizing uniformly over all the slots is not a dominated strategy. Indeed, randomization is a weak, loadbalancing equilibrium, as shown above.</p><p>The only strict equilibrium is a focused-loading equilibrium; all other equilibria are weak.</p><p>In fact, we can show another negative result: there does not exist an optimal mechanism that is participation-safe and that gives rise to a strict equilibrium.</p><p>Theorem 2.10 There does not exist an optimal (Φ, ϕ) for which ϕ is a strict equilibrium and m ≤ v(s).</p><p>Proof. We will prove this statement by contradiction. Assume that there exists an optimal (Φ, ϕ) in which ϕ is a strict equilibrium. Since ϕ is a strict equilibrium, the difference (call it x) between expected utility from slot s and the highest expected utility of any other slot must be positive. By the assumption that m ≤ v(s), deviation to s would result in no less than 0 utility. Thus by strictness of ϕ, agents in slots s = s have positive expected utility of x. If we create Φ by altering P i so that the expected utility of s is decreased by x, then the revenue is increased, and it is still an equilibrium (albeit weak) for a i to select slot s. The fact that revenue is higher in (Φ , ϕ) than (Φ, ϕ) but that both give rise to the same distribution contradicts the claim that (Φ, ϕ) is optimal.</p><p>Theorem 2.10 shows that strict, optimal equilibria do not exist for participationsafe mechanisms. However, if we allow networks with different characteristics than those we allowed in this section, we can see that it is possible to get close to a strict, optimal equilibrium when agents have identical utility functions and no signals are given to agents, and p depends on the agents' actions. Intuitively, consider a mechanism that sets p = (1 + ε)p * if agents achieve an ideal distribution, and p = 0</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>28</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. CONGESTION MANAGEMENT IN NETWORKS</head><p>otherwise. Further, consider a set of (pure) agent strategies where agents happen to distribute themselves according to d * for p * (s). This is an equilibrium because agents are penalized for deviating. Intuitively, it is nearly optimal because agents achieve an ideal distribution with respect to the mechanism, and the probability of awarding free slots is arbitrarily close to the probability from the optimal mechanism-equilibrium pair described in theorem 2.8. However, it would be extremely difficult for agents to coordinate to this equilibrium in real play. In the next section we will show how the use of a non-binding coordination phase before the selection of slots can help agents to reach strict, nearly-optimal equilibria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Bulletin Board System Mechanism</head><p>In this section we assume that agents are given a bulletin board system: a forum in which all communications are visible to all agents and the identity of agents is associated with their transmissions. For simplicity, we allow a very limited form of communication: agents indicate the slot that they intend to choose. We assume that agents do not all indicate slots at the same time; rather, they indicate sequentially during the first phase. Let d j (s) denote the number of agents who have indicated that they will choose slot s after a total of j agents have posted to the bulletin board. d * will again be the ideal distribution for p * (s). Agents' communications through the bulletin board are cheap talk : a technical term that indicates that these communications are not binding in any way. Even so, the bulletin board can help agents to coordinate on desirable equilibria. Mechanism Φ 2 follows: 1. The network picks "potentially free" 3 slots according to (1 + ε)p * .</p><p>2. Agents communicate through the bulletin board.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Agents choose time slots.</head><p>4. If d = d * , then "potentially free" slots are made to be free. That is,</p><formula xml:id="formula_26">P i = p * (A i ).</formula><p>Otherwise, all agents are made to pay for their slots (P i = 0).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.1">Equilibria</head><p>A strict equilibrium in Φ 2 , which we call ϕ 2 , is for the i th agent to indicate on the bulletin board a slot s such that d i−1 (s) &lt; d * i (s), and ultimately to choose that slot s. Consider the case where all other agents follow ϕ 2 and agent a i must decide his strategy. If a i cooperates and chooses slot s then the distribution of agents will be d * and so a i will receive an expected utility of v(s) − 1 − (1 + ε)p * (s) m. If a i defects to slot s , one of two cases will result. In the first case, agents indicating their choices after a i will compensate for his deviation by choosing different slots; thus a i will receive the same expected utility as he would have received if he had not deviated.</p><p>In the second case, a i will be late enough in the sequence of agents indicating their choices that the agents who indicate after him will be too few to bring the distribution back to d * . In this case a i will receive an expected utility of v(s ) − m. The key point is that a i does not know the total number of agents, and so he must assign non-zero probability to the second case, regardless of the number of agents who have already indicated. Furthermore, we must show that a i will choose the slot he indicated on the bulletin board even though his selection was not binding. If all other agents follow ϕ 2 then there is clearly no incentive for a i to choose a different slot than he indicated, because that would certainly prevent d = d * and reduce his payoff. Therefore ϕ 2 is strict as long as v(s) + (1 + ε)p * (s)m &gt; v(s ) for all s, s such that 1 ≤ s, s ≤ t.</p><p>Simplifying, we derive the conditions similar to those described in Section 2.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>tv(s)</head><formula xml:id="formula_27">− Σ i v(i) m ≤ q ≤ t v(s) + m 1+ε −Σ i v(i) m (2.12)</formula><p>Again, we must intersect the two bounds to get a bound on m, which we combine with the constraint on participation-safe mechanisms:</p><formula xml:id="formula_28">(1 + ε) v(s) − v(s) ≤ m ≤ v(s) (2.13)</formula><p>This equilibrium relies on the fact that each agent can choose a slot as if he were the last agent and achieve the distribution d * , even if all agents before him chose slots in this same way. We prove that this greedy approach works in Section 2.4.2.</p><p>An analysis of the possibility of collusion in the bulletin board mechanism is not appropriate, because agents are already encouraged to coordinate with each other.</p><p>Any agent or cartel of agents who deviated would hurt themselves along with all other agents.</p><p>It is well known that any game having an equilibrium arising from cheap talk coordination has other equilibria in which agents ignore the cheap talk <ref type="bibr" target="#b15">[Crawford &amp; Sobel, 1982]</ref>. The bulletin board mechanism is no exception. All agents choosing s (focused loading) is an equilibrium when the resulting d could not be transformed into d * by one agent choosing a different slot. Note, however, that ϕ 2 Pareto-dominates all equilibria where the cheap talk is ignored and a different distribution results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.2">Greedy Assignment of Slots</head><p>In ϕ 2 each agent chooses a slot that would result in an optimal distribution if he were the last agent to post to the bulletin board. For this reason it is important to show that we can assign slots to agents greedily, with the guarantee of achieving the ideal distribution for whatever number of agents eventually participate.</p><p>We must introduce new notation to describe changes as each agent chooses a slot in turn. (Readers who do not intend to read the proof for lemma 2.11 can safely skip to section 2.4.3.) First, we will subscript d to indicate the total number of agents in the distribution, so that we can describe the distributions that result after only a subset of agents have chosen slots. By d * i we denote the optimal distribution of i agents. Second, we define ∆(d i , s) to be the increase in z if one agent is added</p><formula xml:id="formula_29">to slot s, relative to d i . Define the decomposition ∆(d i , s) = ∆ E (d i , s) + ∆ g (d i , s), where ∆ E (d i , s) is the increase in E[R|Φ, d i ], and ∆ g (d i , s) is the increase in g(d i ). In equilibrium ∆ E (d i , s)</formula><p>does not depend on d i , but only on p(s) and m. (We assume here that p does not depend on d * i .) Two properties follow from the fact that g is superlinear summation:</p><formula xml:id="formula_30">1. ∆ g (d i , s) is strictly monotonically decreasing in d i (s) 2. ∆ g (d i , s) = ∆ g (d j , s) for all distributions d j where d j (s) = d i (s)</formula><p>Since ∆ E does not depend on d i , ∆ also has these properties.</p><p>We now describe a function γ: let γ(i) represent the slot number that will be assigned to a i , where a i is the i th agent to register. Let d γ i (s) be the number of times s occurs in {γ(1), . . . , γ(i)}. We note that ∀s∆(d γ 0 (s)) = 0. We can now inductively define γ: γ(i) = arg max s∆(d γ i−1 (s)).</p><formula xml:id="formula_31">Lemma 2.11 ∀i d γ i is ideal under Φ 2 .</formula><p>Remark. This lemma demonstrates that greedy assignment of slots to agents leads to an ideal distribution when we assign slots according to γ as defined above. Recall that an ideal distribution is defined in Definition 2.4.</p><formula xml:id="formula_32">Proof. Define d i ≥ d j as ∀s d i (s) ≥ d j (s).</formula><p>We will prove the following statement that is stronger than the theorem: ∀j, i ≥ j, there exists an ideal distribution d * i such that d * i ≥ d γ j . We will first prove this statement by induction on j. The base case, where j = 0, trivially holds because ∀s d γ 0 (s) = 0. For the inductive step, assume that there exists a d *</p><formula xml:id="formula_33">i for all i ≥ j such that d * i ≥ d γ j , in order to prove that there exists a d * i for all i ≥ j + 1 such that d * i ≥ d γ j+1</formula><p>. From the inductive assumption we know that there exists a d * i ≥ d γ j for each i ≥ j + 1. Let s k = γ(j + 1): hence s k = arg max s∆(d γ j , s). We now prove that there exists an ideal distribution d * i consistent with this greedy choice. <ref type="bibr">d, s, c)</ref> be distribution d but with c agents added to slot s. Let d = Υ(d * i , s l , −1), and let d = Υ(d , s k , 1). We know from the first property of ∆ that ∀s (∆(d , s) ≤ ∆(d γ j , s)), since d ≥ d γ j . Similarly, from the second property of ∆ we know that ∆(d ,</p><formula xml:id="formula_34">If d * i (s k ) ≥ d γ j (s k ) + 1, then d * i = d * i . Otherwise, d * i (s k ) = d γ j (s k ). Consider a slot s l where d * i (s l ) ≥ d γ j (s l ) + 1. Let Υ(</formula><formula xml:id="formula_35">s k ) = ∆(d γ j , s k ), since d (s k ) = d γ j (s k ). Therefore, s = s k maximizes ∆(d , s). This implies that z(Φ, d ) ≥ z(Φ, Υ(d , s l , 1)). Since Υ(d , s l , 1) = d * i is ideal, d must also be ideal. Since d ≥ d γ j+1</formula><p>, we have proven the inductive step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.3">ε-Optimality</head><p>Although theorem 2.10 showed that the bulletin board mechanism cannot be optimal, it turns out that it can be made arbitrarily close to optimal. We now show that there exists no other equilibrium of any other mechanism which will yield a value of z larger than z(Φ 2 , ϕ 2 ) + ε for arbitrarily small ε.</p><formula xml:id="formula_36">Theorem 2.12 (Φ 2 , ϕ 2 ) is ε-optimal.</formula><p>Remark. This is a key result, because it shows that we can get arbitrarily close to an optimal equilibrium with a mechanism that could actually be used in practice.</p><p>Furthermore, the fact that the equilibrium is strict is encouraging, because it means that an agent could not reduce z by deviating from ϕ 2 without also reducing his own utility.</p><p>Proof. First, we prove by contradiction that Φ 2 yields z that is within nε of any other Φ, both given the same equilibrium. Assume that there exists a pair (Φ, ϕ) such that z(Φ, ϕ) &gt; z(Φ 2 , ϕ) + nε. Since the equilibrium is the same for both mechanisms, we can expand z on both sides and simplify to get E <ref type="bibr">[R|Φ, ϕ]</ref> </p><formula xml:id="formula_37">&gt; E[R|Φ 2 , ϕ]+nε, which implies E[R i |Φ, ϕ] &gt; E[R i |Φ 2 , ϕ] + ε for at least one agent a i . Φ 2 sets values of p, q and m so that for all slots agent a i 's expected utility is v(s) − E[R i |Φ 2 , ϕ] = ε. Thus for Φ we have ∀s u i (s) &lt; 0, implying that Φ is non-participation-safe, a contradiction.</formula><p>Second, we now consider the case where Φ and Φ 2 have different equilibria. As shown above in lemma 2.11, the ideal distribution d * is achieved by (Φ 2 , ϕ 2 ), hence</p><formula xml:id="formula_38">∀Φ, ϕ z(Φ 2 , ϕ 2 ) ≥ z(Φ 2 , ϕ) ≥ z(Φ, ϕ) − nε.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.4">Implementation Considerations</head><p>We point out that ε-optimality means that the mechanism can lose ε per agent; in practice, ε would have to be large enough to overcome agents' indifference between nearly-identical payoffs and encourage them to coordinate.</p><p>Although we speak about agent strategies throughout this chapter, it is worthwhile to note that in a real system these strategies would probably be implemented in software that most users would not be able to change easily. Of course, this is not an argument against equilibrium analysis or the careful design of economic mechanisms.</p><p>If agents could gain by deviating, there would be an incentive for users to change their software, and once software has been modified it is easily redistributed. However, the fact that the mechanism designer could in many cases distribute client software is significant because it can act as a coordination device: agents' common knowledge of using the same software could help them to coordinate to an equilibrium the mechanism designer has preselected. Although the bulletin board mechanism gives rise to non-ε-optimal equilibria, these might be avoided if client software helped agents to coordinate to ϕ 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Collective Reward Mechanism</head><p>We now consider the more general and realistic case where each agent may have a different v i , bounded by v l and v u , as described in Section 2.2. Recall that since the network does not know each agent's v, we can no longer tune m, q, and p to extract the maximum amount of revenue from each agent.</p><p>In this section we also allow the network to give signals to agents, to allow the agents to coordinate to a desirable equilibrium; we also show how collective reward may be used to prevent agents from deviating. We define mechanism Φ 3 as follows:</p><p>1. Each agent indicates that he will participate.</p><p>2. The network gives a signal to each agent from {1, . . . , t}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Agents choose time slots.</head><p>4. The network determines whether each slot will retroactively be made free.</p><p>In this mechanism, the chance that slot s will be free, p(s), depends on the number of agents who chose slot s, d(s). Let count(s) be the number of agents who were given the signal s. Define d + (s) = d(s) − count(s). For the collective reward mechanism Φ 3 :</p><formula xml:id="formula_39">p(s) = p b (s) if d + (s) ≤ 0 0 if d + (s) &gt; 0 (2.14) Thus P i = p b (A i ) if d + (s) ≤ 0 and P i = 0 otherwise, where p b (·) is defined below.</formula><p>We will assign signals to agents so that count(s) = d * (s), where d * is now ideal for p b (s). The idea of this mechanism is that agents who choose the slot s to which they are assigned will get that slot free with probability p b (s), and agents who deviate to another slot will pay m. The p(s) used for this mechanism will thus differ from p(s) for the previous two mechanisms. The intuitive reason for the change is that in Φ 1 and Φ 2 we used p to make agents indifferent between all slots. Now, however, we use p so that agents will not deviate from an assignment to a particular slot. We will construct p b so that each agent a i will choose his assigned slot even when a i has the lowest possible valuation for the slot corresponding to his signal, and the highest possible valuation for s, the most profitable slot to which he could deviate. When an agent is assigned a slot s = s, this condition can be formalized as:</p><formula xml:id="formula_40">v l (s) − 1 − p b (s) m = v u (s) − m + ε (2.15)</formula><p>Here as before ε is a small, positive value used to make agents strictly prefer the slot to which they are assigned. It can be interpreted as an offset to v u , giving us a strict upper bound on agents' utilities. If we make an agent with this impossibly high valuation for slot s indifferent between his assigned slot and s, then any agent who actually plays the game must prefer his assigned slot. We can now derive p b :</p><formula xml:id="formula_41">p b (s) = v u (s)−v l (s)+ε m if s = s 0 if s = s (2.16)</formula><p>The case of s = s is considered separately because an agent assigned to this slot has no incentive to deviate. Note that if v i (s) = v i (s) is possible for an s = s, then we would have to change the definition of p b to maintain a strict equilibrium, giving ε probability of awarding s free.</p><p>We now need to give bounds on m. The condition that p b (s) ≤ 1 can be rewritten, combined with the requirement that the mechanism be participation-safe, as:</p><formula xml:id="formula_42">v u (s) − v l (s) + ε ≤ m ≤ v l (s) (2.17)</formula><p>For Φ 3 q is defined as:</p><formula xml:id="formula_43">q = i =s v u (s) − v l (i) + ε m (2.18)</formula><p>To maximize expected revenue, the collective reward mechanism sets m to its upper bound of v l (s).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.1">Equilibria</head><p>An equilibrium ϕ 3 is for each agent a j to select the slot corresponding to his signal. 4</p><p>Consider the case where all other agents follow this strategy, and one remaining agent a i decides his strategy. If agent a i selects slot s as above, then his expected utility</p><formula xml:id="formula_44">is u i (s) = v i (s) − 1 − p b (s) m.</formula><p>Deviating to even the best slot only gives him</p><formula xml:id="formula_45">u i (s) = v i (s) − m.</formula><p>We have defined p b so that in this case a i strictly prefers slot s.</p><p>There are no equilibria of the collective reward mechanism for which d = d * .</p><p>Consider any distribution of agents such that d = d * . There must be some s 1 such that d + (s 1 ) &lt; 0, and some other s 2 such that d + (s 2 ) &gt; 0. An agent in s 2 thus has no chance of a free slot, and he receives utility of at most v i (s) − m. If he switches to s 1 , then his probability of receiving a free slot becomes p b (s 1 ) because d + (s 1 ) ≤ 0. Since p b is constructed so that this agent receives more utility, on expectation, than v i (s) − m, he has incentive to move to slot s 1 . However, there do exist equilibria in which agents do not select slots corresponding to the signals they receive. For example, consider the case where agent a i deterministically selects the slot σ(n + 1 − i). (Note that this could occur even if agent a i did not know what signal agent a n+1−i receives.) In this case the distribution of agents is d * , and so the analysis above demonstrates that all agents have a disincentive to deviate. Another example is where all agents select the slot corresponding to their signals except where agent a i chooses slot σ(j) and agent a j chooses slot σ(i).</p><p>Harmful collusion is not possible under the collective reward mechanism. A single agent who deviates from ϕ 3 can harm other agents by denying them a chance at a free slot. However, no set of agents is able to improve other agents' chance of getting a free slot, and so there is no way that a cartel of agents could benefit from colluding.</p><formula xml:id="formula_46">Theorem 2.13 (Φ 3 , ϕ 3 ) is c-optimal for c = max s v u (s) − v l (s) +ε.</formula><p>Remark. Because it depends on bounds rather than on agents' actual valuations, ϕ 3 is not optimal. However, this theorem shows that we can prove a bound on the optimality of ϕ 3 , showing that the network can lose no more than max s v u (s) − v l (s) +ε in revenue from each agent. </p><formula xml:id="formula_47">Theorem 2.14 (Φ 3 , ϕ 3 ) is c-optimal for c = max s v u (s) − v l (s) +ε. Proof. Define v l+c−ε (s) = v l (s)</formula><formula xml:id="formula_48">in equilibrium of Φ a 3 , Φ l 3 or Φ l+c−ε 3 is: (1 − p(s))m = (1 − v(s)−v(s)+ε v(s) )v(s) = v(s) − ε.</formula><p>We also make the change that each of these variants of Φ 3 sets ε = 0 when it determines p b . This has the consequence that equilibrium ϕ 3 still holds but is no longer strict. Each variant will then extract the full v(s) from each agent in ϕ 3 . Each of these mechanism-equilibrium pairs is optimal, following an argument analogous to the one given in the proof of theorem 2.8 (not given here): the mechanism makes each agent pay exactly his valuation, and achieves an ideal distribution. Thus, for any set of arbitrary v functions that Φ 3 encounters, z(Φ a 3 , ϕ 3 ) represents the optimal evaluation. We now bound how far Φ 3 can be from this amount.</p><formula xml:id="formula_49">By definition, z(Φ l 3 , ϕ 3 ) = g(d l ) + i v l (s i ). We know that d l+c−ε = d l be- cause v l+c−ε differs only by a constant from v l at each slot. Thus, z(Φ l+c−ε 3 , ϕ 3 ) = z(Φ l+c−ε 3 , ϕ 3 ) = g(d l ) + i v l+c−ε (s i ) = g(d l ) + i v l (s i ) + (c − ε)n. This implies that z(Φ l 3 , ϕ 3 ) + (c − ε)n = z(Φ l+c−ε 3 , ϕ 3 ); it remains to show that z(Φ l+c−ε 3 , ϕ 3 ) ≥ z(Φ a 3 , ϕ 3 ). Note that z(Φ l+c−ε 3 , ϕ 3 ) ≥ z(Φ l+c−ε 3 , ϕ 3 ) by definition of d l . Also, z(Φ l+c−ε 3 , ϕ 3 ) ≥ z(Φ a 3 , ϕ 3 ) because v l+c−ε is an upper bound on each of the v's in the case of Φ a 3 and g(d a ) is common to both terms. Thus z(Φ l 3 , ϕ 3 ) + (c − ε)n = z(Φ l+c−ε 3 , ϕ 3 ) ≥ z(Φ a 3 , ϕ 3 )</formula><p>. Now we return to the real Φ 3 . The optimal distribution is d l , and in ϕ 3 the network extracts ε less revenue from each agent than Φ l 3 did because it does not set ε = 0. Thus, z(Φ 3 , ϕ 3 ) + nε = z(Φ l 3 , ϕ 3 ). Combining the last two equations, we can conclude: z(Φ 3 , ϕ 3 ) + cn ≥ z(Φ a 3 , ϕ 3 ), and thus that ϕ 3 is c-optimal.</p><p>It follows from this statement that if we revert back to the setting from Sections 2.3 and 2.4 (where v u (s) = v l (s)), the network will lose only ε in revenue from each agent. It is only the change to bounds on valuation functions that causes the weaker claims on optimality for this mechanism and the next.</p><formula xml:id="formula_50">Corollary 2.15 (Φ 3 , ϕ 3 ) is ε-optimal for v l = v u .</formula><p>Proof. This follows directly from the preceding theorem, because v l = v u implies that c = ε.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.2">Implementation Considerations</head><p>We observe that it may involve less overhead to assign single, persistent signals to agents if the game will be repeated many times. In this case, the collective reward mechanism may be used as above but without the signalling phase, and with each agent a j who did not participate counted by d + as having participated in slot σ(j). This allows ϕ 3 to hold in the case where signals are not assigned repeatedly with the penalty that ϕ 3 will only be c-optimal for c = max s v u (s) − v l (s) +ε when all agents participate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Discriminatory Mechanism</head><p>A disadvantage of the bulletin board mechanism is that it reimburses some agents at the end of the game rather than simply waiving their fees. This requires tracking individual agents' behavior and executing more financial transactions, both of which could be costly to the network. Also, the bulletin board mechanism has non-optimal equilibria. Finally, irrational agents can harm others in both the bulletin board and collective reward mechanisms. These problems are eliminated by the discriminatory mechanism, Φ 4 , which makes use of agent signals and also discriminates by offering different free slots to different agents (although, as we will see in Section 2.6.2 it makes new demands of the network that will sometimes be undesirable):</p><p>1. Each agent indicates that he will participate.</p><p>2. The network assigns signals to agents from {1, . . . , t} according to the d * that is ideal for p b .</p><p>3. The network chooses "potentially free" slots according to p b .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Each agent indicates what slot he selects.</head><p>5. The network checks only those agents in each slot s i that was picked to be "potentially free" (for all agents who chose other slots, P i = 0) . If agent a j in slot s i has σ(a j ) = s i then P j = p b (A j ); otherwise P j = 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6.1">Equilibria</head><p>Agent a i 's dominant strategy is to choose the slot corresponding to his signal. The analysis exactly follows that for ϕ 3 ; we call this equilibrium ϕ 4 . The only difference is that an agent's expected utility does not depend on other agents' strategies, and hence ϕ 4 is an equilibrium in dominant strategies. A consequence is that ϕ 4 is unique.</p><p>By exactly the same argument that was given in the proof of theorem 2.13, (Φ 4 , ϕ 4 ) is c-optimal for c = max s v u (s) − v l (s) +ε. The same corollary also holds, and so</p><formula xml:id="formula_51">(Φ 4 , ϕ 4 ) is ε-optimal for the special case where v u = v l .</formula><p>It may seem disappointing from a game-theoretic point of view that neither strategy nor even payoffs under the discriminatory mechanism depend on the actions of other agents. However, this may be seen as an advantage of the discriminatory mechanism, since irrational agents are not able to harm others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6.2">Implementation Considerations</head><p>As compared to the collective reward mechanism, the discriminatory mechanism makes two additional demands of the network. First, the network must keep track of the signals that are given to agents in the second step, so that they can be verified in the fifth step. In collective reward the system does not need any sort of user accounts; rather, it greedily assigns signals to agents, recording only the number of agents who received each signal.</p><p>Second, the discriminatory mechanism requires the network to verify user identities. In contrast, the collective reward mechanism simply counts the number of agents who chose each slot. Under the discriminatory mechanism the network only has to check the identity of agents from q slots on expectation, since agents who choose a slot that is not potentially free do not have to be checked. It would be possible for the network to assume that all agents in possibly free slots have played according to the dominant strategy and to randomly check only a subset of the agents in these slots, but this would reduce the penalty for defection and thus sacrifice c-optimality.</p><p>In order to permit this verification, the mechanism can assign signals to agents in two different ways. The obvious option is to assign signals to agents as described in theorem 2.11, to store the numbers in some sort of user account requiring login and then to verify that agents selected the appropriate slot by requiring them to log in again before using the network resource. This approach requires further data storage by the mechanism, but the resulting d will be ideal and thus the mechanism will be c-optimal as argued above. If this data storage is not desirable, a deterministic function may be used to calculate the slot that may be offered free to a given agent, and the same function may be used to determine whether each agent has selected the appropriate slot. For example, a hash of the agent's IP address-or of any other identifying information from the packet header-could be used. This approach has the disadvantage that it sacrifices optimality and for steps 2 and 5 in the mechanism, but the advantage that no information about identifying individual agents must be stored by the mechanism. 5 Indeed, if the function itself is publicized then the first two steps may be omitted from the mechanism, requiring only one interaction between agents and the network. <ref type="table" target="#tab_6">Table 2</ref>.1 summarizes and contrasts the mechanisms discussed in this chapter. For convenience, we have divided the display into three parts: (i) a list of mechanism characteristics, (ii) a comparison of the outcomes of the mechanisms, and (iii) costs associated with executing the mechanisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.7">Comparison of Different Mechanisms</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8">Conclusions</head><p>Focused loading is a predictable network congestion problem. It is caused by a preference users have for transacting with a network resource at a specific time when the network charges transactions equally over a period of time. For example, focused loading frequently causes web servers to crash. In this chapter we have taken an economic approach to de-focusing load by devising incentive schemes for encouraging users to desynchronize their transaction times. While general congestion-management techniques may be applicable to this problem, the use of a specialized solution is attractive because additional information about the problem can be used to increase revenue and reduce demands on the network.</p><p>We present a theoretical model of the problem, and discuss four mechanisms that induce selfish agents to smooth out their resource demands by probabilistically waiving the cost of resource usage. We show one very simple mechanism that achieves a weak load-balancing equilibrium, and three other, somewhat more complex mechanisms that balance load in strict equilibria or dominant strategies. Two of our mechanisms concern the case where all agents have the same valuations for different time slots, and two generalize to the case where the mechanism knows only bounds second computer's IP did not hash to the same signal. This could be addressed by requiring agents to use the network from the computer from which they registered, and permitting them to register again if they change their mind about which machine they want to use.  on agent valuations. We prove optimality and ε-optimality of the revenue/load balancing trade-off in the first case, and a bound on the optimality of this trade-off in the second case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Chapter 3</head><p>Bidding Rings in First Price</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Auctions</head><p>We identify a self-enforcing collusion protocol (a "bidding ring") for first-price auctions. Unlike previous work on this topic, we allow for the existence of multiple cartels in the auction, we include the choice of whether or not to collude as part of agents' strategy space, and we do not assume that non-colluding agents hold false beliefs.</p><p>We show a Bayes-Nash equilibrium in which agents choose to join bidding rings when invited and truthfully declare their valuations to a ring center. Furthermore, we show that the existence of bidding rings benefits ring centers and all agents, both members and non-members of bidding rings, at the auctioneer's expense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Introduction</head><p>We consider the question of how agents can gain by coordinating their bidding in non-repeated single-good auctions, even when all agents still act selfishly. The case of second-price auctions is well-studied; we concentrate on the comparatively lessstudied case of first-price auctions. This problem is important for several reasons.</p><p>First, collusion is a widespread phenomenon; understanding the topic theoretically can help auctioneers to modify the rules of their auctions in order to make collusion more difficult. Second, the problem of designing protocols that allow agents to maximize their expected utility in existing economic mechanisms is a topic of increasing study in artificial intelligence; cf., . Finally, there exist uses of bidding rings that might not fall under the legal definition of collusion. For example, a corporation could use a bidding ring to choose one of its departments to bid in an external auction, avoiding bidding against itself while avoiding dictatorship and respecting each department's self-interest. Collusion may also be permitted by the auctioneer: e.g., by an internet market seeking to attract more bidders. <ref type="bibr" target="#b32">Graham and Marshall [1987]</ref> wrote one of the first formal papers on collusion, considering second-price auctions. This paper introduced the knockout procedure:</p><p>agents announce their bids in a knockout auction; only the highest bidder goes to the auction but this bidder must pay a "ring center" the amount of his gain relative to the case where there was no collusion. The ring center pays each agent in advance;</p><p>the amount of this payment is calculated so that on expectation the ring center will budget-balance ex ante, before knowing the agents' valuations.</p><p>Graham and Marshall's work has been extended to deal with variations in the knockout procedure, differential payments, and relations to the Shapley value <ref type="bibr" target="#b33">[Graham et al., 1990]</ref>. The case where only some of the agents are part of the cartel is discussed by <ref type="bibr" target="#b69">Mailath and Zemsky [1991]</ref>. von Ungern-Sternberg [1988] discusses collusion in second-price auctions where the designated winner of a cartel is not the agent with the highest valuation. Although we are not aware of any work that presents this result, it is also easy to extend the protocol to an environment containing both multiple cartels and independent bidders.</p><p>Less formal discussion of collusion in auctions can be found in a wider variety of papers. For example, a survey paper that discusses mechanisms that are likely to facilitate collusion in auctions, as well as methods for the detection of such schemes, can be found in <ref type="bibr" target="#b39">[Hendricks &amp; Porter, 1989]</ref>. A discussion and comparison of the stability of rings associated with classical auctions can be found in <ref type="bibr" target="#b96">[Robinson, 1985]</ref>, concentrating on the case where the valuations of agents in the cartel are honestly reported. Collusion is also discussed in other settings, e.g., aiming to influence purchaser behavior in a repeated procurement setting <ref type="bibr" target="#b20">[Feinstein et al., 1985]</ref> and in the context of general Bertrand or Cournot competition <ref type="bibr" target="#b14">[Cramton &amp; Palfrey, 1990</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Collusion in First-Price Auctions</head><p>A very influential paper by <ref type="bibr" target="#b72">McAfee and McMillan [1992]</ref> presented the first theoretical results on collusion in first-price auctions. This work assumes that a fixed number of agents participate in the auction and that all agents are part of a single cartel that coordinates its behavior in the auction. The authors show optimal collusion protocols for "weak" cartels (in which transfers between agents are not permitted: all bidders bid the reserve price, using the auctioneer's tie-breaking rule to randomly select a winner) and for "strong" cartels (the cartel holds a knockout auction, the winner of which bids the reserve price in the main auction while all other bidders sit out; the winner distributes some of his gains to other cartel members through side payments).</p><p>A small part of the paper deals with the case where in addition to a single cartel there are also additional agents. However, results are shown only for two cases: <ref type="formula">(1)</ref> where non-cartel members bid without taking the existence of a cartel into account (i.e., either they are irrational or they hold the false belief that no cartels exist) and</p><p>(2) where each agent i has valuation v i ∈ {0, 1}. The authors explain that they do not attempt to deal with general strategic behavior in the case where the cartel consists of only a subset of the agents; furthermore, they do not consider the case where multiple cartels can operate in the same auction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Overview</head><p>Our goal is to extend past work on collusion in first-price auctions by relaxing many of the assumptions described above. First, we want to allow for the possibility that some bidders will not belong to a cartel, while preserving the standard game-theoretic setting in which agents are rational and do not hold false beliefs in equilibrium.</p><p>Second, we want to allow for the possibility that more than one cartel will exist, introducing the new wrinkle that cartel members must reason about the behavior of other cartels. Other features of our model are that bidders have uncertainty about the number of participants in the auction, bidders' valuations are real numbers drawn from an interval according to an arbitrary distribution (as compared, e.g., to the case described above where valuations take one of only two discrete values), and the decision of whether or not to join a bidding ring is part of an agent's choice of strategy.</p><p>Section 3.2 describes what we consider to be the simplest economic environment and first-price auction mechanism that do not implicitly rule out the possibility of collusion. Section 3.3 gives two important lemmas that are necessary for our main results, but which do not directly concern collusion. Section 3.4 describes all our results concerning bidding rings. We extend the model from Section 3.2 to give a model of the economic environment and an augmented auction mechanism for bidding ring invitees. We show that this protocol results in a Bayes-Nash equilibrium, and also that the bidding ring protocol helps both members and non-members in several senses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Modeling First-Price Auctions</head><p>In this section we will present an "auction hall" setting, in which bidders are aware of the number of other bidders placing bids in the auction hall, but are uncertain about the number of bidders who remained at home after losing a knockout auction.</p><p>First, however, we introduce notation, and then present two simpler first-price auction models. We present results about these models that we will need throughout the remainder of the paper, and also argue why these models are insufficient for the study of collusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Auction Setting</head><p>An economic environment E consists of a finite set of agents who have non-negative valuations for a good at auction, and a distinguished agent 0-the seller or center.</p><p>Denote the economic environment described here as E c . Let T be the set of possible</p><formula xml:id="formula_52">agent types. The type τ i ∈ T of agent i is the pair (v i , s i ) ∈ V × S. v i denotes an</formula><p>agent's valuation: his maximal willingness to pay for the good offered by the center.</p><p>We assume that v i represents a purely private valuation for the good, and that v i is selected independently from the other v j 's of other agents from a known cumulative distribution, F , having density function f . We assume only that f is continuous, atomless, and has support on the interval [0, 1]. By s i we denote agent i's signal: his private information about the number of agents in the auction. The set of possible signals S will be varied throughout the chapter. Let ϕ denote the null signal, and in E c let S = {ϕ}. Note, however, that the economic environment itself is always common knowledge, and so agents always have some information about the number of agents even when they always receive the null signal.</p><p>By p s i (n) we denote the probability that agent i assigns to there being exactly n agents in the auction, conditioned on his signal s i . We denote the whole distribution </p><formula xml:id="formula_53">conditioned on i's signal as p s i . The utility function of agent i, u i : R → R is linear, normalized with u i (0) = 0. The utility of agent i (having valuation v i ) when asked to pay t is v i − t if i</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Classical First-Price Auctions</head><p>The choice of information structure is very important for the study of collusion in first-price auctions. The most familiar case gives rise to what we will call the "classical" first-price auction, where the number of participants 1 is part of the economic environment (this is what we have called E c ). Using standard equilibrium analysis (e.g., following <ref type="bibr" target="#b95">Riley and Samuelson [1981]</ref>) a unique symmetric equilibrium can be identified: </p><formula xml:id="formula_54">b(v i ) = v i − F (v i ) −(n−1) v i 0 F (u) n−1 du.</formula><p>Observe that the strategy is parameterized by valuation, but also depends on information from the economic environment. It will be notationally useful for us to be able to specify the amount of the equilibrium bid as a function of both v and n:</p><formula xml:id="formula_55">b e (v i , n) = v i − F (v i ) −(n−1) v i 0 F (u) n−1 du. (3.1)</formula><p>We are interested in constructing a collusive agreement that requires low bidders to drop out of the main auction. It is obvious that such collusion is nonsensical in a classical first-price auction. When bidders' strategies depend on the number of agents in the economic environment, it makes no difference if cartel members with low valuations fail to submit bids. This is a problem with our auction model rather than with collusion in first-price auctions per se-in practice bidders might not know the exact number of agents in the economic environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">First-Price Auctions with a Stochastic Number of Bidders</head><p>One way of modelling agents' uncertainty about the number of opponents they face is to say that the number of participants is drawn from a probability distribution; while the actual number of participants is not observed, the distribution is commonly known <ref type="bibr" target="#b71">[McAfee &amp; McMillan, 1987]</ref>. This setting requires that we redefine the economic environment; denote the new economic environment as E s . Let the definition of agents in E s be the same as in E c . Denote the probability that n agents will participate in the auction as p(n); let the support of p be any subset of {2, 3, . . .}. We assume that after the number of agents is determined, the name of each agent is selected from the uniform distribution on [0, 1]. An equilibrium was demonstrated by Harstad et al.</p><p>[1990]:</p><p>Proposition 3.2 If valuations are selected from a continuous distribution F and the number of bidders is selected from the distribution p then it is a unique symmetric equilibrium for each agent i to follow the strategy</p><formula xml:id="formula_56">b(v i ) = ∞ j=2 F j−1 (v i )p(j) ∞ k=2 F k−1 (v i )p(k) b e (v i , j).</formula><p>Observe that b e (v i , j) is the amount of the equilibrium bid for a bidder with</p><p>valuation v i in a setting with j bidders as described in Section 3.2.2 above. p is deduced from the economic environment. We overload our previous notation for the equilibrium bid, this time as a function of the agent's valuation and the probability</p><formula xml:id="formula_57">distribution p: b e (v i , p) = ∞ j=2 F j−1 (v i )p(j) ∞ k=2 F k−1 (v i )p(k) b e (v i , j). (3.2)</formula><p>This auction model is still unable to model collusion in a first-price auction. If each agent knows only the distribution of agents interested in participating in the auction, his strategy will not be affected if one or more interested agents drop out! Again, this is a deficiency with our model. In some settings agents may know how many agents bid in the auction, even though they may not know the number of agents who chose not to bid. For example, when an auction takes place in an auction hall, no bidder knows how many potential bidders stayed home, but every bidder can count the number of people in the room before placing his or her bid. It is in this sort of auction that collusion based on dropping agents with low valuations could work. We must first introduce a new type of auction to model this auction hall scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">First-Price Auctions with Participation Revelation</head><p>We define first-price auctions with participation revelation as follows:</p><p>1. Agents indicate their intention to bid in the auction.</p><p>2. The auctioneer announces n, the number of agents who registered in the first phase.</p><p>3. Agents submit bids to the auctioneer. The auctioneer will only accept bids from agents who registered in the first phase.</p><p>4. The agent who submitted the highest bid is awarded the good for the amount of his bid; all other agents are made to pay 0.</p><p>When a first-price auction with participation revelation operates in E s , the equilibrium of the corresponding classical first-price auction holds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 3.3 In E s it is an equilibrium of the first-price auction with participation revelation for every agent i to indicate the intention to participate and to bid</head><formula xml:id="formula_58">according to b e (v i , n).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Agents always gain by participating in first-price auctions when there is no participation fee. The only way to participate in this auction is to indicate the intention to participate in the first phase. Thus the number of agents announced by the auctioneer is equal to the total number of agents in the economic environment.</p><p>From Proposition 3.1 it is best for agent i to bid b e (v i , n) when it is common knowledge that the number of agents in the economic environment is n.</p><p>In practice, a first-price auction with participation revelation may often be a more realistic model than a classical first-price auction, since it covers cases where bidders do not know a priori the number of opponents they will face. However, when bidders are unable to collude there is no strategic difference between these two mechanisms, possibly explaining why the simpler classical model is commonly used. For the study of bidding rings, however, the difference between the mechanisms is profound-we are now able to look for a collusive equilibrium in which bidder strategies to depend only on the number of other agents who "show up" for the auction, without having to assume that bidders are irrational or hold false beliefs about the economic environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Some Technical Results</head><p>This section proves several novel technical results that are necessary for our results about bidding rings, all concerning economic environments in which bidding rings do not exist, but in which the number of bidders is stochastic. First, we discuss the existence of an equilibrium in a setting where agents receive asymmetric information about the number of participants, and are furthermore subject to asymmetric payment rules. Second, we prove a key result about how changes in the distribution over the number of participants in a first-price auction in E s affect the amount of the equilibrium bid b e .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Regular Asymmetric Auctions</head><p>We describe a class of auction mechanisms that are asymmetric in the sense that all agents are subject to the same allocation rule but may receive different signals about the number of participants in the auction and may be made to pay according</p><formula xml:id="formula_59">to different payment rules. 2 Let S = {ϕ, 2, 3, . . .}. A bid from agent i is denoted as µ i ∈ R + ∪ {0}</formula><p>, the tuple of bids from all agents is denoted as π ∈ Π and an auction's</p><formula xml:id="formula_60">transfer function for agent i (determining i's payment) is t i : R + ∪ {0} × Π → R. Definition 3.4 An auction M s is aligned with signal s ∈ S if M s allocates the good to an agent i with µ i ∈ max j µ j , and M s is a symmetric truth-revealing direct mechanism</formula><p>for a stochastic number of agents drawn from p s , each of whom receives the signal ϕ.</p><p>By the revelation principle, for every distribution over the number of agents p and for every signal s ∈ S there exists an aligned auction M s .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3.5M is a regular asymmetric auction if it allocates the good to an agent</head><p>i with µ i ∈ max j µ j , and if each agent i is made to transfer t s i (µ i , π) to the center, with t s i taken from an auction M s i that is aligned with signal s i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 3.6 Truth-revelation is an equilibrium of regular asymmetric auctions.</head><p>Proof.</p><p>The payoff of agent i is uniquely determined by the allocation rule, the transfer function t s i , the distribution over the number of agents in the auction, and all agents' strategies. Assume that the other agents are truth revealing, then each other agent's behavior, the allocation rule, and agent i's payment rule are all identical in M and M s i . Conditioned on his private information s i , agent i's posterior is that p s i is the distribution over the number of agents in the auction. Since truth-revelation is an equilibrium in M s i when the distribution of agents is p s i , truth-revelation is agent i's best response inM .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Relating p to b e</head><p>It is intuitive to expect that in first-price auctions, the amounts of agents' equilibrium bids increase with the number of participating agents. We can easily verify that this is true in the classical case:</p><formula xml:id="formula_61">Lemma 3.7 ∀v, ∀j ≥ 2, b e (v, j + 1) &gt; b e (v, j). Proof. From Equation (3.1), we can write b e (v, j + 1) − b e (v, j) = v 0 1 − F (u) F (v) F (u) F (v) j−1 du. (3.</formula><p>3)</p><p>The first factor in the integrand is clearly always positive, so the right-hand side of</p><formula xml:id="formula_62">Equation (3.3) is positive. Thus b e (v, j) is strictly increasing in j.</formula><p>This intuition does not transfer to first-price auctions with a stochastic number of bidders, in the sense that auctions with larger expected numbers of participants do not always yield higher equilibrium bids.</p><p>Example 3.8 Consider a distribution p such that the probability mass is evenly divided between two numbers of agents, j low and j high , such that j high = j low + κ, and consider the strategy of agent i. The classical case is recovered if κ = 0, in which case This phenomenon also occurs among distributions of practical interest. So in a first-price auction with a stochastic number of participants, simply knowing that distribution p has a smaller expected number of participants than distribution p is not enough to know which distribution gives rise to a lower symmetric equilibrium bid for a given valuation. In what follows, we identify a class of pairs of distributions</p><formula xml:id="formula_63">i's equilibrium bid will just be b e (v i , j low ). If κ is increased to 1, the equilibrium bid in- creases by a finite amount to some b e (v i , p) ∈ (b e (v i , j low ), b e (v i , j high )),</formula><formula xml:id="formula_64">(p, p ) for which it does hold that b e (v i , p) &lt; b e (v i , p ).</formula><p>Let r j (F, v i , p) denote the probability that j agents participate conditional on agent i having the highest valuation. This is equal to the probability that j agents participate and agent i has the highest valuation among these agents, normalized by the unconditional probability that agent i has the highest valuation.</p><formula xml:id="formula_65">Let Z (F, v i , p)</formula><p>be the probability that agent i has the highest valuation given that his valuation is</p><formula xml:id="formula_66">v i . 3 Thus Z (F, v i , p) ≡ ∞ k=2 F (v i ) k−1 p (k) (3.4) r j (F, v i , p) ≡ F (v i ) j−1 p (j) Z (F, v i , p) . (3.5)</formula><p>Observe that Equation (3.2) for the equilibrium bid in a stochastic first-price auction can be written in terms of the distribution</p><formula xml:id="formula_67">r(F, v i , p): b e (v i , p) = ∞ j=2 r j (F, v i , p) b e (v i , j). (3.6)</formula><p>The cumulative distribution R m (F, v i , p) for the distribution r, denoting the probability that m or fewer agents participate conditional on i having the highest valuation, is given by</p><formula xml:id="formula_68">R m (F, v i , p) ≡ m j=2 r j (F, v i , p) . (3.7)</formula><p>Let D be the set of all distributions d : Z → R with support on a subset of the integers greater than or equal to . Since auctions with less than two participating agents are not interesting, we are primarily concerned with distributions of numbers of agents that belong to D 2 . Let x and y be independent random variables respectively distributed according to p ∈ D 2 and q ∈ D 0 , and consider the distribution of their sum, which we call p . Since x and y are independent, the probability of their sum being m is just the sum of the product of the individual probabilities of values of x and y that sum to m:</p><formula xml:id="formula_69">p (m) = ∞ j=0 p (m − j) q (j) . (3.8)</formula><p>Summing independent distributions in this way corresponds to convolution, which we denote symbolically as p = p * q. Observe that convolution is associative and commutative. We denote repeated convolution of an arbitrary distribution d</p><formula xml:id="formula_70">n d ≡ d repeated n times d * d * d * . . . * d . (3.9)</formula><p>We define the Kronecker delta (an indicator function) as</p><formula xml:id="formula_71">δ m (j) = 1 if j = m; 0 otherwise. (3.10)</formula><p>We make use of the following identity, which can be inferred from Equation (3.8), later in the chapter:</p><formula xml:id="formula_72">j δ k = δ (j·k) (3.11) Lemma 3.9 ∀p, p ∈ D 2 , ∀q ∈ D 0 , p = p * q and q (0) &lt; 1 implies that b e (v i , p) &lt; b e (v i , p ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>The proof has two parts. First we show that for every j, the probability that no more than j bidders participate conditional on bidder i having the highest valuation is at least as high when the number of agents is drawn from p as when it is drawn from p , and that for some j this probability is higher in p than in p .</p><p>Next, we show that this relationship between conditional probabilities implies that the equilibrium bid is smaller under p than under p .</p><p>Step 1:</p><formula xml:id="formula_73">First, we show that ∀j, R j (F, v i , p ) ≤ R j (F, v i , p)</formula><p>, and that ∃j,</p><formula xml:id="formula_74">R j (F, v i , p ) &lt; R j (F, v i , p).</formula><p>Consider the difference between the cumulative distributions:</p><formula xml:id="formula_75">∆R j ≡ R j (F, v i , p) − R j (F, v i , p ) = j m=−∞ F (v i ) m−1 p (m) Z (F, v i , p) − F (v i ) m−1 p (m) Z (F, v i , p ) . (3.12)</formula><p>The denominators can be related as follows:</p><formula xml:id="formula_76">Z(F, v i , p ) = ∞ k=−∞ F (v i ) k−1 ∞ j=0 p(k − j)q(j) = ∞ j=0 ∞ k=−∞ F (v i )F (v i ) j−1 F (v i ) k−j−1 p(k − j)q(j) (3.13) = F (v i ) ∞ j=0 F (v i ) j−1 q (j) ∞ k=−∞ F (v i ) k−j−1 p (k − j) = F (v i ) Z (F, v i , q) Z (F, v i , p) .</formula><p>(3.14)</p><p>Substituting (3.14) into Equation (3.12), and making use of Equation (3.8),</p><formula xml:id="formula_77">∆R j = 1 Z (F, v i , p ) j m=−∞ Z (F, v i , q) F (v i ) m p (m) −F (v i ) m−1 ∞ k=0 p (m − k) q (k) (3.15) = F (v i ) Z (F, v i , p ) ∞ k=0 q (k) F (v i ) k−1 j m=−∞ F (v i ) m−1 p (m) − ∞ k=0 q (k) F (v i ) k−1 j m=−∞ F (v i ) m−k−1 p (m − k) (3.16) = F (v i ) Z (F, v i , p ) ∞ k=0 q (k) F (v i ) k−1 j m=−∞ F (v i ) m−1 p (m) − j−k m=−∞ F (v i ) m−1 p (m) .</formula><p>(3.17)</p><p>To obtain Equation <ref type="formula">(</ref> When k = 0, the bracketed expression in Equation (3.17) is zero, so that term can be dropped from the sum. The bracketed sums can then be combined, yielding the second sum is nonzero, and since by assumption ∃k &gt; 0 such that q (k) &gt; 0,</p><formula xml:id="formula_78">∆R j = F (v i ) Z (F, v i , p ) ∞ k=1 F (v i ) k−1 q (k) j m=j−k+1 F (v i ) m−1 p (m) . (3.18) Since k ∈ [1, ∞) in Equation (3.18),</formula><formula xml:id="formula_79">we have that ∆R j &gt; 0. Thus for all j, R j (F, v i , p ) ≤ R j (F, v i , p)</formula><p>, and for some j,</p><formula xml:id="formula_80">R j (F, v i , p ) &lt; R j (F, v i , p).</formula><p>Step 2: Now it must be established that (∀j,</p><formula xml:id="formula_81">R j (F, v i , p ) ≤ R j (F, v i , p) and ∃j, R j (F, v i , p ) &lt; R j (F, v i , p)) implies b e (v i , p) &lt; b e (v i , p ).</formula><p>We must show that ∆b &gt; 0, where we use Equation (3.6) to write</p><formula xml:id="formula_82">∆b ≡ b e (v i , p ) − b e (v i , p) = ∞ m=2 (r m (F, v i , p ) − r m (F, v i , p)) b e (v i , m) .</formula><p>We rewrite this sum using summation by parts (the discrete analog of integration by parts). This yields</p><formula xml:id="formula_83">∆b = ∞ m=2 (b e (v i , m + 1) − b e (v i , m)) m j=2 (r j (F, v i , p) − r j (F, v i , p )) (3.19) = ∞ m=2 (b e (v i , m + 1) − b e (v i , m)) (R m (F, v i , p) − R m (F, v i , p )) . (3.20)</formula><p>To obtain Equation (3.19), we have also used the fact that both r(F, v i , p) and</p><formula xml:id="formula_84">r(F, v i , p) are normalized. Lemma 3.7 tells us that b e (v i , m) is strictly increasing in m; clearly it is always positive. Thus b e (v i , m + 1) − b e (v i , m) &gt; 0 ∀m. Furthermore, from Step 1, R m (F, v i , p) − R m (F, v i , p ) is non-negative, and for all m ≥ m * it</formula><p>is greater than zero. The right-hand side of Equation (3.20) is therefore a sum of products of non-negative factors, of which at least one is a product of strictly positive</p><formula xml:id="formula_85">factors. Thus ∆b &gt; 0, or b e (v i , p) &lt; b e (v i , p ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Bidding Rings for First-Price Auctions</head><p>This section contains the chapter's main technical results. We begin by extending the economic environment E s to include the characteristics necessary for a model of bidding rings. We then give the bidding ring protocol for first-price auctions, based on a first-price auction with participation revelation as described in Section 3.2.4.</p><p>We show an equilibrium of this auction, and demonstrate that both ring centers and agents gain under this equilibrium.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1">Bidding Ring Economic Environment</head><p>Our aim is not to model a situation where agents' decisions to collude are exogenous, as this would gloss over the question of whether the collusion is stable. We thus include the collusive protocol as part of the model and show that it is individually rational ex-post (i.e., after agents have observed their valuations) for agents to choose to collude. However, we do consider exogenous the selection of the set of agents who are offered the opportunity to collude. Furthermore, we want to show the impact of the possibility of collusion upon non-colluding agents; indeed, even those agents who do collude must take into account the possibility that other groups of agents in the auction may also collude. We extend the economic environment E s to consist of the distinguished agent 0, a randomly-chosen set of agents who have non-negative valuations for a good at auction and a set of ring centers who do not value the good, but may invite agents to participate in a bidding ring. We denote the new economic environment E br .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ring centers</head><p>Ring centers are not free to choose their own strategies; rather, they act as part of the mechanism for a subset of the agents in the economic environment. The selection of ring centers is similar to the selection of agents in the economic environment E s .</p><p>In this case, however, this finite set is considered a set of "potential ring centers". In Section 3.4.1 we will describe which potential ring centers are "actualized," i.e., correspond to actual ring centers. We denote the probability that an auction will involve n c potential ring centers as γ C (n c ). γ C may be any distribution the support of which is a subset of {2, 3, . . .}. We assume that after the number of potential ring centers is determined, the name of each potential ring center is selected from the uniform distribution on [0, 1].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Agents</head><p>The probability that n agents will be associated with a potential ring center is denoted γ A (n). γ A may be any distribution the support of which is a subset of {1, . . .}. If only one agent is associated with a potential ring center, the potential ring center will not be actualized and hence the agent will not belong to a bidding ring. In this way we model agents who participate directly in the auction without being associated with a ring center. If more than one agent is associated with a potential ring center, the ring center is actualized and all the agents receive an invitation to participate in the bidding ring. As before, we assume that after the number of agents is determined, the name of each agent associated with a potential ring center is selected from the uniform distribution on [0, 1]. The key consequence of our technical construction of ring center and agent names is that an agent's knowledge of the ring center with whom he is associated does not give him additional information about what other agents have been selected. Any other technique for providing this property may also be used; e.g., constructions draw ring center and agent names from finite sets.</p><p>We can now give an expression for p, the distribution over the number of agents in the economic environment E br :</p><formula xml:id="formula_86">p = ∞ n=2 γ C (n) n γ A .</formula><p>(3.21)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Types and Signals</head><p>Recall that the type</p><formula xml:id="formula_87">τ i ∈ T of agent i is the pair (v i , s i ) ∈ V × S. As in E c , let v i denote an independent private value for the good, drawn from F . Let S ⊆ N \ {0};</formula><p>s i ∈ S denotes agent i's private information about the number of agents in his bidding ring. Of course, if this number is 1 then there is no ring center for the agent to deal with, and he simply participates in the main auction. Note also that agents are neither aware of the number of potential ring centers for their auction nor the number of actualized potential ring centers, though they are aware of both distributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Beliefs</head><p>Once an agent is selected, he computes a posterior distribution over the number of agents in the economic environment. Not all agents will have the same beliefs-agents who have been signaled that they belong to a bidding ring will expect a larger number of agents than singleton agents.</p><p>We denote by p s i (m) the probability that there are a total of m agents in the auction, conditioned on agent i's observation of his own signal s i :</p><formula xml:id="formula_88">p s i = ∞ n=2 γ C (n) n−1 γ A * δ s i . (3.22)</formula><p>Finally, we denote by p n,s i (m) the probability that there are a total of m agents in the auction, conditioned on i's signal that there are s i agents in his ring and the additional information that there are a total of n bidding rings and/or singleton bidders in the auction:</p><formula xml:id="formula_89">p n,s i = n−1 γ A * δ s i . (3.23)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2">First-Price Auction Bidding Ring Protocol</head><p>Any number of ring centers may participate in an auction. However, we assume that there is only a single collusion protocol, and that this protocol is common knowledge.</p><p>What follows is the protocol of a ring center who approaches k agents and who operates in conjunction with a first-price auction with participation revelation in the economic environment E br .</p><p>1. Each agent i sends a message µ i to the ring center.</p><p>2. If all k agents accept the invitation then the ring center drops all bidders except the bidder with the highest reported valuation, who we will denote as bidder h. For this bidder the ring center indicates the intention to bid in the main auction, and places a bid of b e (µ h , p n,1 ).</p><p>3. If d &gt; 0 agents decline participation then the ring center indicates an intention to bid in the main auction on behalf of every agent who accepted the invitation to the bidding ring. For each bidder i, the ring center submits a bid of</p><formula xml:id="formula_90">b e (µ i , p n−d,k ),</formula><p>where n is the number of bidders announced by the auctioneer. 4</p><p>4. The ring center pays each member a pre-determined payment c n,k ≥ 0 whenever all bidders participate in the ring, which is independent of the outcome of the auction and the amount each bidder bid, but which can depend on n and k.</p><p>5. If bidder h wins in the main auction, he is made to pay b e (µ h , p n,1 ) to the center</p><formula xml:id="formula_91">and b e (µ h , p n,k ) − b e (µ h , p n,1 ) to the ring center.</formula><p>We are now ready to prove the main theorem of the chapter.</p><p>Theorem 3.10 It is a Bayes-Nash equilibrium for all bidding ring members to choose to participate and to truthfully declare their valuations to their respective ring centers, and for all non-bidding ring members to participate in the main auction with a bid of b e (v, p n,1 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>This proof is divided into sections. First, we prove that each category of bidders is best off choosing to participate. Next, we present a one-stage revelation mechanism and prove that it is equivalent to the bidding ring protocol when all agents participate. Finally, we show that the given strategies are in equilibrium when agents participate.</p><p>Participation of non-ring bidder: When there is no participation fee, it is always rational for a bidder to participate in a first-price auction.</p><p>Participation of ring bidder: Because there is no participation fee, all bidding ring members will participate in the auction, but must decide whether or not to accept their bidding ring invitations. Consider the case where c n,k = 0; clearly c n,k &gt; 0 only increases agents' incentive to accept the invitation. Assume that all agents except for i join their respective rings and bid truthfully, and agent i must decide whether to join his ring and bid truthfully or to decline the invitation and bid freely. In this discussion let n represent the true number of bidding rings and singleton bidders in the economic environment (i.e., the value realized from the distribution γ c ).</p><p>First, consider a different setting, which we denote ( ): a first-price auction with a stochastic number of participants in economic environment E s , with the number of agents distributed according to p n,s i . In ( ) all bidders have the same information as i, and are subject to the same payment rule: from Proposition 3.2 it is a best response for i to bid b e (v i , p n,s i ). Clearly i's expected utility is the same in ( ) and</p><p>when participating honestly in his bidding ring, because both auctions allocate the good to the bidder who submits the highest bid, have the same distribution over the number of agents, and implement the same payment rule for i. Thus our goal in this part of the proof is to show that i's expected utility after rejecting his bidding ring invitation is less than his expected utility in the equilibrium of ( ).</p><p>Given that all other bidders participate in bidding rings and follow the protocol, if the bidding ring did not respond to i's deviation, there would exist some distributions p and signals s i for which i would prefer to decline the invitation. (Taking into account his signal and once the auctioneer has made an announcement, i would know that the number of agents is distributed according to p n,s i ; however, if he were to deviate then all agents would bid in the main auction as though the number of agents were distributed according to p n+1,1 . For certain values of p and s i , i's expected loss from causing the auctioneer to announce one more participant is less than his expected gain from being able to bid freely and from not having to make a payment to the ring center if he wins.)</p><p>According to the protocol, however, the bidding ring does change its behavior in response to deviation. If i declines the invitation the ring center will send all the other members of the ring into the main auction, causing the auctioneer to announce n+k −1 participants. As a result there will be s i −1 bidders placing bids of b e (v, p n,s i ) and n − 1 other bidders placing bids of b e (v, p n+s i −1,1 ). We can show that these n − 1 bidders will decrease i's expected utility by bidding too high. Recall Equation (3.23):</p><formula xml:id="formula_92">p n,s i = n−1 γ A * δ s i , and so p n+s i −1,1 = n+s i −2 γ A * δ 1 . We can write γ A = g A * δ 1 ,</formula><p>where g A is the distribution over the number of agents in a bidding ring beyond the first agent. Then</p><formula xml:id="formula_93">p n+s i −1,1 = n−1 γ A * s i −1 γ A * δ 1 = n−1 γ A * s i −1 g A * δ s i −1 * δ 1 = p n,s i * s i −1 g A .</formula><p>( <ref type="formula">3.24)</ref> Since γ A has support on a subset of the positive integers, it follows that g A has support on a subset of the integers greater than or equal to zero. And since γ A (1) &lt; 1, g A (0) &lt; 1. It then follows from Lemma 3.9 that b e (v, p n+s i −1,1 ) &gt; b e (v, p n,s i ). Thus the singleton bidders and other bidding rings will bid a higher 5 function of their valuations than the equilibrium amount in ( ). It always reduces a bidder's expected gain in a first-price auction to cause other bidders to bid more, because it reduces the chance that he will win without affecting his payment if he does win. This is the effect of i declining the offer to join his bidding ring: the k − 1 other bidders from i's bidding ring bid according to the equilibrium of ( ), but the n − 1 singleton and bidding ring bidders submit bids that exceed this amount. Therefore i's expected utility is smaller if he declines the offer to participate than if he accepts it.</p><p>One-Stage Mechanism: Define the one-stage mechanism M as follows:</p><p>1. The center announces n, the number of bidders in the main auction.</p><p>5 Note that this occurs because the singleton bidders and other bidding rings in the main auction follow a strategy that depends on the number of bidders announced by the auctioneer; hence they bid as though all the k − 1 bidders from the disbanded bidding ring might each be independent bidding rings.</p><p>2. Each bidder i submits a bid µ i to the mechanism.</p><p>3. The bidder with the highest bid is allocated the good and is made to pay b e (µ i , p n,s i ).</p><p>4. All bidding ring members are paid c n,s i . M has the same payment rule for bidding ring bidders as the bidding ring protocol given above, but no longer implements a first-price payment rule for singleton bidders.</p><p>Observe that the original auction is efficient under the strategies stated in the theorem because each bidder i bids b e (v i , p n,1 ) in the main auction. Thus, in order to prove that the strategies given in the statement of the theorem constitute an equilibrium, it is sufficient to show that truthful bidding is an equilibrium for all bidders under M .</p><p>Equilibrium: Assume that all other bidders bid truthfully, and consider the strategy of bidder i. This bidder's posterior distribution over the number of other bidders he faces, given his signal s i and the auctioneer's announcement that there are n bidders in the main auction, is p n,s i . Since agent i is made to pay b e (µ i , p n,s i ) if he wins, and since the good is always allocated to the agent who submits the highest message, M is regular asymmetric. From Lemma 3.6, agent i's best response to truthful bidding in a regular asymmetric auction is to bid truthfully. Observe that this analysis holds for both non-ring and ring bidders since it makes no assumptions about s i . If i is a ring bidder then he gets the additional payment c n,s i , but this payment does not depend on the amount of his bid, and so has no effect on his choice of how to bid given his decision to participate.</p><p>Note that this equilibrium gives rise to an economically-efficient allocation, as was mentioned in the proof of the theorem. The highest bidder in each bidding ring always bids in the main auction, and every bidder in the main auction places a bid according to the same function, which is monotonically increasing in the bidder's valuation.</p><p>The equilibrium from Theorem 3.10 is not unique. We can show another equilibrium, where no agents accept bidding ring invitations and agents bid according to the equilibrium for first-price auctions with participation revelation demonstrated in Proposition 3.3.</p><p>Proposition 3.11 It is a Bayes-Nash equilibrium for each bidding ring invitee to decline his bidding ring invitation, and for each agent i to bid b e (v i , n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>If at least one agent declines the invitation to join a bidding ring, other invitees of that bidding ring are no worse off if they decline as well. (If they decline then they can bid freely, rather than being made to submit bids of a particular form.)</p><p>If no agents join bidding rings then agents' signals contain no useful information.</p><p>Thus the argument from Proposition 3.3 applies, and it is a Bayes-Nash equilibrium for each bidder to submit a bid of b e (v i , n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.3">Are Bidding Rings Helpful?</head><p>First of all, we show that ring centers gain on expectation from running bidding rings.</p><p>Theorem 3.12 The ring center gains on expectation if it pays agents c n,k = 1 k (g n,k − c n,k ) with 0 &lt; c n,k ≤ g n,k and</p><formula xml:id="formula_94">g n,k = k ∞ 0 f (v i ) ∞ j=2 p n,k (j)F j−1 (v i ) (b e (v i , p n,k ) − b e (v i , p n,1 )) dv i ,</formula><p>and is budget-balanced on expectation when c n,k = 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Since the distribution p n,k is just p n,1 with k − 1 singleton agents added,</p><formula xml:id="formula_95">p n,k = p n,1 * δ k−1 . Since k ≥ 2, it follows from Lemma 3.9 that b e (v i , p n,k ) &gt; b e (v i , p n,1 ).</formula><p>This proves that the ring center always receives a positive payment when a ring member wins. g n,k is the ring center's ex ante expected gain if all k invited agents behave according to the equilibrium in Theorem 3.10, the auctioneer announces n participants, and the ring center makes no payment to the agents. Thus the ring center will gain on expectation if each ring member's unconditional payment is less than 1 k g n,k , and will budget-balance on expectation when each ring member's payment is exactly 1 k g n,k .</p><p>The payment of c to all bidders follows an idea from <ref type="bibr" target="#b32">[Graham &amp; Marshall, 1987]</ref> for returning a ring center's profits to bidders without changing incentives. In equilibrium the ring center will have an expected profit of c n,k , though it will lose kc n,k whenever the winner of the main auction does not belong to its ring. If a ring center wants to be guaranteed never to lose money, it can set c n,k = g n,k .</p><p>There are several ways of asking whether bidders gain by being invited to join bidding rings. One natural question is whether bidders are better off being invited to a bidding ring or being sent to the auction as singleton bidders.</p><p>Theorem 3.13 An agent i has higher expected utility in a bidding ring of size k bidding as described in Theorem 3.10 than he does if the bidding ring does not exist and k additional agents (including i) participate directly in the main auction as singleton bidders, again bidding as described in Theorem 3.10, for c n,k ≥ 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Consider the counterfactual case where agent i's bidding ring does not exist, and all the members of this bidding ring are replaced by singleton bidders in the main auction. We show that i is better off as a member of the bidding ring (even when c n,k = 0) than in this case. If there were n potential ring centers in the original auction and k agents in i's bidding ring, then the auctioneer would announce n + k − 1 as the number of participants in the new auction. In both cases the auction is economically efficient, which means i is better off in the auction that requires him to pay a smaller amount when he wins. Under the equilibrium from Theorem 3.10, as a singleton bidder i will bid b e (v i , p n+k−1,1 ). If he belonged to the bidding ring and followed the same equilibrium i would bid b e (v i , p n,k ). As argued in the proof of Theorem 3.10, Lemma 3.9 shows that ∀k ≥ 2, ∀n ≥ 2, ∀v, b e (v, p n+k−1,1 ) &gt; b e (v, p n,k ), and so our result follows.</p><p>Intuitively, an agent gains by not having to consider the possibility that other bidders who would otherwise have belonged to his bidding ring might themselves be bidding rings. We can also show that singleton bidders and members of other bidding rings benefit from the existence of each bidding ring in the same sense. Following an argument similar to the one in Theorem 3.13, other bidders gain from not having to consider the possibility that additional bidders might represent bidding rings.</p><p>Paradoxically, as long as c n,k &gt; 0, other bidders' gain from the existence of a given bidding ring is greater than the gain of that ring's members.</p><p>Corollary 3.14 In the equilibrium described in Theorem 3.10, singleton bidders and members of other bidding rings have higher expected utility when k ≥ 2 agents form a bidding ring than when k additional agents participate directly in the main auction as singleton bidders.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Consider a singleton bidder in the first case, where the ring of k agents does exist. (It is sufficient to consider a singleton bidder, since other bidding rings bid in the same way as singleton bidders.) Following the equilibrium from Theorem 3.10 this agent would submit the bid b e (v i , p n,1 ). Theorem 3.13 shows that it is better to belong to a bidding ring (and thus to bid b e (v i , p n,k )) than to be a singleton bidder in an auction with the same number of agents (and thus to bid b e (v i , p n+k−1,1 ).</p><p>From the argument in Theorem 3.12 we know that When c n,k = 0, agent i obtains the same expected utility in all three cases.</p><formula xml:id="formula_96">b e (v i , p n,1 ) &lt; b e (v i , p n,k ). Thus ∀k ≥ 2, b e (v i , p n,1 ) &lt; b e (v i , p n+k−1,1 ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>For an efficient first-price auction, an agent i's expected utility</p><formula xml:id="formula_97">EU i is ∞ j=2 p(j)F j−1 (v i )b, where p(j)</formula><p>is the probability that there are a total of j agents in the economic environment, F j−1 (v i ) is the probability that i has the high valuation among these j agents, and b is the amount of i's bid.</p><p>First, we consider case (1). Let EU i,bc denote agent i's expected utility in E br as a member of a bidding ring of size k, in the equilibrium from Theorem 3.10. Recall that in this equilibrium the bidder with the globally highest valuation always wins, and if bidder i wins he will be made to pay b e (v i , p n,k ). In any case i will receive an unconditional positive payment of c n,k .</p><formula xml:id="formula_98">EU i,bc = ∞ j=2 p n,k (j)F j−1 (v i ) (v i − b e (v i , p n,k )) + c n,k (3.25)</formula><p>We now consider case (2). From Proposition 3.3 it is an equilibrium for agent i in economic environment E s to bid b e (v i , j) in a first-price auction with participation revelation, where j is the number of bidders announced by the auctioneer. Since the number of agents is distributed according to p n,k , agent i's expected utility in a first-price auction with participation revelation, which we denote EU i,pr , is</p><formula xml:id="formula_99">EU i,pr = ∞ j=2 p n,k (j)F j−1 (v i ) (v i − b e (v i , j)) (3.26) = ∞ =2 p n,k ( )F −1 (v i ) ∞ =2 p n,k ( )F −1 (v i ) ∞ j=2 p n,k (j)F j−1 (v i ) (v i − b e (v i , j)) = ∞ =2 p n,k ( )F −1 (v i ) v i − ∞ j=2 p n,k (j)F j−1 (v i ) ∞ =2 p n,k ( )F −1 (v i ) b e (v i , j) = ∞ =2 p n,k ( )F −1 (v i ) (v i − b e (v i , p n,k )) . (3.27)</formula><p>Observe that we make use of the definition of b e (v i , p) from Equation (3.2). Equation (3.27) is agent i's expected utility in case <ref type="formula">(3)</ref>, so i's expected utility is equal in cases <ref type="formula">(2)</ref> and <ref type="formula">(3)</ref>.</p><p>Intersecting equations (3.25) and (3.27), we get</p><formula xml:id="formula_100">EU i,bc − EU i,pr = c n,k . (3.28)</formula><p>When c n,k &gt; 0, agent i's expected utility is strictly greater in case (1) than in cases <ref type="formula">(2)</ref> and <ref type="formula">(3)</ref>; when c n,k = 0 he has the same expected utility in all three cases.</p><p>What about agents who do not belong to bidding rings? We can show in the same way that they are not harmed by the existence of bidding rings: they are neither better nor worse off in the bidding ring economic environment than facing the same distribution of opponents in the two cases described above. Proof. We follow the same argument as in Theorem 3.15, except that k = 1 and</p><formula xml:id="formula_101">EU i,bc does not include c n,k . Thus we get EU i,bc = EU i,pr .</formula><p>We now consider the ex-ante case. Observe that in this case an agent does not know whether or not he will be invited to a ring, as this is part of his type.  When ∀n, ∀k, c n,k = 0, agent i obtains the same expected utility in both cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>In case (1) agent i's expected utility (given an arbitrary n, which will be announced by the auctioneer rather than being a part of i's type) is</p><formula xml:id="formula_102">EU i,bc = ∞ 0 f (v i ) ∞ k=1 kγ A (k) ∞ k =1 k γ A (k ) ∞ j=2 p n,k (j)F j−1 (v i ) (v i − b e (v i , p n,k )) dv i + c n,k (3.29)</formula><p>In case (2) agent i's expected utility is</p><formula xml:id="formula_103">EU i,pr = ∞ 0 f (v i ) ∞ k=1 kγ A (k) ∞ k =1 k γ A (k ) ∞ j=2 p n,k (j)F j−1 (v i ) (v i − b e (v i , j)) dv i (3.30)</formula><p>We can make the same argument as in Theorem 3.15, starting with equations (3.29) and (3.30) instead of equations (3.25) and (3.26). The only difference is that after intersecting the equations we conclude that i prefers case (1) as long as there exist a pair (n, k) which are possible (i.e., γ c (n) &gt; 0 and γ a (k) &gt; 0) for which c n,k &gt; 0, and that otherwise i is indifferent between the three cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.4">Comparing Equilibria in E br</head><p>The theorems and corollaries in Section 3.4.3 allow us to compare the equilibrium from Theorem 3.10 with the equilibrium from Proposition 3.11. Since both bidders (and, trivially, ring centers) prefer the equilibrium from Theorem 3.10 to the equilibrium from Proposition 3.11, it follows that auctioneers must have the opposite preference. It turns out that auctioneers can disrupt bidding rings by making a slight change to the rules of the auction, so that the strategies described in Theorem 3.10 are no longer in equilibrium but the equilibrium from Proposition 3.11 is preserved. This can be achieved by making it possible for bidders to place bids in both their bidding rings and the main auction without detection by the ring center, either by allowing bidders to bid under "false names," or by refraining from publicly disclosing the winner of the auction. 6</p><p>If bidders can bid both in their bidding rings and anonymously in the main auction, the equilibrium from Theorem 3.10 breaks down in the following way. A bidder i can accept the invitation to join the bidding ring but place a very low bid with the ring center; at the same time, i can directly submit a competitive bid in the main auction.</p><p>Agent i will gain by following this strategy when all other agents follow the strategies specified in Theorem 3.10 because accepting the invitation to join the bidding ring ensures that the ring does drop all but one of its members and also causes the high bidder to bid less than he would if he were not bound to the collusion protocol. If the bidding ring drops any bidders other than i then all agents' bids will also be lowered because the number of participants announced by the auctioneer will be smaller, compared to the case where the bidding ring did not exist or where it was disbanded.</p><p>6 Observe that these options may not be available to all auctioneers; e.g., government auctions may be prohibited from allowing false-name bidding and required to publicly disclose winners.</p><p>However, if false-name bidding is impossible and the winner of the auction is publicly disclosed then the ring center can detect an agent who has deviated in this way.</p><p>Because the agent has agreed to participate in the bidding ring the ring center has the power to punish this agent and make the deviation unprofitable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Discussion</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.1">Assumptions</head><p>To emphasize the generality of our work and to suggest directions in which it might be extended, we restate our substantive assumptions here:</p><p>• Bidders are risk-neutral, with independent private values drawn from an arbitrary continuous and atomless distribution f on the interval [0, 1].</p><p>• The distribution over the number of agents in the economic environment has the property that the numbers of agents invited to each bidding ring are independent.</p><p>• Invitations to join bidding rings are exogenous, and each bidder receives at most one invitation.</p><p>• Bidders are unable to place bids both in the bidding ring and directly in the main auction.</p><p>• Only a single bidding ring protocol is used in the auction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.2">Conclusions</head><p>We have presented a formal model of bidding rings which in many ways extends models traditionally used in the study of collusion. Most importantly, all agents behave strategically and take into account the possibility that groups of other agents will collude. Other features of our setting include a stochastic number of agents and of bidding rings in each auction, and revelation by the auctioneer of the number of bids received. The strategy space is expanded so that the decision of whether or not to join a bidding ring is part of an agent's choice of strategy. Bidding rings make money on expectation, and can optionally be configured so they never lose money.</p><p>We showed a bidding ring protocol for first-price auctions that leads to a (globally) efficient allocation in equilibrium, and which can optionally avoid the use of sidepayments. In this equilibrium all invited agents choose to participate, even when the bidding ring operates in a single auction as opposed to a sequence of auctions.</p><p>This means that the protocol's stability does not rely on the threat of an agent being denied future opportunities to collude.</p><p>We asked the question of whether agents gain by participating in bidding rings in first-price auctions in three different ways:</p><p>1. Could any agent gain by deviating from the protocol? 2. Would any agent be better off if his bidding ring did not exist?</p><p>3. Would any agent would be better off (either ex-post or ex-ante) in an economic environment that did not include bidding rings at all?</p><p>We have shown that agents are strictly better off in all three senses. (In the third sense, the gain is only strict when ring centers make a side-payment to agents.) We have also shown that each bidding ring causes non-members to gain in the second sense, and does not hurt them in the third sense.</p><p>Chapter 4</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Local-Effect Games</head><p>We present a new class of games, local-effect games (LEGs), which exploit structure in a different way from other compact game representations studied in AI. We show both theoretically and empirically that these games often (but not always) have purestrategy Nash equilibria. Finding a potential function is a good technique for finding such equilibria. We give a necessary and sufficient conditions for LEGs to have potential functions, and provide the functions for each case. We also show a general case where pure-strategy equilibria exist in the absence of potential functions. In experiments, we show that myopic best-response dynamics converge quickly to pure strategy equilibria in games not covered by our positive theoretical results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Introduction</head><p>Games have long been studied in AI as a model of both competitive and cooperative multiagent interactions. While many AI researchers have concentrated on cooperative settings (see, e.g., <ref type="bibr" target="#b7">[Boutilier, 1996;</ref><ref type="bibr" target="#b35">Guestrin et al., 2001]</ref>), there has also been growing interest in formulating competitive settings as games and in computing Nash equilibria for these games (see e.g., <ref type="bibr" target="#b4">[Billings et al., 2003;</ref><ref type="bibr" target="#b93">Reeves &amp; Wellman, 2003;</ref><ref type="bibr" target="#b13">Conitzer &amp; Sandholm, 2002]</ref>). The computational obstacles to computing equilibria in general games has led to a parallel line of work on compact representations of games with large numbers of players, and games for which the computation of equilibria is tractable <ref type="bibr" target="#b50">[Koller &amp; Milch, 2001;</ref><ref type="bibr" target="#b114">Vickrey &amp; Koller, 2002;</ref><ref type="bibr" target="#b46">Kearns et al., 2001;</ref><ref type="bibr" target="#b47">Kearns &amp; Mansour, 2002;</ref><ref type="bibr" target="#b99">Roughgarden &amp; Tardos, 2001;</ref><ref type="bibr" target="#b78">Mura, 2000]</ref>. Much work in this vein has been based on the exploitation of one of two kinds of locality. First, some approaches exploit unconditional independencies between players' abilities to affect each other's payoffs <ref type="bibr" target="#b50">[Koller &amp; Milch, 2001;</ref><ref type="bibr" target="#b114">Vickrey &amp; Koller, 2002;</ref><ref type="bibr" target="#b46">Kearns et al., 2001;</ref><ref type="bibr" target="#b6">Blum et al., 2003]</ref>. Second, some approaches exploit symmetry in utility functions along with context-specific independencies between players' effects on each other; more precisely, cases in which players' abilities to affect each other depend on the actions they choose. Here we study games in this second class, because we believe that this sort of context-specific independence is more common in real-world games.</p><p>Although compact representation has not been a primary motivation for economists, some work from economics does fall into the framework defined above. Most influentially, congestion games were defined by <ref type="bibr" target="#b97">Rosenthal [1973]</ref>. In these games each agent i selects a subset S i of a set of resources R; where n r is the number of agents who choose resource r ∈ R, and F r are arbitrary functions for each r, agent i pays:</p><formula xml:id="formula_104">p i (S i , n) = r∈S F r (n r ) (4.1)</formula><p>The sets of actions available to each agent do not have to be identical or even overlapping. Observe that agent payoffs often do not exhibit any unconditional independencies: whenever two agents have action choices that name the same resource, they can affect each other's payoffs. On the other hand, context-specific independence does exist when two agents choose non-intersecting resource subsets. The main result in <ref type="bibr" target="#b97">[Rosenthal, 1973]</ref> was that congestion games always have pure-strategy Nash equilibria (PSNE) . This is important because, although all games have mixed-strategy Nash equilibria <ref type="bibr" target="#b79">[Nash, 1950]</ref>, there are relatively few known classes of interesting games with pure strategy equilibria. At the same time, pure strategy equilibria are attractive: they can be more likely to arise in play as they are more intuitive than mixed-strategy equilibria for many players; they can be easier for agents to coordinate to; as there are a finite number of pure strategy profiles in a given game, they can be easier to compute than mixed strategy equilibria.</p><p>Rosenthal's work was extended by <ref type="bibr" target="#b76">Monderer and Shapley [1996]</ref>, who showed that the class of congestion games is equivalent to the class of games with potential functions. A potential function P : bounded effects <ref type="bibr" target="#b47">[Kearns &amp; Mansour, 2002]</ref>, and Roughgarden studied a nonatomic variant <ref type="bibr" target="#b99">[Roughgarden &amp; Tardos, 2001]</ref>. In this chapter we propose a new class, which we call local-effect games.</p><formula xml:id="formula_105">A 1 × · · · × A n → R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Local-Effect Games</head><p>In congestion games, whenever two agents affect each other's payoff, they each do so by the same amount. There are many natural settings which are modeled by such locally-effecting actions. One problem domain that has been studied in economics for three quarters of a century is the location problem <ref type="bibr" target="#b44">[Hotelling, 1929</ref>]. These problems model situations where agents must choose a location to operate their business in the presence of other competing agents, and each agent's profit depends on how far she is from her competitors. The canonical example concerns ice cream vendors who must choose a spot on the beach to set up a kiosk, with agents' utility depending on how many other ice cream sellers have located themselves in the same or adjacent areas. Work from economics on this problem has usually dealt with one-dimensional continuous spaces and has not modeled local effects explicitly; also, game theoretic analyses have typically considered only settings with 2 or 3 agents (see e.g., <ref type="bibr" target="#b84">[Osborne &amp; Pitchik, 1987]</ref>). It is easy to think of many variants on the location problem: ice cream sellers arranging themselves around a lake (ring structure); vendors opening coffee houses in a city (grid structure); pairs at a cocktail party trying to pick a quiet room, with noise proportional to the number of people in the room, and noise also emanating from nearby rooms (arbitrary structure). </p><formula xml:id="formula_106">cost(a) = F i,i (D(i)) + j∈neigh(A) F j,i (D(j)). (4.2)</formula><p>We denote a class of local-effect games by the pair G, F : i.e., the set of localeffect games having the same graph, node and edge functions, but differing in the number of agents. Analogously, we can define a class of congestion games: the set of congestion games having the same resource functions and the same action choices for every agent, but differing in the number of agents. Finally, since there exists a bijection between congestion games and potential games, we can define a class of potential games as a set of potential games that correspond to all the members of some class of congestion games.</p><p>We assume that there are no local effects from unpopulated nodes:</p><formula xml:id="formula_107">Assumption 4.1 ∀a ∈ A, ∀a = a ∈ A, F a,a (0) = 0</formula><p>Also, we make an assumption about the connectivity of G:</p><formula xml:id="formula_108">Assumption 4.2 ∀A, B = A ∈ A, (A, B) ∈ E ⇔ (B, A) ∈ E</formula><p>That is, each pair of nodes in the graph are either both or neither neighbors of each other, though they might influence each other according to different local-effect functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4.3 A local-effect game is a bidirectional local-effect game (B-LEG) when</head><p>∀a ∈ A, ∀a = a ∈ A, F a,a (x) = F a ,a (x).</p><p>For B-LEGs local-effect functions between pairs of actions are always the same in both directions: i.e., the local-effect graph G is undirected. Note however that for a given distribution of agents the magnitude of the local effects between a pair of actions may be different.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4.4 A local-effect game is a uniform local-effect game (U-LEG) when</head><formula xml:id="formula_109">∀A, B, C ∈ A (B ∈ neigh(A) ∧ C ∈ neigh(A)) → ∀x F A,B (x) = F A,C (x).</formula><p>That is, if action A has any effect on nodes B and C then the same function governs its effect on both. We define notation for the uniform effect from node A:</p><formula xml:id="formula_110">∀y ∈ A, F A,y = F u A (x).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Theoretical Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Nonexistence of Pure Strategy Equilibria</head><p>Rosenthal was able to show that congestion games always have a PSNE. </p><formula xml:id="formula_111">F A,A (x) = 2.79x, F B,B (x) = 4.72x, F C,C (x) = 1.5x, F A,B (x) = 0.64 log x, F A,C (x) = 0.32 log x, F B,C (x) = 2.77 log x.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Pure Strategy Equilibria: Potential Functions</head><p>In this section we show that two interesting classes of local-effect games have potential functions, meaning that they always have pure-strategy Nash equilibria. Although these results show regions of overlap between the class of congestion games and the class of local-effect games, the potential functions themselves are interesting as their construction is nontrivial. Also, these results are useful because they make it possible for the games to be described in the more intuitive local-effect game framework.</p><p>Theorem 4.5 Bidirectional local-effect games have pure strategy Nash equilibria if</p><formula xml:id="formula_112">∀i, ∀j = i there exist constants m i,j such that F i,j (x) = m i,j x.</formula><p>Proof. Recall that the existence of a potential function entails the existence of a pure-strategy Nash equilibrium. We prove the result by giving a potential function:</p><formula xml:id="formula_113">P (D) = n i=1 D(i) j=1 F i,i (j) + 1 2 n i=1 j∈neigh(i) D(i)m j,i D(j) (4.3)</formula><p>The first term is the congestion game potential function for the case where every action names one unique resource. A game with only functions of the form F i,i (x) is a congestion game, and so must have the congestion game potential function. The relationship between each F i,j (x) function and the agent's cost function is additive, and potential functions are only used for taking differences. Thus if we can find a potential function P for a game with only local effects and all F i,i (x) = 0, the potential function for a general B-LEG will be the sum of the congestion game potential function and P .</p><p>Thus it remains to argue that our second term is this P : that it captures changes in utility arising from local effects. Consider the sum of the contribution of local effects to each agent's utility:</p><formula xml:id="formula_114">s = n i=1 j∈neigh(i) D(i)m j,i D(j)</formula><p>. When a single agent a deviates, s increases by twice the amount of the change to a's utility, because all  Proof. Again we provide a potential function:</p><formula xml:id="formula_115">P (D) = n i=1 D(i) j=1 F i,i (j) − n i=1 D(i)−1 j=1 F u i (j) (4.4)</formula><p>As argued in Theorem 4.5, to construct a potential function it is sufficient to add the standard congestion game potential function with a function that accounts for changes in utility due to local effects. This explains the first term.</p><p>Let distributions X and Y be identical except that D X (A) = α and D X (B) = β,</p><formula xml:id="formula_116">while D Y (A) = α − 1 and D Y (B) = β + 1. Assuming F A,A (·) = F B,B (·) = 0, P (X) − P (Y ) = F u B (β) − F u A (α − 1)</formula><p>. This is precisely the change in utility for an agent deviating from A in X to B in Y : the agent will be spared the local effect F u B (β) since he moves to B and is no longer subject to its local effect; however, since he moves away from A and the graph is a clique, he is now subject to the local effect F u A (α − 1). Because the graph is a clique, and because the game is a U-LEG, the argument holds no matter which pair of nodes is chosen as A and B.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.3">LEGs and Potential Functions</head><p>Finding potential functions is an effective way of proving the existence of pure-strategy equilibria; however, there are many LEGs for which potential functions can be shown not to exist. In this section we give a complete characterization of the class of LEGs which have potential functions. We will state three lemmas that consider arbitrary graphs with every possible subgraph involving three nodes 2 , and give sufficient conditions for these LEGs not to have potential functions. Finally, we will combine these lemmas with the positive results in Theorems 4.5 and 4.6 to show that the same conditions are also necessary.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Assume for contradiction that every LEG in the class 3 has a potential function P . We will consider three distributions of agents in order to derive properties of P . Without loss of generality, we take A, B and C to be the first three actions in the game, and we take the total number of actions to be n. If distribution X were the case and an agent playing action A switched to action B, then distribution Y would be the result. Thus:</p><formula xml:id="formula_117">P (X) − P (Y ) = [u A (α)] − [F C,B (γ) + u B (β + 1)] (4.6)</formula><p>If X were the case and an agent playing action C switched to action B, then Z would be the result. Thus:</p><formula xml:id="formula_118">P (X) − P (Z) = [F B,C (β) + u C (γ)] − [F C,B (γ − 1) + u B (β + 1)] (4.7)</formula><p>If Y were the case and an agent playing action C switched to action A, then Z would be the result. Thus:</p><formula xml:id="formula_119">P (Y ) − P (Z) = [F B,C (β + 1) + u C (γ)] − [u A (α)] (4.8)</formula><p>From equations (4.6) and (4.7), we can infer:</p><formula xml:id="formula_120">P (Y ) − P (Z) = [P (X) − P (X)] + P (Y ) − P (Z) = [P (X) − P (Z)] − [P (X) − P (Y )] = [F B,C (β) + u C (γ)] − [F C,B (γ − 1) + u B (β + 1)] − [u A (α)] − [F C,B (γ) + u B (β + 1)] (4.9)</formula><p>Intersect Equation (4.9) with Equation (4.8) and rearrange. Observe that u A (α),   Proof.</p><p>This proof follows the proof of Lemma 4.7 and uses the same setting and definitions, except that (as stated in the theorem and depicted in <ref type="figure" target="#fig_12">Figure 4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2)</head><p>A ∈ neigh(B).</p><p>If distribution X were the case and an agent playing action A switched to action B, then distribution Y would be the result. Thus:</p><formula xml:id="formula_121">P (X) − P (Y ) = [F B,A (β) + u A (α)] − [F A,B (α − 1) + F C,B (γ) + u B (β + 1)] (4.11)</formula><p>If X were the case and an agent playing action C switched to action B, then Z would be the result. Thus:</p><formula xml:id="formula_122">P (X) − P (Z) = [F B,C (β) + u C (γ)] − [F A,B (α) + F C,B (γ − 1) + u B (β + 1)] (4.12)</formula><p>If Y were the case and an agent playing action C switched to action A, then Z would be the result. Thus:</p><formula xml:id="formula_123">P (Y ) − P (Z) = [F B,C (β + 1) + u C (γ)] − [F B,A (β + 1) + u A (α)] (4.13)</formula><p>From equations (4.11) and (4.12), we can infer:</p><formula xml:id="formula_124">P (Y ) − P (Z) = [F B,C (β) + u C (γ)] − [F A,B (α) + F C,B (γ − 1) + u B (β + 1)] − [F B,A (β) + u A (α)] − [F A,B (α − 1) + F C,B (γ) + u B (β + 1)] (4.14)</formula><p>Intersect Equation (4.14) with Equation (4.13) and rearrange:  Lemma 4.9 There exists no class of local-effect games where every game in the class has a potential function, in the case whereB ∈ neigh(C) and A ∈ neigh(B) and</p><formula xml:id="formula_125">I</formula><formula xml:id="formula_126">A ∈ neigh(C) and (F B,C = F C,B or F B,C is nonlinear or F A,B = F B,A or F A,B is nonlinear or F A,C = F C,A or F A,C is nonlinear) and (F A,B = F A,C or F B,A = F B,C or F C,A = F C,B ).</formula><p>Proof. This proof follows the proof of Lemma 4.7 and uses the same setting and definitions, except that (as stated in the theorem and depicted in <ref type="figure" target="#fig_12">Figure 4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3)</head><p>A ∈ neigh(B) and A ∈ neigh(C).</p><p>If distribution X were the case and an agent playing action A switched to action B, then distribution Y would be the result. Thus:</p><formula xml:id="formula_127">P (X) − P (Y ) = [F B,A (β) + F C,A (γ) + u A (α)] − [F A,B (α − 1) + F C,B (γ) + u B (β + 1)] (4.16)</formula><p>If X were the case and an agent playing action C switched to action B, then Z would be the result. Thus:</p><formula xml:id="formula_128">P (X) − P (Z) = [F A,C (α) + F B,C (β) + u C (γ)] − [F A,B (α) + F C,B (γ − 1) + u B (β + 1)] (4.17)</formula><p>If Y were the case and an agent playing action C switched to action A, then Z would be the result. Thus:</p><formula xml:id="formula_129">P (Y ) − P (Z) = [F A,C (α − 1) + F B,C (β + 1) + u C (γ)] − [F B,A (β + 1) + F C,A (γ − 1) + u A (α)] (4.18)</formula><p>From equations (4.16) and (4.17), we can infer:</p><formula xml:id="formula_130">P (Y ) − P (Z) = [F A,C (α) + F B,C (β) + u C (γ)] − [F A,B (α) + F C,B (γ − 1) + u B (β + 1)] − [F B,A (β) + F C,A (γ) + u A (α)] − [F A,B (α − 1) + F C,B (γ) + u B (β + 1)] (4.19)</formula><p>Intersect Equation (4.19) with Equation (4.18) and rearrange: We can now give necessary and sufficient conditions for a class of LEGs to be representable as potential games (and thus, as congestion games). Next, we prove that the stated conditions are necessary. We begin by considering classes of LEGs having three or more actions by examining all possible local-effect graph structures. Clearly, we will have considered all possible graphs having three or more nodes if we consider all graphs with no edges, all cliques, and all graphs containing subgraphs having three nodes connected by exactly one or exactly two edges.</p><p>If the local-effect graph has no edges, then all LEGs in the class are B-LEGs with linear local-effect functions.</p><p>If the local-effect graph contains a three-node subgraph having exactly one edge, and the games are not bidirectional with linear functions, Lemma 4.7 shows that no equivalent class of potential games exists.</p><p>If the local-effect graph contains a subgraph with three nodes and exactly two edges, and the games are not bidirectional with linear functions, Lemma 4.8 shows that no equivalent class of potential games exists. If the local-effect graph is a clique, it contains a clique of size three as a subgraph. If this graph is neither uniform nor bidirectional with linear edge functions, Lemma 4.9 shows that no equivalent class of potential games exists.</p><p>All that remains is to consider games having exactly one or two actions. A class of games with only a single action is trivially equivalent to a class of potential games because no actions exist to which agents can deviate. All LEGs with only two actions either have no edges, in which case they are B-LEGs with linear local-effect functions, or they have one edge, in which case they are U-LEGs for which the local-effect graph is a clique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.4">Other Pure-Strategy Equilibria</head><p>We are able to prove the existence of pure-strategy Nash equilibria for classes of graphs, and node and edge functions that Theorem 4.10 shows cannot have potential functions. The following constructive proof has classes of B-LEGs and U-LEGs as special cases:</p><p>Theorem 4.11 If a local-effect game satisfies:</p><formula xml:id="formula_131">1. ∀A ∈ A, ∀B ∈ neigh(A), ∀x, F A,A (x) ≤ F A,B (x) 2. ∀A, B ∈ A, ∀x ≥ 1, F A,B (x + 1) − F A,B (x) ≤ F A,B (x) − F A,B (x − 1), 3. ∀A, B = A ∈ A, ∀x ≥ 1, F A,B (x) − F A,B (x − 1) &gt; 0,</formula><p>then there exists a pure-strategy Nash equilibrium in which agents choose nodes that constitute an independent set. 4</p><p>Proof. This proof proceeds by induction, building up a Nash equilibrium one agent at a time, and with each agent making a myopic best response to the previous distribution. In the case of a single agent, it is clearly an equilibrium for him to select the best node. Define D i as the distribution of agents at induction step i. Assume that n − 1 agents have each selected the best node in turn, resulting in a distribution D n−1 which is a Nash equilibrium and also an independent set. We must show that when an additional agent n chooses the best node the resulting distribution D n is still an independent set, and still a Nash equilibrium.</p><p>First, we show that the new distribution is an independent set. Assume for the purposes of contradiction that it was best for n to choose a node that does not belong to the independent set. Then it must be the case that the selected node has at least one neighbor which has been chosen by one or more other agents. Let the node selected by n be A, and let B be some neighboring node. From condition 2 in the theorem (linearity/sublinearity), we can infer that: From condition 1 in the theorem (functional dominance), we know that:</p><formula xml:id="formula_132">F B,B (D n−1 (B)) ≤ F B,A (D n−1 (B)) (4.23)</formula><p>Thus we can use Equation (4.23) to weaken the bound in Equation (4.22) to get:</p><formula xml:id="formula_133">F B,B (D n−1 (B) + 1) ≤ F B,A (D n−1 (B)) + F B,B (1) (4.24)</formula><p>Define the utility at inductive step i for an agent taking action X, and disregarding any local effect from action Y :</p><formula xml:id="formula_134">U i X,∼Y (z) = F X,X (z) + W ∈neigh(X)|W =Y F W,X (D i (W )).</formula><p>At some step i in the induction, D i (B) = 0 and D i (A) = 0, but D i+1 (B) = 1.</p><p>From the fact that the distribution of agents resulted from myopic choices (stated in the induction hypothesis), we know that:   <ref type="figure" target="#fig_12">Figure 4</ref>.5: Arbitrary -k n = 3, 50 agents hypothesis) j will not deviate from a new distribution D that differs only in that node C is more costly.</p><formula xml:id="formula_135">F B,B (1) ≤ U i A,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Empirical Findings</head><p>Section 4.3 shows that there are many cases in which local-effect games have purestrategy Nash equilibria. Myopic best response has been shown to be an effective technique for computing pure strategy equilibria in a variety of settings <ref type="bibr" target="#b76">[Monderer &amp; Shapley, 1996]</ref>. In this section we show that this simple algorithm can compute pure strategy equilibria for some very large local-effect games that are not covered by any of the positive results in Section 4.3 and that do not have potential functions. We present five different graph structures with similar local-effect functions, and show sample equilibria. We should note that we have been able to find equilibria experimentally for most B-LEGs 5 with different graph structure and different local-effect functions that we have tried, and that convergence occurs within a second in most cases. As with our theoretical results, we do not claim that these equilibria are unique; indeed, because agents' cost functions are symmetric, a new equilibrium can always be constructed from a given equilibrium by swapping action choices between pairs of agents. Furthermore, we have observed many cases where multiple structurally different equilibria exist in the same local-effect game.       we remove a single node (consider the same location problem when one node becomes unavailable). Observe that agents generally cluster around the missing node, except for one neighboring node that is entirely unpopulated, as a result of the large local effects acting upon it.</p><p>The amount of time it took to reach convergence in each graph is shown in <ref type="figure" target="#fig_12">Figure   4</ref>.4, starting in each case with a uniform distribution of agents across the actions.</p><p>Finally, since the 'arbitrary' graph in <ref type="figure" target="#fig_12">Figure 4</ref>.5 took the longest to converge (34% of the agents moved before convergence occurred) we examine this graph in more detail in <ref type="figure" target="#fig_12">Figure 4</ref>.4. Observe that as we vary the number of agents, the number of steps required for convergence increases roughly linearly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Conclusions</head><p>To encourage future work and to summarize the local-effect game setting, we restate the most important conditions that must be satisfied in order for a game to be representable as a LEG:</p><p>1. Symmetry: every agent has the same action choices and utility function; 2. Anonymity: every agent affects other agents in the same way; thus, we can ignore agent identities and consider only the number of agents taking each action;</p><p>3. Additivity: the relationship between different local effects acting on the same node is linear;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Connected Neighbors: if A is connected to B in the local-effect graph then</head><p>B is also connected to A. However, each edge can potentially be labelled with a different function.</p><p>Local-effect games exploit context-specific independence between players' payoff functions. Finding a potential function is a good technique for finding equilibria;</p><p>we identify all the local-effect games for which potential functions exist, and provide the potential function in each case. We also give a positive theoretical result for a broad class of games that do not have potential functions. Furthermore, we can show that myopic best response dynamics converge quickly in some other cases in which potential functions do not exist, and which are not covered by our positive theoretical results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Part II Computational Issues in Multiagent Resource Allocation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>95</head><p>Chapter 5</p><p>Combinatorial Auctions</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Motivation</head><p>Auctions are the most widely studied mechanism in the mechanism design literature in economics and game theory <ref type="bibr" target="#b24">[Fudenberg &amp; Tirole, 1991]</ref>. This is due to the fact that auctions are basic protocols, serving as the building blocks of more elaborated mechanisms. Given the wide popularity of auctions on the Internet and the emergence of electronic commerce, where auctions serve as the most popular game-theoretic mechanism, efficient auction design has become a subject of considerable importance for researchers in multi-agent systems (e.g., <ref type="bibr" target="#b118">[Wellman et al., 1998;</ref><ref type="bibr" target="#b77">Monderer &amp; Tennenholtz, 2000]</ref>). The use of auctions in business-to-business trades is also increasing rapidly. Within AI there is growing interest in using auction mechanisms to solve resource allocation problems in competitive multiagent systems. For example, auctions and other market mechanisms are used in network bandwidth allocation, distributed configuration design, factory scheduling, and operating system memory allocation <ref type="bibr" target="#b101">[S. H. Clearwater, 1996;</ref><ref type="bibr" target="#b116">Wellman, 1993]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Complementarity</head><p>The value of a good to a potential buyer can depend on what other goods s/he wins.</p><p>We say that there exists complementarity between goods γ 1 and γ 2 to agent a if u a ({γ 1 , γ 2 }) &gt; u a ({γ 2 }) + u a ({γ 2 }), where u a (S) is the utility to a of acquiring the set of goods S. If goods γ 1 and γ 2 were auctioned separately, it is likely that neither of the typically desired properties for auctions-efficiency or revenue maximizationwould hold. One way to accommodate complementarity in auctions is to allow bids for combinations of goods as well as for individual goods. Combinatorial auctions are a class of auctions that accommodate bidders whose valuations exhibit complementarities: multiple goods are auctioned simultaneously and bidders place as many bids as they want for different bundles of goods with the guarantee that these bundles will be allocated "all-or-nothing". For example, imagine an auction of used electronic equipment. A bidder might value a particular TV at x and a particular VCR at y, but value the pair at z &gt; x + y.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Substitutability</head><p>It is also common for bidders to desire a second good less once they have won a first good. We say that there exists substitutability between goods γ 1 and γ 2 to agent a when u a ({γ 1 , γ 2 }) &lt; u a ({γ 1 }) + u a ({γ 2 }). A common example of substitutability is for a bidder to be indifferent between several goods but not to want more than one. In order to be useful, a combinatorial auction mechanism should provide some way for bidders to indicate that goods (or, more generally, bundles of goods) are substitutable. Combinatorial auctions that allow the description of valuation functions involving both complementarity and substitutability can be seen as providing a general framework for allocation and decision-making problems among agents in competitive multiagent systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Applications</head><p>Combinatorial auctions are applicable to many real-world situations. In an auction for the right to use railroad segments a bidder desires a bundle of segments that connect two particular points; at the same time, there may be alternate paths between these points and the bidder needs only one <ref type="bibr" target="#b9">[Brewer &amp; Plott, 1996]</ref>. Similarly, in the FCC spectrum auction bidders may desire licenses for multiple geographical regions at the same frequency band while being indifferent to which particular band they receive <ref type="bibr" target="#b73">[Milgrom, 1998</ref>]. These and other real-world applications of combinatorial auctions are described in more detail in Chapter 7. While economics and game theory provide many insights into the potential uses of such auctions, they have little to say about computational considerations. This is an obstacle to the practical use of combinatorial auctions, because it turns out that combinatorial auctions often give rise to very hard computational problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Combinatorial Auction Winner Determination</head><p>In a combinatorial auction, a seller is faced with a set of price offers for various bundles of goods, and his aim is to allocate the goods in a way that maximizes his revenue. The winner determination problem (WDP) is choosing the subset of bids that maximizes the seller's revenue, subject to the constraint that each good can be allocated at most once.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Formal definition</head><p>Let G = {γ 1 , γ 2 , . . . , γ m } be a set of goods, and let B = {b 1 , . . . , b n } be a set of bids.</p><p>Bid b i is a pair (p(b i ), g(b i )) where p(b i ) ∈ R + is the price offer of bid b i and g(b i ) ⊆ G is the set of goods requested by b i . For each bid b i define an indicator variable x i that encodes the inclusion or exclusion of bid b i from the allocation.</p><p>Problem 5.1 The single-unit WDP is the following integer program:</p><formula xml:id="formula_136">maximize: i x i p(b i ) subject to: i|γ∈g(b i ) x i ≤ 1 ∀γ ∈ G x i ∈ {0, 1} ∀i</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">XOR constraints</head><p>Problem 5.1 allows bidders to describe complementarities in their valuations; however, it does not explicitly allow the expression of substitutabilities. To do so, bidders must have some way of indicating that their interest in two bundles is mutually exclusive.</p><p>Let S = {s 1 , . . . , s κ }, where each s i denotes a set of bids which are not allowed to be allocated together by the optimization algorithm.</p><p>Problem 5.2 The single-unit WDP with XOR constraints is the following integer program:</p><formula xml:id="formula_137">maximize: i x i p(b i ) subject to: i|γ∈g(b i ) x i ≤ 1 ∀γ ∈ G i|b i ∈s j x i ≤ 1 ∀j ∈ [1, κ] x i ∈ {0, 1} ∀i</formula><p>Some algorithms may not provide a way of specifying sets of mutually exclusive bundles s. Luckily, it is possible to use an encoding trick, introducing dummy goods <ref type="bibr" target="#b25">[Fujishima et al., 1999]</ref>. Dummy goods do not correspond to actual goods in the auction, but serve to enforce mutual exclusion between bids. For example, if bids b 1 and b 2 are intended to be mutually exclusive, we add a dummy good d to each bundle, defining new bids b i where g(b i ) = g(b i )∪d. Since the good d can be allocated only once, at most one of b 1 and b 2 will allocated. More generally, it is possible to introduce n-unit dummy goods to enforce the condition that no more than n of a set of bids may be allocated (see Section 5.2.3 for a definition of units), and to use multiple dummy goods with the same bundles to enforce other complex constraints.</p><p>This technique can lead to a combinatorial explosion in the number of bids if many goods are substitutable, but in many interesting cases this does not occur. While dummy goods increase the expressive power of the bidding language, making use of them requires no changes to an optimization algorithm. In fact, observe that Problem 5.2 is exactly the same as Problem 5.1 when XOR constraints are expressed using dummy goods. Hence, in what follows we do not discuss explicit XOR constraints, but assume that dummy goods are used where required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Multi-unit auctions</head><p>In some cases, the set of goods at auction will contain subsets of goods among which all bidders are indifferent. We call these subsets units of a single good. While it is possible to auction each unit as a separate good, this forces bidders interested in </p><formula xml:id="formula_138">i x i p(b i ) subject to: i|γ∈g(b i ) x i ≤ q(γ) ∀γ ∈ G x i ∈ {0, 1} ∀i</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4">Asymptotic Hardness</head><p>With or without XOR constraints, the WDP is equivalent to weighted set-packing and is therefore N P-hard even in its single-unit variant: see e.g., <ref type="bibr" target="#b98">[Rothkopf et al., 1998</ref>]. Furthermore, it is known that the WDP is inapproximable within any constant factor: see e.g., <ref type="bibr" target="#b102">[Sandholm, 1999]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Related Work on the WDP</head><p>In recent years many researchers have been interested in the combinatorial auction winner determination problem. For a survey, see <ref type="bibr" target="#b16">[de Vries &amp; Vohra, 2003</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Tractable Subcases</head><p>Rothkopf et al. <ref type="bibr">[1998]</ref> identified the following subcases of the single-unit WDP which may be solved in polynomial time:</p><p>1. bids contain no more than two goods;</p><p>2. for any two bids, either they are disjoint or one is a subset of the other; or 3. bids only name goods that are consecutive given a one-dimensional ordering. 1</p><p>More recent work on tractable subcases may be found in <ref type="bibr" target="#b81">[Nisan, 2000;</ref><ref type="bibr" target="#b112">Tennenholtz, 2000;</ref><ref type="bibr" target="#b16">de Vries &amp; Vohra, 2003</ref>]. The case of infinitely divisible goods may be solved in polynomial time by using linear programming techniques: we solve the linear programming relaxation of Problem 5.1, where the integrality constraint is replaced by the linear constraint 0 ≤ x i ≤ 1.  <ref type="bibr" target="#b56">Lehmann et al. [1999]</ref>, have proposed alternative economic mechanisms that are built around approximation algorithms. It is also possible to make bidders responsible for improving the quality of the approximation. <ref type="bibr" target="#b3">Banks et al. [1989]</ref> and <ref type="bibr" target="#b10">Bykowsky et al. [1995]</ref> have reported a mechanism called AUSM in which non-winning bids are pooled in a stand-by queue. Bidders can combine their bids with other bids currently in the queue to form new allocations. A new allocation is adopted if it generates more revenue than the previously best allocation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Approximation algorithms</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.3">Solving the WDP to optimality</head><p>Although the WDP is N P-hard, in practice it is possible to address interestinglylarge datasets with heuristic methods <ref type="bibr" target="#b25">[Fujishima et al., 1999;</ref><ref type="bibr" target="#b102">Sandholm, 1999;</ref><ref type="bibr" target="#b30">Gonen &amp; Lehmann, 2000;</ref><ref type="bibr" target="#b63">Leyton-Brown et al., 2000b;</ref><ref type="bibr" target="#b81">Nisan, 2000;</ref><ref type="bibr" target="#b103">Sandholm &amp; Suri, 2000;</ref><ref type="bibr" target="#b31">Gonen &amp; Lehmann, 2001;</ref><ref type="bibr" target="#b104">Sandholm et al., 2001]</ref>. Furthermore, there are reasons why it can be important to solve the WDP to optimality, and why restrictions to a tractable subcase may not be acceptable. For example, optimal solutions to the WDP are required in order for the Vickrey-Clarke-Groves mechanism <ref type="bibr" target="#b70">[Mas-Colell et al., 1995;</ref><ref type="bibr" target="#b113">Varian, 1995]</ref> give rise to dominant strategies. In fact, <ref type="bibr" target="#b82">Nisan and Ronen [2000]</ref> show that the Vickrey-Clarke-Groves mechanism can give rise to arbitrarily bad outcomes when agents suspect that there is any possibility that any non-optimal solution to the WDP will be used. As another example, <ref type="bibr" target="#b88">Parkes [1999]</ref>, among others, has proposed an ascending auction mechanism that requires a provably-optimal solution to the WDP. Because of the importance of such applications, we concern ourselves in this work only with provably-optimal solutions to the WDP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Chapter 6</head><p>Algorithms for Solving the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Combinatorial Auction Winner Determination Problem</head><p>We present two branch-and-bound algorithms that exploit instances' particular bid structures to find optimal solutions to the WDP, using contextual information to make upper bounds tighter. Upper bounds are further tightened by online caching of results from unpruned subtrees. The first algorithm, CASS, considers only the single-unit WDP (i.e., it solves WDP Problem 5.1). The second algorithm, CAMUS, generalizes CASS, addressing the multi-unit WDP (Problem 5.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">CASS Algorithm</head><p>In this section we present an algorithm, Combinatorial Auction Structured Search (CASS), a branch-and-bound search algorithm with a novel heuristic. Most importantly, CASS structures the search space in a way that provides context to this heuristic in order to allow more pruning during the search and that avoids consideration of most infeasible allocations. CASS also caches the results of partial searches and prunes the search tree. Finally, CASS may be used as an anytime algorithm, as it tends to find good allocations quickly.</p><p>Before proceeding, we must introduce additional notation pertaining to alloca-</p><p>tions. An allocation π ⊆ B is a subset of the bids where ∀b 1 ∈ B, b 2 = b 1 ∈ B, g(b 1 ) ∩ g(b 2 ) = {}. We overload the functions g() and p() to apply to allocations: g(π) = b∈π g(b) and p(π) = binπ p(b). A full allocation π f ull is an allocation for which g(π f ull ) = G, and a partial allocation is an allocation that is not full.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Dominated Bids</head><p>Some bids may be removed in a polynomial-time preprocessing step before search begins. For each pair of bids (b 1 ,b 2 ) where g(b 1 ) ⊆ g(b 2 ) and p(b 1 ) ≥ p(b 2 ), we may remove b 2 from the list of bids to be considered during the search as b 2 is never preferable to b 1 (hence we say that b 1 dominates b 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Branch-and-Bound Search</head><p>Branch-and-bound search is a general search strategy that is widely used in the operations research community (see e.g., <ref type="bibr" target="#b80">[Nemhauser &amp; Wolsey, 1988]</ref>). We explain it here using the terminology of combinatorial auctions.</p><p>Whenever a bid is encountered that does not conflict with the current partial allocation then the search tree branches, where one branch adds the bid to the partial allocation and the other does not. CASS performs a depth-first search, meaning that one branch of the tree is fully explored before the other is considered. (This has the advantage that CASS requires only linear space to store the search tree.) When a full allocation π is reached CASS records this allocation as π best if p(π) &gt; p(π best ), and then backtracks.</p><p>CASS also computes a function h(π) at each node, which gives an upper bound on the revenue that can be collected from the goods G \ g(π). When h() indicates that the current subtree cannot lead to a solution better than π best then the search tree can be pruned : we can backtrack before a full allocation has been constructed.</p><p>More precisely, we backtrack whenever p(π) + h(π) ≤ p(π best ). We will describe the construction of the function h(π) in Section 6.1.4, but first we must introduce the concept of bins. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Bins</head><p>We can reduce the number of infeasible allocations considered by partitioning bids into bins. First, we must choose an ordering on the goods. We create one bin for each good, and we place each bid into the bin corresponding to its lowest-order good.</p><p>For an example, see <ref type="figure" target="#fig_11">Figure 6</ref>.1. The example shows input from an auction with five goods, G = {1, 2, 3, 4, 5}. Circles in the figure represent bids, the concatenated numbers in the circles represent the goods named in each bid, and prices are omitted from the bids for clarity.</p><p>Rather than always trying to add each bid to our allocation, we add at most one bid from every bin since all bids in a given bin are mutually exclusive. In fact, we can often skip bins entirely. While considering bin D i , if we observe that good j &gt; i is already part of the allocation then we do not need to consider any of the bids in D j . In general, instead of considering each bin in turn, skip to D k where k / ∈ g(π)</p><p>and ∀i &lt; k, i ∈ g(π). To avoid the situation where it is possible to enter a bin that we cannot leave, we augment the set of bids. If there is no bid requesting a single unit of any good γ j ∈ G then we add a dummy bid b = (0, γ j ).</p><p>Continuing our example, see <ref type="figure" target="#fig_11">Figure 6</ref>.2. The first bid we add contains goods {1, 2, 4}, so we skip all remaining bids in bin D 1 and all bids in bin D 2 , since all of these bids will conflict. We thus consider bin D 3 . The first bid we encounter requests goods {3, 4}, which also conflicts with our partial allocation. We move to the next bid in D 3 , which requests goods {3, 5}. We have found our first full allocation, so we update our lower bound and backtrack.</p><p>The main benefit of bins is not the ability to avoid consideration of conflicting bids, however. Bins are powerful because they allow the pruning function to consider context without significant computational cost. If bids in bin D i are currently being considered then the pruning function must only take into account bids in bins</p><formula xml:id="formula_139">{D i , . . . , D m }.</formula><p>Since most bids will belong to a low-order bin 1 but the search will spend most of its time in higher-order bins, this can allow us to generate very tight upper bounds. Furthermore, because the partitioning of bids into bins is fixed we can compute the upper bound information for each bin in a preprocessing step; this makes the upper bound fast to evaluate during search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.4">Upper Bound</head><p>We now describe the construction of the function h(π). For every remaining good j we calculate a value v(j), the maximum over all the remaining bids requesting good j that do not conflict with π of the bid's price divided by the number of goods requested by the bid. The sum of v(j) values for all goods is an upper bound on optimal revenue because it relaxes the constraint that the bids in the optimal allocation may not conflict.</p><p>More formally, consider that we have built up a partial allocation π and reached bin D σ . For each bid b i , let a(b i ) = p(b i )/m be the average price per good of bid b i .</p><p>Notice that the average price per good may change dramatically from bid to bid, and it is a non-trivial notion; our technique will work for any arbitrary average price per good. Let L σ (j) be a list of the bids that refer to good j and that belong to bins D φ with φ ≥ σ (i.e., the bids that can be encountered in the remainder of the search).</p><p>The list is sorted in a monotonically decreasing manner according to the a i 's. Observe 1 To see why bids are not spread evenly across the bins, consider what happens when we receive a bid for every bundle. Half of the bids will involve good γ 1 and will thus belong to bin D 1 ; half the bids that do not involve γ 1 will involve γ 2 and belong to bin D 2 , and so on. Clearly, each bin D i+1 will contain half as many bids as its predecessor D i . that L σ (j) can be precomputed before search begins. v(j) is defined as a(b ok j ), where b ok j is the first bid in L σ (j) that does not conflict with π.</p><p>Theorem 6.1 Let B * = {b * 1 , . . . , b * s } be the bids in an optimal allocation. Then,</p><formula xml:id="formula_140">r * = Σ b∈B * p(b) ≤ Σ 1≤j≤m v(j).</formula><p>Remark: In the multi-unit special case where when all goods happen to have only one unit, the upper bound function in Section 6.2.4 computes exactly the same upper bounds as the function presented above. Thus Theorem 6.2 considers a more general case, and so the proof to Theorem 6.1 can be deduced from that proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.5">Caching</head><p>CASS's caching scheme is a form of dynamic programming that allows the algorithm to use experience from earlier in the search to tighten its upper bound function; it is illustrated in <ref type="figure" target="#fig_11">Figure 6</ref>.3. Consider a partial allocation π 1 that is reached during the search phase. If the search proceeds beyond π 1 then h(π 1 ) was not sufficiently small to allow us to backtrack. Later in the search we may reach an allocation π 2 which, by combining different bids, achieves the same allocation π 1 . CASS incorporates a mechanism for caching the results of the search beyond π 1 to generate a better estimate for the revenue given π 2 than is given by h(π 2 ). (Since π 1 and π 2 do not differ in the units of goods that remain, h(π 1 ) = h(π 2 ).) Consider all the allocations extending π 1 upon consideration of which the algorithm backtracked, denoted s 1 , . . . , s f . When we backtracked at each s i we did so because p(s i ) + h(s i ) ≤ p(π best ), as explained above, or because s i was a full allocation. It follows that</p><formula xml:id="formula_141">max i (p(s i ) + h(s i )) − p(π 1 )</formula><p>is an overestimate of the revenue attainable beyond π 1 , and that it is a smaller overestimate than h(π 1 ). If it were not, we would have backtracked at π 1 rather than searching this subtree. We cache the value c(g(π)) = max i (p(s i ) + h(s i )) − p(π 1 ) and backtrack when p(π 2 ) + c(g(π 2 )) ≤ p(π best ). Our cache is implemented as a hash table, since caching is only beneficial to the overall search if lookup time is inconsequential. A consequence of this choice of data structure is that cache data may sometimes be overwritten; we overwrite an old entry D i partial allocation π 2 , g(π i ) = g(π 2 ) one search path: partial allocation π 1 at bin D i best solution given π 1 or π 2 Even when we do overwrite useful data the error is not catastrophic, however: in the worst case we must simply search a subtree that we might otherwise have pruned.</p><p>In order to reduce the cost of writing useless entries to the cache, and to reduce the chance that useful entries will be overwritten, partial allocations are only stored in the cache if the search tree below that point involved at least one backtrack. (Because of the exponential character of search trees, the vast majority of nodes that are eligible for caching will be one step away from leaf nodes, which means that caching these nodes would give a negligible performance gain.)</p><p>We can also use the cache to prune even when we reach a new partial allocation π 2 that has never been reached before, as shown in <ref type="figure" target="#fig_11">Figure 6</ref>.4. The search path is provably unable to lead to a new best allocation whenever g(π 1 ) ⊂ g(π 2 ) and p(π 2 )+c(g(π 1 )) ≤ p(π best ). (Since our cache is implemented as a hash table, we detect this case by checking the cache for each π 1 that differs from π 2 by the exclusion of each a single good; this requires a linear number of cache lookups.) In this case, the sum of the revenue from the cached path beyond π 1 and the revenue leading up to π 2 is less than the revenue from π best . Note that since π 2 allocates a superset of the goods allocated in π 1 , the goods in g(π 2 ) \ g(π 1 ) ∩ g(π 2 ) are counted both in p(π 2 ) and c(g(π 1 )), corresponding to an overestimate of revenue. 3 Therefore, no allocation better than π best could be found by expanding the search tree below π 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.6">Good Ordering Heuristic</head><p>We must determine an ordering of the goods; that is, decide which good will correspond to the first bin, which will correspond to the second, etc. For each good i we compute score i = numbids i /avggoods i , where numbids i is the number of bids that request good i and avggoods i is the average number of goods requested by these bids. We designate the lowest-order good as the good with the lowest score, then we recalculate the score for the remaining goods and repeat. The intuition behind this heuristic is as follows:</p><p>• We want to minimize the number of bids in low-order bins, to minimize early branching and thus to make each individual prune more effective.</p><p>• We want to maximize the total number of goods requested by bids in low-order bins. Taking these bids moves us more quickly towards the leaves of the search tree, again providing the pruning function with more contextual information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.7">Bid Ordering Heuristic</head><p>Our second heuristic determines the ordering of bids within bins. We sort bids dynamically-i.e., bids may be ordered differently when there is a different partial allocation π. Bids are sorted in a given bin in descending order of score(b j ), where (abusing notation slightly):</p><formula xml:id="formula_142">score(b j ) = p(b j ) |g(b j )| + h(π ∪ b j ).</formula><p>The intuition behind this heuristic is that the average price per good of b j is a measure of how promising the bid is, while the upper bound h(π ∪b j ) is an estimate of Process dominated bids. Determine an ordering on the goods, according to the good-ordering heuristic. Partition all bids into bins, according to the good ordering. Precompute pruning information for each bin. Set i = 1 and π = {}. Recursive entry point:</p><formula xml:id="formula_143">π = π ∪ b j .</formula><p>If (p(π) + c(g(π)) ≤ p(π best )) backtrack. If (p(π) + h(π) ≤ p(π best )) backtrack. If (|goods(π)| = total) update π best if necessary; backtrack. Set i to the index of the lowest-order good absent from π. Dynamically order the bids in bin i, and remove bids that conflict with π. Recurse to the recursive entry point above. π = π \ b j . Return the optimal allocation: π best . <ref type="figure" target="#fig_11">Figure 6</ref>.5: CASS Pseudocode how promising the unallocated units are, given the partial allocation. This heuristic helps CASS to find good allocations quickly, improving anytime performance and also increasing π best , making pruning more effective. Observe that dynamic reordering of the goods in each bin allows us to make use of an upper bound which depends on π.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">CAMUS Algorithm</head><p>We now present a generalization of CASS which can solve Problem 5.3: the general multi-unit WDP. This algorithm is termed CAMUS (Combinatorial Auction Multi-Unit Search), and was introduced in <ref type="bibr" target="#b63">[Leyton-Brown et al., 2000b]</ref>. We explain characteristics of CAMUS that differ from CASS, and then give pseudocode for CAMUS.</p><p>In this section we make use of the following notation specific to the multi-unit case.</p><p>Let units(j) denote the total number of units of good j. Redefine the set of bids B =</p><formula xml:id="formula_144">{b 1 , . . . , b n } so that bid b i is a pair (p(b i ), e(b i )), where e(b i ) = (e(b i ) 1 , e(b i ) 2 , . . . , e(b i ) m )</formula><p>and e(b i ) j is the number of requested units of good γ j in b i . We overload the function units to refer to allocations: given an allocation π we denote the total number of units allocated as units(π), and given both an allocation π and a good γ i we denote the total number of units of good γ i allocated in π by units i (π).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.1">Dominated Bids</head><p>In the multi-unit case we must handle domination in a different way than we did in the single-unit case. We say that bid b 1 dominates b 2 whenever p(b 1 ) ≥ p(b 2 ) and e(b 1 ) j ≤ e(b 2 ) j for every good j. Although b 2 is never preferable to b 1 , it is possible that an optimal allocation could contain both b 1 and b 2 . For this reason we store b 2 in a secondary data structure associated with b 1 , and consider adding it to those allocations which include b 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.2">Subbins</head><p>In the multi-unit setting, we will often need to select more than one bid from a given bin. This leads to the idea of subbins. A subbin is a subset of the bids in a bin that is constructed during the search. Since subbins are created dynamically they cannot provide precomputed contextual information; rather, they facilitate the efficient selection of multiple bids from a given bin. Every time we add a bid to our partial allocation we create a new subbin containing the next set of bids to consider. If the search moves to a new bin, the new subbin is generated from the new bin by removing all bids that conflict with the current partial allocation. If the search remains in the same bin, the new subbin is created from the current subbin by removing conflicting bids as above, and additionally: if b 1 , b 2 , . . . , b i is the ordered set of elements in the current subbin and b j is the bid that was just chosen, then we remove all b k , k ≤ j. In this way we consider all combinations of non-conflicting bids in each bin rather than all permutations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.3">Dynamic Programming</head><p>Singleton bids (that is, bids that name units from only one good) deserve special attention. These bids will generally be among the most computationally expensive to consider-the number of nodes to search after adding a very short bid is nearly the same as the number of nodes to search after skipping the bid, because a short bid allocates few units and hence conflicts with few other bids. Unfortunately, we expect that singleton bids will be quite common in a variety of real-world multi-unit CA's. CAMUS simplifies the problem of singleton bids by applying a polynomialtime dynamic programming technique as a preprocessing step. We construct a vector singleton γ for each good γ, where each element of the vector is a set of singleton bids naming only good γ. singleton γ (j) evaluates to the revenue-maximizing set of singleton bids totaling j units of good γ. This frees us from having to consider singleton bids individually; instead, we consider only elements of the singleton vector and treat these elements as atomic bids during the search. Also, there is never a need to add more than one element from each singleton vector. To see why, imagine that we add both singleton γ (j) and singleton γ (k) to our partial allocation. These two elements may have bids in common, and additionally there may be singleton bids with more than max(j, k) elements that would not conflict with our partial allocation but that we have not considered. Clearly, we would be better off adding the single element singleton γ (j + k).</p><p>We now show how to construct the singleton vector. Let b 1 , . . . , b be bids for a single good γ. Our aim is to compute the optimal selection of b i 's in order to allocate k units of good γ, for 1 ≤ k ≤ units(γ). Consider a two dimensional grid of size <ref type="bibr">1 . . . units(γ)</ref>] where the (i, j)-th entry, denoted by U (i, j), is the optimal allocation of j units considering only bids b 1 , . . . , b i . The value of U (i, j), denoted by V (i, j), is the sum of the price offers of the bids in U (i, j). U (1, j) will be b 1 if b 1 requests no more than j units, and otherwise will be the empty set. A recursive definition of U (i, j) is given in <ref type="figure" target="#fig_11">Figure 6</ref>.6. This dynamic programming procedure is polynomial, and yields the desired result; the optimal allocation of k units is given  Σ m j=1 e(b i ) j : the average price per unit of bid b i . Define L σ (j) as before. Let |L σ (j)| denote the number of elements in L σ (j), and let L σ (j) k denote the k th element of L σ (j). v(j) is determined by the algorithm given in <ref type="figure" target="#fig_11">Figure 6</ref>.7.</p><formula xml:id="formula_145">[1 . . . ] × [</formula><formula xml:id="formula_146">by U ( , k). Set singleton γ (k) = U ( , k), 1 ≤ k ≤ units(γ). e(b i ) &gt; j: U (i, j) = U (i − 1, j); e(b i ) = j: if p(b i ) &gt; V (i − 1, j) then U (i, j) = b i . Else U (i, j) = U (i − 1, j). e(b i ) &lt; j: if V (i − 1, j) ≥ p(b i ) + V (i − 1, j − e(b i )) then U (i, j) = U (i − 1, j). Else U (i, j) = b i ∪ U (i − 1, j − e(b i )).</formula><formula xml:id="formula_147">Let v(j)=0 Let m(j)=0 For i = 1 to |L σ (j)|: if m(j) &lt; units j (π) and L σ (j) k ∩ π = ∅ then let d := min(e(L σ (j) i ) j , units(j) − m(j)) m(j) = m(j) + d v(j) = v(j) + a(L σ (j) i ) · d</formula><formula xml:id="formula_148">Theorem 6.2 Let B * = {b * 1 , b * 2 , .</formula><p>. . , b * s } be the bids in an optimal allocation. Then,</p><formula xml:id="formula_149">r * = Σ b∈B * p(b) ≤ Σ 1≤j≤m v(j).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Consider the bid b * ∈ B * . Then, p(b * ) = Σ 1≤j≤m a(b * )e(b * ) j . Hence,</p><formula xml:id="formula_150">r * = Σ b∈B * p(b) = Σ b∈B * Σ 1≤j≤m a(b)e(b) j .</formula><p>By changing the order of summation we get that r * = Σ 1≤j≤m Σ b∈B * a(b)e(b) j . Notice that, given a particular j, the contribution</p><formula xml:id="formula_151">of bid b to Σ b∈B * a(b)e(b) j is a(b)e(b) j .</formula><p>Recall now that v(j) has been constructed from the set of all bids that refer to good j by choosing the maximal available units of good j from the bids in L σ (j), where these bids are sorted according to the average price per unit of good. Hence, we get v(j) ≥ Σ b∈B * a(b)e(b) j . Given that the above holds for every good j, this implies that Σ 1≤j≤m v(j) ≥ Σ b∈B * p(b), as requested.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.5">Heuristics</head><p>We must update our good-and bid-ordering heuristics for the multi-unit case. For our good-ordering heuristic we compute score i = numbids i ·units(i)</p><formula xml:id="formula_152">avgunits i ,</formula><p>where numbids i is the number of bids that request good i and avgunits i is the average number of total units (i.e., not just units of good i) requested by these bids. The intuition here is similar to the intuition described in Section 6.1.6:</p><p>• We want to minimize the number of bids in low-order bins, to minimize early branching and thus to make each individual prune more effective.</p><p>• We want to minimize the number of units of goods corresponding to low-order bins, so that we will more quickly move beyond the first few bins. As a result, the pruning function will be able to take into account more contextual information.</p><p>• We want to maximize the total number of units requested by bids in low-order bins. Taking these bids moves us more quickly towards the leaves of the search tree, again providing the pruning function with more contextual information.</p><p>Given current partial allocation π, we sort bids in a given bin in descending order</p><formula xml:id="formula_153">of score(b j ), where score(b j ) = p(b j ) units(b j ) + h(π ∪ b j )</formula><p>, which is a direct generalization of the heuristic discussed in Section 6.1.7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Conclusions</head><p>We have presented CASS and CAMUS, algorithms that solve the single-unit and multi-unit WDPs respectively. In the next chapter, we discuss test data for evaluating such algorithms. We go on to evaluate CASS using this data in Chapter 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Process dominated bids.</head><p>Determine an ordering on the goods, according to the good-ordering heuristic. Using the dynamic programming technique, determine the optimal combination of singleton bids totaling 1 . . . units(j) for each good j. Partition all non-singleton bids into bins, according to the good ordering. Precompute pruning information for each bin. Set i = 1 and π = {}. Recursive entry point:</p><p>For j = 1 ...number of bids in the current subbin of Include singleton i (units(i) − units i (π)). Sort the subbin according to the subbin-ordering heuristic. Recurse to the recursive entry point, above, and search this new subbin. π = π \ b j . End For Return the optimal allocation: π best . There has been much interest in the construction of algorithms for determining the winners of a general combinatorial auction. Before it is possible to decide the extent to which such an effort has been successful, however, it is necessary to evaluate the algorithm using some sort of test data. Since general CA's have never been widely held, there is little data recording the bidding behavior of real bidders upon which such test data may be built. In the absence of such natural benchmarks, we are left only with the option of generating artificial data that is representative of the sort of scenarios one is likely to encounter. This chapter describes such a test suite.</p><formula xml:id="formula_154">bin i . π = π ∪ b j . If (p(π) + c(g(π)) ≤ p(π best )) backtrack. If (p(π) + h(π) ≤ p(π best )) backtrack. If (units(π) = γ∈G units(γ)) record π if it</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Past Work on Testing CA Algorithms</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.1">Experiments with Human Subjects</head><p>One approach to experimental work on combinatorial auctions uses human subjects.</p><p>These experiments assign valuation functions to subjects, then have them participate in auctions using various mechanisms <ref type="bibr" target="#b3">[Banks et al., 1989;</ref><ref type="bibr" target="#b55">Ledyard et al., 1997;</ref><ref type="bibr" target="#b17">DeMartini et al., 1998</ref>]. Such tests can be useful for understanding how real people bid under different auction mechanisms; however, they are less suitable for evaluating the mechanisms' computational characteristics. In particular, this sort of test is only as good as the subjects' valuation functions, which in the above papers were hand-crafted. As a result, this technique does not easily permit arbitrary scaling of the problem size, a feature that is important for characterizing an algorithm's performance. In addition, this method relies on relatively naive subjects to behave rationally given their valuation functions, which may be unreasonable when subjects are faced with complex and unfamiliar mechanisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.2">Particular Problems</head><p>A parallel line of research has examined particular problems to which CA's seem well suited. For example, researchers have considered auctions for the right to use railroad tracks <ref type="bibr" target="#b9">[Brewer &amp; Plott, 1996]</ref>, real estate <ref type="bibr" target="#b90">[Quan, 1994]</ref>, pollution rights <ref type="bibr" target="#b54">[Ledyard &amp; Szakaly, 1994]</ref>, airport time slot allocation <ref type="bibr" target="#b92">[Rassenti et al., 1982]</ref> and distributed scheduling of machine time <ref type="bibr" target="#b118">[Wellman et al., 1998</ref>]. Most of these papers do not suggest holding an unrestricted general CA, presumably because of the computational obstacles. Instead, they tend to discuss alternative mechanisms that are tailored to the particular problem. None of them proposes a method of generating test data, nor does any of them describe how the problem's difficulty scales with the number of bids and goods. However, they still remain useful to researchers interested in general CA's because they give specific descriptions of problem domains to which CA's may be applied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.3">Artificial Distributions</head><p>A number of researchers have proposed algorithms for determining the winners of general CA's. In the absence of test suites, some have suggested novel bid generation techniques, parameterized by number of bids and goods <ref type="bibr" target="#b102">[Sandholm, 1999;</ref><ref type="bibr" target="#b25">Fujishima et al., 1999;</ref><ref type="bibr" target="#b8">Boutilier et al., 1999;</ref><ref type="bibr" target="#b16">de Vries &amp; Vohra, 2003]</ref>. (Other researchers have used one or more of these distributions, e.g., <ref type="bibr" target="#b88">[Parkes, 1999;</ref><ref type="bibr" target="#b104">Sandholm et al., 2001]</ref>, while still others have refrained from testing their algorithms altogether, e.g., <ref type="bibr" target="#b81">[Nisan, 2000;</ref><ref type="bibr" target="#b56">Lehmann et al., 1999]</ref>.) Parameterization represents a step forward, making it possible to describe performance with respect to the problem size. However, there are several ways in which each of these bid generation techniques falls short of realism, concerning the selection of which goods and how many goods to request in a bundle, what price to offer for the bundle, and which bids to combine in an XOR'ed set.</p><p>More fundamentally, however, all of these approaches suffer from failing to model bidders explicitly, and from attempting to represent an economic situation with an non-economic model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Which goods</head><p>First, each of the distributions for generating test data discussed above has the property that all bundles of the same size are equally likely to be requested. This assumption is clearly violated in almost any real-world auction: most of the time, certain goods (for which "natural" complementarities exist) will be more likely to appear together than others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Number of goods</head><p>Likewise, each of the distributions for generating test data determines the number of goods in a bundle completely independently from determining which goods appear in the bundle. While this assumption may appear more reasonable, there are many domains in which the expected number of items in a bundle will be related to which goods it contains. (For example, people buying computers will tend to make long combinatorial bids, requesting monitors, printers, etc., while people buying refrigerators will tend to make short bids.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Price</head><p>Next, there are problems with the schemes for generating price offers used by all four techniques. Pricing is especially crucial: if prices are not chosen carefully then an otherwise hard distribution can become computationally easy.</p><p>In Sandholm <ref type="bibr" target="#b102">[Sandholm, 1999]</ref> prices are drawn randomly from either [0, 1] or from <ref type="bibr">[0, g]</ref>, where g is the number of goods requested. The first method is clearly unreasonable (and computationally trivial) since price is unrelated to the number of goods in a bid-note that a bid for many goods and for a small subset of the same bid will have exactly the same price on expectation. The second is better, but has the disadvantage that average and range are parameterized by the same variable.</p><p>In <ref type="bibr" target="#b8">Boutilier et al.[Boutilier et al., 1999]</ref> prices of bids are distributed normally with mean 16 and standard deviation 3, giving rise to the same problem as the [0, 1] case above.</p><p>In <ref type="bibr" target="#b25">Fujishima et al.[Fujishima et al., 1999]</ref> prices are drawn from [g(1 − d), g(1 + d)], d = 0.5. While this scheme avoids the problems described above, prices are simply additive in g and are unrelated to which goods are requested in a bundle, both unrealistic assumptions in some domains.</p><p>More fundamentally, Anderson et al. <ref type="bibr" target="#b1">[Anderson et al., 2000</ref>] note a critical pricing problem that arises in several of the schemes discussed above. As the number of bids to be generated becomes large, a given short bid will be drawn much more frequently than a given long bid. Since the highest-priced bid for a bundle dominates all other bids for the same bundle, short bids end up being much more competitive. Indeed, it is pointed out that for extremely large numbers of bids a good approximation to the optimal solution is simply to take the best singleton bid for each good. One solution to this problem is to guarantee that only the first bid for each bundle will be retained.</p><p>However, this solution has the drawback that it is unrealistic: different real bidders are likely to place bids on some of the same bundles.</p><p>Another solution to this problem is to make bundle prices superadditive in the number of goods they request-an assumption that may also be reasonable in many CA domains. A similar approach is taken by deVries and Vohra <ref type="bibr" target="#b16">[de Vries &amp; Vohra, 2003</ref>], who make the price for a bid a quadratic function of the prices of bids for subsets. For some domains this pricing scheme may result in too large an increase in price as a function of bundle length. The distributions presented in this chapter will include a pricing scheme that may be configured to be superadditive or subadditive in bundle length, where appropriate, parameterized to control how rapidly the price offered increases or decreases as a function of bundle length.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>XOR bids</head><p>Finally, while most of the bid-generation techniques discussed above permit bidders to submit sets of bids XOR'ed together, they have no way of generating meaningful sets of such bids. As a consequence the computational impact of XOR'ed bids has been very difficult to characterize.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Generating Realistic Bids</head><p>While the lack of standardized, realistic test cases does not make it impossible to evaluate or compare algorithms, it does make it difficult to know what magnitude of real-world problems each algorithm is capable of solving, or what features of realworld problems each algorithm is capable of exploiting. This second ambiguity is particularly troubling: it is likely that algorithms would be designed differently if they took the features of more realistic 1 bidding into account.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.1">Prices, price offers and valuations</head><p>The term "price" has traditionally been used by researchers constructing artificial distributions to describe the amount offered for a bundle. However, this term really refers to the amount a bidder is made to pay for a bundle, which is of course mechanism-specific and is often not the same as the amount offered. Indeed, it is impossible to model bidders' price offers at all without committing to a particular auction mechanism. In the distributions described in this chapter, we will assume a sealed-bid incentive-compatible mechanism, where the price offered for a bundle is equal to the bidder's valuation. Hence, in the rest of this chapter, we will use the 1 There does exist a body of previous work characterizing hard cases for weighted set packing, which is of course equivalent to the combinatorial auction problem. Real-world bidding is likely to exhibit various regularities, however, as discussed throughout this chapter. A data set designed to include the same regularities may be more useful for predicting the performance of an algorithm in a real-world combinatorial auction.</p><p>terms price offer and valuation interchangeably. Researchers wanting to model bidding behavior in other mechanisms could transform the valuation generated by our distributions according to bidders' equilibrium strategies in the new mechanism.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2">The CATS suite</head><p>In this chapter we present CATS (Combinatorial Auction Test Suite), a suite of distributions for modeling realistic bidding behavior. This suite is grounded in previous research on specific applications of combinatorial auctions, as described in section 7.1.1 above. At the same time, all of our distributions are parameterized by number of goods and bids, facilitating the study of algorithm performance. This suite represents a move beyond previous work on modeling bidding in combinatorial auctions because we provide an economic motivation for both the contents and the valuation of a bundle, deriving them from basic bidder preferences. In particular, in each of our distributions:</p><p>• Certain goods are more likely to appear together than others.</p><p>• The number of goods appearing in the bundle is often related to which goods appear in the bundle.</p><p>• Valuations are related to which goods appear in the bundle. Where appropriate, valuations can be configured to be subadditive, additive or superadditive in the number of goods requested.</p><p>• Sets of XOR'ed bids are constructed in meaningful ways, on a per-bidder basis.</p><p>CATS suite contains a legacy section including all bid generation techniques described above, so that new algorithms may easily be compared to previously-published results. More information on the test suite, including executable versions of our distributions for Linux and Windows may be found on the CATS website <ref type="bibr">[2000]</ref>.</p><p>In section 7.3, below, we present distributions based on five real-world situations.</p><p>For most of our distributions, the mechanism for generating bids requires first building a graph representing adjacency relationships between goods. Later, the mechanism uses the graph, generated in an economically-motivated way, to derive complementarity properties between goods and substitutability properties for bids. Of the five real-world situations we model, the first three concern complementarity based on adjacency in (physical or conceptual) space, while the final two concern complementarity based on correlation in time. Our first example (section 7.3.1) models shipping, rail and bandwidth auctions. Goods are represented as edges in a nearly planar graph, with agents submitting an XOR'ed set of bids for paths connecting two nodes. Our second example (section 7.3.2) models an auction of real estate, or more generally of any goods over which two-dimensional adjacency is the basis of complementarity. Again the relationship between goods is represented by a graph, in this case strictly planar. In Section 7.3.3 we relax the planarity assumption from the previous example in order to model arbitrary complementarities between discrete goods such as electronics parts or collectables. Our fourth example (section 7.3.4) concerns the matching of time-slots for a fixed number of different goods; this case applies to airline take-off and landing rights auctions. In Section 7.3.5 we discuss the generation of bids for a distributed job-shop scheduling domain, and also its application to power generation auctions. Finally, in Section 7.3.7, we provide a legacy suite of bid generation techniques, including all those discussed in Section 7.1.3 above.</p><p>In the description of the distributions that follow, let rand(a, b) represent a real number drawn uniformly from <ref type="bibr">[a, b]</ref>. Let rand int(a, b) represent a random integer drawn uniformly from the same interval. With respect to a given graph, let e(x, y) represent the proposition that an edge exists between nodes x and y. All of the distributions presented here are parameterized by the number of goods (num goods) and number of bids (num bids).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">CATS in Detail</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.1">Paths in Space</head><p>There are many real-world problems that involve bidding on paths in space. Generally, this class may be characterized as the problem of purchasing a connection between two points. Examples include truck routes <ref type="bibr" target="#b105">[Sanholm, 1993]</ref>, natural gas pipeline networks <ref type="bibr" target="#b91">[Rassenti et al., 1994]</ref>, network bandwidth allocation, and the right to use railway tracks <ref type="bibr" target="#b9">[Brewer &amp; Plott, 1996]</ref>. 2 In particular, spatial path problems consist of a set of points and accessibility relations between them. Although the distribution we propose may be configured to model bidding in any of the above domains, we will use the railway domain as our motivating example since it is both intuitive and well-understood.</p><p>More formally, we will represent this railroad auction by a graph in which each node represents a location on a plane, and an edge represents a connection between locations. The goods at auction are therefore the edges of the graph, and bids request a set of edges that form a path between two nodes. We assume that no bidder will desire more than one path connecting the same two nodes, although the bidder may value each path differently.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Building the Graph</head><p>The first step in modeling bidding behavior for this problem is determining the graph of spatial and connective relationships between cities. One approach would be to use an actual railroad map, which has the advantage that the resulting graph would be unarguably realistic. However, it would be difficult to find a set of real-world maps that could be said to exhibit a similar sort of connectivity and would encompass substantial variation in the number of cities. Since scalability of input data is of great importance to the testing of new CA algorithms, we have chosen to propose generating such graphs randomly. <ref type="figure" target="#fig_40">Figure 7</ref>.1 shows a representative example of a graph generated using our technique.</p><p>We begin with num cities nodes randomly placed on a plane. We add edges to this graph, G, starting by connecting each node to a fixed number of its nearest neighbors. Next, we iteratively consider random pairs of nodes and examine the shortest path connecting them, if any. To compare, we also compute various alternative paths that would require one or more edges to be added to the graph, given a penalty proportional to distance for adding new edges. (We do this by considering a complete graph C, an augmentation of G with new edges weighted to reflect the distance penalty.) If the shortest path involves new edges-despite the penalty-then the new edges (without penalty) are added to G, and replace the existing edges in C. This process models our simplifying assumption that there will exist uniform demand for shipping between any pair of cities, though of course it does not mimic the way new links would actually be added to a rail network. The process continues until slightly more edges have been created than the number of goods in the auction being modeled. (This is achieved by the "1.05" in the first line of <ref type="figure" target="#fig_40">Figure 7</ref>.2.) The reason more edges than are necessary are created is that some edges will not appear in bids, hence should not be considered as goods.</p><p>Our technique produces slightly non-planar graphs-graphs on a plane in which edges occasionally cross at points other than nodes. We consider this to be reasonable, as the same phenomenon may be observed in real-world rail lines, highways, network wiring, etc. Determining the "reasonableness" of a graph is of course a subjective task</p><p>Let num cities = num goods ÷ edge density × 1.05 Randomly place nodes (cities) on a unit box Connect each node to its initial connections nearest neighbors While num edges &lt; num cities × edge density C = G For every pair of nodes n 1 , n 2 ∈ G where ¬e(n 1 , n 2 ) Add an edge to C of length building penalty · Euclidean distance(n 1 , n 2 ) End For Choose two nodes at random, and find the shortest path between them in C If shortest path uses edges that do not exist in G For every such pair of nodes n 1 , n 2 ∈ G add an edge to G with length Euclidean distance(n 1 , n 2 ) End If End For </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Bids</head><p>Given a map of cities and the connectivity between them, there is the orthogonal problem of modeling bidding itself. We propose a method which generates a set of substitutable bids from a hypothetical agent's point of view. We start with the value to an agent for shipping from one city to another and with a shipping cost which we make equal to the Euclidean distance between the cities. We then place XOR bids on all paths on which the agent would make a profit (i.e., those paths where utility − cost &gt; 0). The path's value is random, in (parameterized) proportion to the Euclidean distance between the chosen cities. Since the shipping cost is the Euclidean distance between two cities, we use this as the lower bound for value as well, since only bidders with such valuations would actually place bids.</p><p>There will occasionally be edges that are useful only for shipping directly between the two cities they connect. These edges are clearly unrealistic; also, because they will only be selected for singleton bids, they will not increase the size of the search space. In fact, the same argument can be made about any small groups of bids that do not conflict with any bids outside of the group: they are better modeled as a separate auction, and contribute very little to the difficulty of the winner determination problem. Recall that we started out with more goods than we want to generate. At some point in the bid generation process-usually before we have generated all of the bids-the total number of goods requested across all bids will meet our target. At this point we check for edges that are used only in singleton bids or isolated groups of bids, and delete those bids. Once we reach the target number of goods without deleting any bids, we delete all goods that are uninvolved in the bids we have generated so far, and continue with bid generation.</p><p>If we reach our target number of bids without making use of the target number of goods, we must restart graph generation. When restarting, we increase the number of goods and cities to increase the expected number of different goods used as a fraction of bids generated.</p><p>Note that this distribution, and indeed all others presented in this chapter, may generate slightly more than num bids bids. In our experience CA optimization algorithms tend not to be highly sensitive in the number of bids, so we judged it more important to build economically sensible sets of substitutable bids. When generating a precise number of bids is important, an appropriate number of bids may be removed after all bids have been generated so that the total will be met exactly.</p><p>Note that 1 is used as a lower bound for d because any bidder with d &lt; 1 would find no profitable paths and therefore would not bid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Multi-Unit Extensions: Bandwidth Allocation, Commodity Flow</head><p>This model may also be used to generate realistic data for multi-unit CA problems such as network bandwidth allocation and general commodity flow. The graph may be created as above, but with a number of units (capacity) assigned to each edge.</p><p>Likewise, the bidding technique remains unchanged except for the assignment of a number of units to each bid.</p><formula xml:id="formula_155">f inished = true Do</formula><p>While num generated bids &lt; num bids Randomly choose two nodes, n 1 and n 2 d = rand(1, shipping cost f actor) cost = Euclidean distance(city 1 , city 2 ) value = d · Euclidean distance(city 1 , city 2 ) Make XOR bids of value − cost on every path from city 1 to city 2 having cost &lt; value If there are more than max bid set size such paths, bid on the max bid set size paths that maximize value − cost.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.2">Proximity in Space</head><p>There is a second broad class of real-world problems in which complementarity arises from adjacency in two-dimensional space. An intuitive example is the sale of adjacent pieces of real estate <ref type="bibr" target="#b90">[Quan, 1994]</ref>. Another example is drilling rights, where it is much cheaper for an oil company to drill in adjacent lots than in lots that are far from each other. In this section, we first propose a graph-generation mechanism that builds a model of adjacency between goods, and then describe a technique for generating realistic bids on these goods. Note that in this section nodes of the graph represent the goods at auction, while edges represent the adjacency relationship.</p><p>Place nodes at integer vertices (i, j) in a plane, where 1 ≤ i, j ≤ (num goods) For each node n If n is on the edge of the map Connect n to as many hv-neighbors as possible Else</p><p>If rand(0, 1) ≤ three prob Connect n to a random set of three of its four hv-neighbors Else</p><p>Connect n to all four of its hv-neighbors While rand(0, 1) ≤ additional neighbor Connect g to one of its d-neighbors, provided that the new diagonal edge will not cross another diagonal edge End While End For </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Building the Graph</head><p>There are a number of ways we could build an adjacency graph. The simplest would be to place all the goods (locations, nodes) in a grid, and connect each to its four neighbors. We propose a slightly more complex method in order to permit a variable number of neighbors per node (corresponding, for example, to non-rectangular pieces of real estate). As above we place all goods on a grid, but with some probability we omit a connection between goods that would otherwise represent vertical or horizontal adjacency, and with some probability we introduce a connection representing diagonal adjacency. (We call horizontally-or vertically-adjacent nodes hv-neighbors and diagonally-adjacent nodes d-neighbors.)  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Bids</head><p>To model realistic bidding behavior, we generate a set of common values for each good, and private values for each good for each bidder. The common value represents the appraised or expected resale value of each individual good. The private value represents how much one particular bidder values that good, as an offset to the common value (e.g., a private value of 0 for a good represents agreement with the common value). These private valuations describe a bidder's preferences, and so they are used to determine both a value for a given bid and the likelihood that a bidder will request a bundle that includes that good. There are two additional components to each bidder's preferences: a minimum total common value, and a budget. The former reflects the idea that a bidder may only wish to acquire goods of a certain recognized value. The latter reflects the fact that a bidder may not be able to afford every bundle that is of interest to him.</p><p>To generate bids, we first add a random good, weighted by a bidder's preferences, to the bidder's bid. Next, we determine whether another good should be added by drawing a value uniformly from [0,1], and adding another good if this value is smaller than a threshold. This is equivalent to drawing the number of goods in a bid from a decay distribution. <ref type="bibr">34</ref> We must now decide which good to add. First we allow a small chance that a new good will be added uniformly at random from the set of goods, without the requirement that it be adjacent to a good in the current bundle B . (This permits bundles requesting unconnected regions of the graph: for example, a hotel company may only wish to build in a city if it can acquire land for two hotels on opposite sides of the city.) Otherwise, we select a good from the set of nodes bordering the goods in B. The probability that some adjacent good n 1 will be added depends on how many edges n 1 shares with the current bundle, and on the bidder's relative private valuations for n 1 and n 2 . For example, if nodes n 1 and n 2 are each connected to B by one edge, and the private valuation for n 1 is twice that for n 2 then the probability of adding n 1 to B, p(n 1 ), is 2p(n 2 ). Further, if n 1 has 3 edges to nodes in B while n 2 is connected to B by only 1 edge, and the goods have equivalent private values, then p(n 1 ) = 3p(n 2 ). Once we have determined all the goods in a bundle we set the price offered for the bundle, which depends on the sum of common and private valuations for the goods in the bundle, and also includes a function that is superadditive (with our parameter settings) in the number of goods. 5</p><p>Finally, we generate additional bids that are substitutable for the original bid, with the constraint that each bid in the set requests at least one good from the original bid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Spectrum Auctions</head><p>A related problem is the auction of radio spectrum, in which a government sells the right to use specific segments of spectrum in different geographical areas <ref type="bibr" target="#b89">[Plott &amp; Cason, 1996;</ref><ref type="bibr" target="#b2">Ausubel et al., 1997]</ref>. It is possible to approximate bidding behavior in spectrum auctions by making the assumption that all complementarity arises from <ref type="bibr">3</ref> We use Sandholm's <ref type="bibr" target="#b102">[Sandholm, 1999]</ref> term "decay" here, though the distribution goes by various names-for a description of the distribution please see Section 7.3.6. 4 There are two reasons we use a decay distribution here. First, we expect that more bids will request small bundles than large bundles. Second, we require a distribution where the expected bundle size is (relatively) unaffected by changes in the total number of goods.</p><p>5 Recall the discussion in Section 7.1.3 motivating the use of superadditive valuations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Routine Add Good to Bundle(bundle B)</head><p>If rand(0, 1) ≤ jump prob Add a good g / ∈ b to B, chosen uniformly at random <ref type="bibr">∈B,y∈B,e(x,y)</ref> pn(x) [pn() is defined below] Choose a random node x / ∈ B from the distribution <ref type="bibr">y∈B,e(x,y)</ref> pn(x) s Add x to B End If End Routine <ref type="figure" target="#fig_40">Figure 7</ref>.6: Add Good to Bundle for Spatial Proximity spatial proximity. 6 In this case, our spatial proximity model can also be used to generate bidding distributions for spectrum auctions. The main difference between this problem and the real estate problem is that in a spectrum auction each good may have multiple units (frequency bands) for sale. It is insufficient to model this as a multi-unit CA problem, however, if bidders have the constraint that they want the same frequency in each region. 7 Instead, the problem can be modeled with multiple distinct goods per node in the graph, and bids constructed so that all nodes added to a bundle belong to the same 'frequency'. With this method, it is also easy to incorporate other preferences, such as preferences for different types of goods. For instance, if two different types of frequency bands are being sold, one 5 megahertz wide and one 2.5 megahertz wide, an agent only wanting 5 megahertz bands could make substitutable bids for each such band in the set of regions desired (generating the bids so that the agent will acquire the same frequency in all the regions).</p><formula xml:id="formula_156">Else Compute s = x /</formula><p>The scheme for generating price offers used in our real estate example may be inappropriate for the spectrum auction domain. Research indicates that while price offers will still tend to be superadditive, this superadditivity may be quadratic in the For all g, c(g) = rand(1, max good value) While num generated bids &lt; num bids For each good, reset p(g) = rand(−deviation · max good value, deviation + max good value) pn(g) = p(g)+deviation·max good value 2·deviation·max good value Normalize pn(g) so that g pn(g) = 1 B = {} Choose a node g at random, weighted by pn(), and add it to B While rand(0, 1) ≤ additional location Add Good to Bundle(B) value(B) = x∈B (c(x) + p(x)) + S(|B|) If value(B) ≤ 0 on B, restart bundle generation for this bidder Bid value(B) on B budget = budget f actor · value(B) min resale value = resale f actor · x∈B c(x) Construct substitutable bids. For each good g i ∈ B</p><p>Initialize a new bundle, </p><formula xml:id="formula_157">B i = {g i } While |B i | &lt; |B| Add Good to Bundle(B i ) Compute c i = x∈B i c(x) End</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.3">Arbitrary Relationships</head><p>Sometimes complementarities between goods will not be as universal as geographical adjacency, but some kind of regularity in the complementarity relationships between goods will still exist. Consider an auction of different, indivisible goods, e.g., for semiconductor parts or collectables, or for distinct multi-unit goods such as the right to emit some quantity of two different pollutants produced by the same industrial Build a fully-connected graph with one node for each good Label each edge from n 1 to n 2 with a weight d(n 1 , n 2 ) = rand(0, 1) <ref type="figure" target="#fig_40">Figure 7</ref>.8: Graph-Building Technique process. In this section we discuss a general way of modeling such arbitrary relationships.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Building the Graph</head><p>We express the likelihood that a particular pair of goods will appear together in a bundle as being proportional to the weight of the appropriate edge of a fullyconnected graph. That is, the weight of an edge between n 1 and n 2 is proportional to the probability that, having only n 1 in our bundle, we will add n 2 . Weights are only proportional to probabilities because we must normalize the sum of all weights from a given good to sum to 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Bids</head><p>Our technique for modeling bidding is a generalization of the technique presented in the previous section. We choose a first good and then proceed to add goods one by one, with the probability of each new good being added depending on the current bundle. Note that, since in this section the graph is fully-connected, there is no need for the 'jumping' mechanism described above. The likelihood of adding a new good g to bundle B is proportional to y∈B d(x, y) · p i (x). The first term d(x, y) represents the likelihood (independent of a particular bidder) that goods x and y will appear in a bundle together; the second, p i (x), represents bidder i's private valuation of the good x. We implement this new mechanism by changing the routine Add Good to Bundle().</p><p>We are thus able to use the same techniques for assigning a value to a bundle, as well as for determining other bundles with which it is substitutable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Routine Add Good to Bundle(bundle B)</head><p>Compute s = x / ∈b,y∈B d(x, y) · pn(x) Choose a random node x / ∈ B from the distribution y∈B d(x, y) · pn(x)</p><p>s Add x to B End Routine <ref type="figure" target="#fig_40">Figure 7</ref>.9: Routine Add Good to Bundle for Arbitrary Relationships</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.4">Temporal Matching</head><p>We now consider real-world domains in which complementarity arises from a temporal relationship between goods. In this section we discuss matching problems, in which corresponding time slices must be secured on multiple resources. The general form of temporal matching includes m sets of resources, in which each bidder wants 1 time slice from each of j ≤ m sets subject to certain constraints on how the times may relate to one another (e.g., the time in set 2 must be at least two units later than the time in set 3). Here we concern ourselves with the problem in which j = 2, and model the problem of airport take-off and landing rights.</p><p>Rassenti et al. <ref type="bibr" target="#b92">[Rassenti et al., 1982]</ref> made the first study of auctions in this domain. The problem has been the topic for much other work; in particular <ref type="bibr" target="#b34">[Grether et al., 1989]</ref> includes detailed experiments and an excellent characterization of bidder behavior.</p><p>The airport take-off and landing problem arises because certain high-traffic airports require airlines to purchase the right to take off or land during a given time slice. However, if an airline buys the right for a plane to take off at one airport then it must also purchase the right for the plane to land at its destination an appropriate amount of time later. Thus, complementarity exists between certain pairs of goods, where goods are the right to use the runway at a particular airport at a particular time. Substitutable bids are different departure/arrival packages; therefore bids will only be substitutable within certain limits. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Building the Graph</head><p>Departing from our graph-based approach above, we ground this example in the real map of high-traffic US airports for which the Federal Aviation Administration auctions take-off and landing rights, described in <ref type="bibr" target="#b34">[Grether et al., 1989]</ref>. This map is shown below.</p><p>We chose not to use a random graph in this example because the number of bids and goods is dependent on the number of bidders and time slices at the given airports;</p><p>it is not necessary to modify the number of airports in order to vary the problem size.</p><p>Thus, num cities = 4 and num times = num goods/num cities .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Bids</head><p>Our bidding mechanism presumes that airlines have a certain tolerance for when a plane can take off and land (early takeof f deviation, late takeof f deviation, early land deviation, late land deviation), as related to their most preferred take-off and landing times (start time, start time + min f light length). We generate bids for all bundles that fit these criteria. The value of a bundle is derived from a particular agent's utility function. We define a utility u max for an agent, which corresponds to the utility the agent receives for flying from city 1 to city 2 if it receives the ideal takeoff and landing times. This utility depends on a common value for a time slot at the given airport, and deviates by a random amount. Next we construct a utility function which reduces u max according to how late the plane will arrive, and how much the flight time deviates from optimal.</p><p>Set the average valuation for each city's airport: cost(city) = rand(0, max airport value) Let max l = length of longest distance between any two cities While num generated bids &lt; num bids Randomly select city 1 and city 2 where e(city 1 , city 2 ) l = distance(city 1 , city 2 ) min f light length = round(longest f light length · 1 max l ) start time = rand int(1, num times − min f light length) dev = rand(1 − deviation, 1 + deviation) Make substitutable (XOR) bids. For </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.5">Temporal Scheduling</head><p>Wellman et al. <ref type="bibr" target="#b118">[Wellman et al., 1998]</ref> proposed distributed job-shop scheduling with one resource as a CA problem. We provide a distribution that mirrors this problem.</p><p>While there exist many algorithms for solving job-shop scheduling problems, the distributed formulation of this problem places it in an economic context. Wellman et al. describe a factory conducting an auction for time-slices on some resource. Each bidder has a job requiring some amount of machine time, and a deadline by which the job must be completed. Some jobs may have additional, later deadlines which are less desirable to the bidder and so for which the bidder is willing to pay less.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Bids</head><p>In the CA formulation of this problem, each good represents a specific time slice.</p><p>Two bids are substitutable if they constitute different possible schedules for the same job. We determine the number of deadlines for a given job according to a decay distribution, and then generate a set of substitutable bids satisfying the deadline constraints. Specifically, let the set of deadlines of a particular job be d 1 &lt; · · · &lt; d n and the value of a job completed by d 1 be v 1 , superadditive in the job length. We define the value of a job completed by deadline d i as v i = v 1 · d 1 d i , reflecting the intuition that the decrease in value for a later deadline is proportional to its 'lateness'. Like time-blocks to jobs in this order. Clearly no job will be rescheduled to finish later than its original scheduled time.) Note also that this problem cannot be translated to a trivial one-good multi-unit CA problem because jobs have different deadlines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.6">Legacy Distributions</head><p>To aid researchers designing new CA algorithms by facilitating comparison with previous work, CATS includes the ability to generate bids according to all previous  </p><formula xml:id="formula_158">v i k + k,q v i k v i q</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.7">Previously Published Distributions</head><p>The following is a list of the distributions used in all published tests of which we are aware. In each case we describe first the method used to choose the number [L3] Sandholm: Constant with constant goods = 3, fixed random with low f ixed = 8 Although in principle the problem of which goods to request could be answered in many ways, all legacy distributions of which we are aware use this technique.</p><p>9 DeVries and Vohra <ref type="bibr" target="#b16">[de Vries &amp; Vohra, 2003</ref>] briefly describe a more general version of this price offer scheme, but do not describe how to set all the parameters (e.g., defining which goods are complementary); hence we do not include it here. Quadratic price offers may be particularly applicable to spectrum auctions; see <ref type="bibr" target="#b2">[Ausubel et al., 1997]</ref>. Parkes <ref type="bibr" target="#b88">[Parkes, 1999]</ref> used many of the test sets described above (particularly those described by <ref type="bibr">Sandholm and Boutilier et al.)</ref>, but tested with fixed numbers of goods and bids rather than scaling these parameters.</p><p>Since the publication of <ref type="bibr" target="#b60">[Leyton-Brown et al., 2000a]</ref>, the CATS distributions have also been widely used, for example by <ref type="bibr" target="#b104">[Sandholm et al., 2001;</ref><ref type="bibr" target="#b31">Gonen &amp; Lehmann, 2001;</ref><ref type="bibr" target="#b30">Gonen &amp; Lehmann, 2000;</ref><ref type="bibr" target="#b40">Holte, 2001;</ref><ref type="bibr" target="#b107">Schuurmans et al., 2001;</ref><ref type="bibr" target="#b45">Kastner et al., 2002;</ref><ref type="bibr" target="#b120">Zurel &amp; Nisan, 2000]</ref>. It is not obvious whether this domination procedure ought to remove many bids, or whether the relationship between the average number of non-dominated bids and total bids ought to vary substantially from one distribution to another, so we set out to measure this relationship. <ref type="figure" target="#fig_40">Figure 7</ref>.4.1 shows the number of non-dominated bids as a function of the total number of bids generated. In these experiments, with each line representing an average over 20 runs, bids were generated for an auction with 64 goods, and the program stopped after 2000 non-dominated bids had been made.</p><p>We observe that some of the legacy distributions are considerably more likely than others to generate non-dominated bids; we do not show the CATS distributions in this graph as all five generated virtually no dominated bids.</p><p>Of course, many other polynomial-time preprocessing steps are possible, e.g., a check for bids that are dominated by a pair of other bids. Indeed, CPLEX employs 10 An exception is that problems generally become easier when the number of bids grows very large in distributions favoring small bundles, because each small bundle is sampled much more often than each large bundle, giving rise to a new distribution for which the optimal allocation tends to involve only small bundles; cf., <ref type="bibr" target="#b1">[Anderson et al., 2000]</ref>. is the establishment of reasonable ranges for each parameter. Whenever an instance is created, a value for each parameter can be sampled uniformly at random from this range, ensuring that the whole parameter space is explored. Newer versions of the CATS software support this sort of parameter sampling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.4.3">Making CATS Harder</head><p>There has been discussion in the combinatorial auctions literature about whether CATS is computationally hard (see, e.g., <ref type="bibr" target="#b30">[Gonen &amp; Lehmann, 2000;</ref><ref type="bibr" target="#b104">Sandholm et al., 2001]</ref>). We performed tests on both CATS and legacy distributions with ILOG's CPLEX solver, sampling parameters as described above. <ref type="figure" target="#fig_40">Figure 7</ref>.14 shows the results of 500 runs for each distribution on problems with 256 goods and 1000 non-dominated bids, indicating the number of instances with the same order-of-magnitude runtime-</p><p>i.e., log 10 (runtime) . Each instance of each distribution had different parameters, each of which was sampled from a range of acceptable values.</p><p>We can see that several of the CATS distributions are quite easy for CPLEX, and that others vary from easy to hard. It is interesting that most distributions had instances that varied in hardness by several orders of magnitude, despite the fact that all instances had the same problem size. This gives rise to the question of whether we can tune CATS so that in addition to generating "realistic" instances, it also generates the hardest possible instances? We present techniques that answer this question in Section 10.4.1 in Chapter 10.</p><p>Our interest in generating the hardest possible instances notwithstanding, we should not be discouraged by the fact that some CATS distributions are computationally easy. On the contrary, this evidence suggests that realistic bidding patterns may often lead to much more tractable winner determination problems than the hardest unrealistic distributions such as "uniform". This is good news for those who hope to run practical combinatorial auctions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.5">Conclusions</head><p>In this chapter we introduced CATS, a test suite for combinatorial auction optimization algorithms. The distributions in CATS represent a step beyond previous CA testing techniques because they are economically motivated and model real-world problems. In the next chapter we use these distributions to evaluate CASS. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Original CASS Experiments</head><p>All the experiments in this section were run a 450MHz Pentium II with 256MB of RAM running Windows NT 4.0. CASS was implemented in ANSI C++, and is publicly available. While these experiments were run on older hardware, they are still useful for gaining an understanding of the algorithm. They examine all legacy (Contrast this behavior with other optimization algorithms such as A * , which never finds the optimal solution before optimality is proven.) Also observe that the time it takes CASS to finds a solution within 99% of optimality is usually much smaller-as much as two orders of magnitude. This means that CASS can be very useful as an anytime algorithm even in situations where it does not terminate in a reasonable amount of time. Of course, however, there is no theoretical guarantee that CASS will always find a solution that is close to optimal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.3">CASS vs. Bidtree</head><p>Besides CASS, Bidtree is the other special-purpose WDP algorithm that has been most widely studied and cited in the literature. It was presented in the same conference proceedings as CASS <ref type="bibr" target="#b102">[Sandholm, 1999]</ref>. The Bidtree algorithm is similar to CASS in several ways, but important differences hold. In particular, Bidtree performs a secondary depth-first search to identify non-conflicting bids, whereas CASS's structured approach provides context to the upper bound function as well as allowing it to avoid considering most conflicting bids. Bidtree also performs no caching or cache pruning. On the other hand, Bidtree uses an IDA * search strategy rather than CASS's branch-and-bound approach, and does more preprocessing. publicly available; Bidtree performance for these figures was taken from <ref type="bibr" target="#b102">[Sandholm, 1999]</ref>. It is therefore impossible to rerun these experiments on other distributions or varying the number of nondominated bids instead of the number of raw bids. Observe that overall, CASS dramatically outperforms Bidtree: CASS is between 2 and 500 times faster than Bidtree on the data points shown here, and is never slower.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">CASS vs. CPLEX</head><p>When CASS and Bidtree were proposed, ILOG's CPLEX 5 mixed integer programming package (the industry standard) was unable to solve most WDP problems within a reasonable amount of time. Since that time, however, CPLEX's mixed integer programming module improved substantially with version 6 (released 2000), and substantially again with version 7 (released 2001). Now that CPLEX is in version 8, there has been general convergence in the research community towards using CPLEX as the default approach for solving the WDP.</p><p>The only ongoing effort at competition with CPLEX has come from the authors of Bidtree, who have written an updated algorithm called CABOB which they claim is much faster <ref type="bibr" target="#b104">[Sandholm et al., 2001]</ref>  Average performance can be overwhelmed by a relatively small fraction of runs that take a very long time. To learn more about how CASS and CPLEX 8.0 compare, we can graph medians instead of means. <ref type="figure" target="#fig_53">Figure 8</ref>.9 shows medians for each distribution; the error bars indicate first and third quartiles (of course, median is the second quartile). We can see several things from this graph. First, on the whole CPLEX still appears to be much faster than CASS. Note L3: while CASS had better average performance on this distribution, CPLEX has better median performance. On L7 CASS's advantage is now shown to be much larger, with the two algorithms' error bars not even overlapping. On this distribution it does seem that a small number of very hard instances skewed CASS's average upwards; the same is true for CASS on L4 and scheduling, and for CPLEX on L4, L7, regions and arbitrary. Overall, we can see from the error bars that most distributions exhibit substantial runtime variation.</p><p>In <ref type="figure" target="#fig_53">Figure 8</ref>.9 it is also the case that the error bars often overlap. This raises the question of the extent to which the algorithms' runtimes are uncorrelated. If this level is high then there could be great benefit to running both CASS and CPLEX in parallel (or in choosing between the algorithms in a more sophisticated way: see</p><p>Chapter 10). To investigate the level of correlation between CASS and CPLEX on a per-instance basis, we plotted the algorithms' runtimes on separate axes of a scatter plot in <ref type="figure" target="#fig_53">Figure 8</ref>.10. For 5% of the instances, CASS and CPLEX had the same running time within two significant digits, and on 6% of the instances both CASS and CPLEX took longer than CASS's cap time of 12 hours, making it impossible to compare the algorithms. As we expected given its much better running times in <ref type="figure" target="#fig_53">Figures 8.8 and 8</ref>.9, CPLEX outperformed CASS a large fraction of the time (67%). The surprise is that there remained a substantial fraction (22%) of instances on which CASS outperforms CPLEX; on many instances the performance difference was very significant.  that the two algorithms' performance was often uncorrelated, and that there were a substantial fraction of these instances on which CASS dramatically outperformed CPLEX. In Chapter 10 we will revisit this uncorrelation between CASS and CPLEX and explore ways of leveraging it to build a better WDP algorithm. First, however, we will study ways of explaining why an algorithm (such as CPLEX) shows so much runtime variation on similar problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Conclusions</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Chapter 9 Empirical Hardness Models</head><p>We propose a new approach for understanding the algorithm-specific empirical hardness of N P-hard problems. We use machine learning models to build regression models that predict an algorithm's runtime given a novel problem instance. We also discuss techniques for interpreting these models to gain understanding of the characteristics that cause instances to be hard or easy.</p><p>This chapter maintains our focus on the WDP, describing our attempts to build models to predict CPLEX's performance on nine 1 of the CATS distributions. However, we also attempt to emphasize the generality of our methodology in order to encourage its application to other N P-hard problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1">Empirical Hardness</head><p>It is often the case that particular instances of N P-hard problems can be quite easy to solve in practice. In recent years researchers in the constraint programming and artificial intelligence communities have studied the empirical hardness of individual instances or distributions of N P-hard problems, and have often managed to find simple mathematical relationships between features of the problem instances and the hardness of the problem. The majority of this work has focused on decision problems:</p><p>that is, problems that ask a yes/no question of the form, "Does there exist a solution meeting the given constraints?". The most successful approach for understanding the empirical hardness of such problems-taken for example in <ref type="bibr" target="#b12">[Cheeseman et al., 1991;</ref><ref type="bibr" target="#b0">Achlioptas et al., 2000</ref>]-is to vary some parameter of the input looking for a hard-easy-hard transition corresponding to a phase transition in the solvability of the problem. This approach uncovered the famous result that 3-SAT instances are hardest when the ratio of clauses to variables is about 4.3; it has also been applied to other decision problems such as quasigroup completion <ref type="bibr" target="#b29">[Gomes &amp; Selman, 1997</ref>].</p><p>Another approach rests on a notion of backbone <ref type="bibr" target="#b75">[Monasson et al., 1998;</ref><ref type="bibr" target="#b0">Achlioptas et al., 2000]</ref>, which is the set of solution invariants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.1">Optimization Problems</head><p>Some researchers have also examined the empirical hardness of optimization problems, which ask a real-numbered question of the form, "What is the best solution meeting the given constraints?". These problems are clearly different from decision problems, since they always have solutions and hence cannot give rise to phase transitions in solvability. One way of finding hardness transitions related to optimization problems is to transform them into decision problems of the form, "Does there exist a solution with the value of the objective function ≥ x?" This approach has yielded promising results when applied to MAX-SAT and TSP. Other experimentally-oriented work includes the extension of the concept of backbone to optimization problems <ref type="bibr" target="#b110">[Slaney &amp; Walsh, 2001]</ref>, although it is often difficult to define for arbitrary problems and can be costly to compute.</p><p>A second approach is to attack the problem analytically rather than experimentally. For example, <ref type="bibr" target="#b119">Zhang [1999]</ref> performed average case theoretical analysis of particular classes of search algorithms. Though his results rely on independence assumptions about the branching factor and heuristic performance at each node of the search tree that do not generally hold, the approach has made theoretical contributionsdescribing a polynomial/exponential-time transition in average-case complexity-and shed light on real-world problems. <ref type="bibr" target="#b51">Korf and Reid [1998]</ref> predict the average number of nodes expanded by a simple heuristic search algorithm such as A* on a particular problem class by making use of the distribution of heuristic values in the problem space. As above, strong assumptions are required: e.g., that the branching factor is constant and node-independent, and that edge costs are uniform throughout the tree.</p><p>Both experimental and theoretical approaches have sets of problems to which they are not well suited. Existing experimental techniques have trouble when problems have high-dimensional parameter spaces, as it is impractical to manually explore the space of all relations between parameters in search of a phase transition or some other predictor of an instance's hardness. This trouble is compounded when many different data distributions exist for a problem, each with its own set of parameters.</p><p>Theoretical approaches are also difficult when the input distribution is complex or is otherwise hard to characterize, but they also have other weaknesses. They tend to become intractable when applied to complex algorithms, or to problems with variable and interdependent edge costs and branching factors. Furthermore, they are generally unsuited to making predictions about the empirical hardness of individual problem instances, instead concentrating on average (or worst-case) performance on a class of instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.2">The WDP</head><p>The WDP is a good example of a problem that is ill-suited to study by either existing  <ref type="figure">Figure 9</ref>.1. We describe our features in more detail below, and also mention some of the features that we dropped.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bid-Good Graph Features:</head><p>1-3. Bid nodes degree statistics: max and min degree of the bid nodes, and standard deviations. 4-7. Good nodes degree statistics: average, maximum, minimum degree of the good nodes, and their standard deviations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bid Graph Features:</head><p>8. Edge Density: number of edges in the BG divided by the number of edges in a complete graph with the same number of nodes.</p><p>9-11. Node degree statistics: the max and min node degrees in the BG, and their standard deviation.</p><p>12-13. Clustering Coefficient and Deviation. A measure of "local cliqueness." For each node calculate the number of edges among its neighbors divided by k(k − 1)/2, where k is the number of neighbors. We record average (the clustering coefficient) and standard deviation.</p><p>14. Average minimum path length: the average minimum path length, over all pairs of bids.</p><p>15. Ratio of the clustering coefficient to the average minimum path length: One of the measures of the smallness of the BG.</p><p>16-19. Node eccentricity statistics: The eccentricity of a node is the length of a shortest path to a node furthest from it. We calculate the maximum eccentricity of BG (graph diameter), the minimum eccentricity of BG (graph radius), average eccentricity, and standard deviation of eccentricity.  There are two natural graphs associated with each instance. First, is the bidgood graph (BGG): a bipartite graph having a node for each bid, a node for each good and an edge between a bid and a good node for each good in the given bid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LP-Based</head><p>We measure a variety of BGG's properties: extremal and average degrees and their standard deviations for each group of nodes. The average number of goods per bid was perfectly correlated with another feature, and so did not survive our feature selection.</p><p>The bid graph (BG) represents conflicts among bids (thus it is the constraint graph for the associated CSP). As is true for all CSPs, the BG captures a lot of useful information about the problem instance. Our second group of features are concerned with structural properties of the BG. We originally measured the first and third quartiles and the median of the BG node degrees, but they turned out to be highly correlated with edge density. We also measured the average number of conflicts per bid, but since the number of bids was held constant this feature was always proportional to edge density. We considered using the number of connected components of the BG to measure whether the problem is decomposable into simpler instances, but found that nearly every instance consisted of a single component. Our last group of features is the only one to explicitly consider the prices associated with bids. While the scale of the prices has no effect on hardness the spread is crucial, since it impacts pruning. We note that feature 25 was shown to be an optimal bidordering heuristic for branch-and-bound search on the WDP in <ref type="bibr" target="#b30">[Gonen &amp; Lehmann, 2000</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3">Evaluating Hardness Models</head><p>We generated three separate data sets of different problem sizes, to ensure that our results were not artifacts of one particular choice of problem size. The first data set contained runs on instances of 1000 bids and 256 goods each, with a total of 4500 instances (500 instances per distribution </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.1">Linear Models</head><p>One of the simplest and most widely-studied regression techniques is linear regression.</p><p>This technique finds a hyperplane in the feature space that minimizes root mean squared error (RMSE), the square root of the average squared difference between 2 When the work described in this chapter was performed, CPLEX 7.1 was the latest version. Unfortunately, it's not easy to rerun 3 CPU-years worth of experiments! On the bright side, limited experiments suggest that CPLEX 8.0 is not a huge improvement over CPLEX 7.1, at least for our WDP benchmark distributions.</p><p>3 A large literature addresses the statistical techniques we used; for an introduction see, e.g., <ref type="bibr" target="#b38">[Hastie et al., 2001]</ref>.  the predicted value and the true value of the response variable. Minimizing RMSE is reasonable because it conforms to the intuition that, holding mean absolute error constant, models that mispredict all instances equally should be preferred to models that vary in their mispredictions. Although we go on to consider nonlinear regression, it is useful to consider the results of linear regression for two reasons. First, one of our main goals was to understand the factors that influence hardness, and insights gained from a linear model are useful even if other, more accurate models can be found.</p><p>Second, our linear regression model serves as a baseline to which we can compare the performance of more complex regression techniques.</p><p>In <ref type="figure">Figure 9</ref>.1 we report both RMSE and mean absolute error, since the latter is often more intuitive. A third measure, adjusted R 2 , is the fraction of the original variance in the response variable that is explained by the model, with a penalty for more complex models. Adjusted R 2 is a measure of fit to the training set and cannot entirely correct for overfitting; nevertheless, it can be an informative measure when  presented along with test set error. <ref type="figure">Figure 9</ref>.2 shows a histogram of the RMS error, with bin width 0.1. <ref type="figure">Figure 9</ref>.3 shows a scatterplot of predicted log 10 runtime vs. actual log 10 runtime. We can see from these two figures that most instances are predicted very accurately, and few instances are dramatically mispredicted. Overall, these results show that our linear model would be able to do a good job of classifying instances into the bins shown in <ref type="figure" target="#fig_40">Figure 7</ref>.14 in Section 7.4.3, despite the fact that it is not given the distribution from which each instance was drawn: 93% of the time the log running times of the data instances in our test set were predicted to the correct order of magnitude (i.e., with an absolute error of less than 1.0).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.2">Nonlinear Models</head><p>Although our linear model was quite effective, we expected that nonlinear interactions between our features would be important, and therefore we investigated nonlinear models. A simple way of performing nonlinear regression is to compute new features based on nonlinear interactions between the original features, and then to perform linear regression on the union of both sets of features. We added all products of pairs of features to our linear model, including squares of individual features, which gave us a total of 350 features. This allowed us to fit a 2 nd degree polynomial instead of our previous linear model. For all three of our datasets this model gave considerably better error measurements on the test set and also explained nearly all the variance in the training set, as shown in <ref type="table">Table 9</ref>.2. As above, <ref type="figure" target="#fig_12">Figures 9.4 and 9</ref>.5 show a histogram of root mean squared error and a scatterplot of predicted log runtime vs. actual log runtime. Comparing these figures to <ref type="figure">Figures 9.2 and 9</ref>.3 confirms our judgment that the quadratic model is substantially better overall.</p><p>We also explored another nonlinear regression technique, Multivariate Adaptive Regression Splines (MARS) <ref type="bibr" target="#b23">[Friedman, 1991]</ref>. MARS models are linear combinations of the products of one or more basis functions, where basis functions are the positive parts of linear functions of single features. The RMSE on our MARS models differed from the RMSE on our second-order model only in the second decimal place; as MARS models can be unstable and difficult to interpret, we focus on our second-order model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.4">Analyzing Hardness Models</head><p>The results summarized above demonstrate that it is possible to learn a model of our features that accurately predicts the log of CPLEX running time on novel instances.</p><p>For some applications (e.g., predicting the time it will take for an auction to clear; building an algorithm portfolio) accurate prediction is all that is required. For other applications it is necessary to understand what makes an instance empirically hard.</p><p>In this section we set out to interpret our models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.4.1">Cost of Omission</head><p>It is tempting to interpret a model by comparing the coefficients assigned to the different features; since all features have the same mean and standard deviations, more important features should tend to have larger coefficients. The reason that this does not work is that most of our features are at least somewhat correlated. Two perfectly correlated but entirely unimportant features can have large coefficients with opposite signs in a linear model; in practice, since imperfect correlation and correlations among larger sets of variables are common, it is difficult to untangle the effects of correlation and importance in explaining a given coefficient's magnitude. One solution is to force the model to have smaller coefficients and/or to contain fewer variables. Requiring smaller coefficients reduces interactions between correlated variables; two popular techniques are ridge regression and lasso regression. We evaluated these techniques using cross validation and found no significant effect on errors or on interpretability of the model, so we do not present these results here. Likewise, single-variable models were not informative on our data: the best such model had an RMSE error of nearly 2 in predicting log 10 running time.</p><p>Another family of techniques allows interpretation without the consideration of coefficient magnitudes. These techniques select "good" subsets of the features, essentially performing exhaustive enumeration when possible and various greedy search techniques otherwise. Small models are desirable for analysis because they are easier to interpret directly and because a small, optimal subset will tend to contain fewer highly covariant features than a larger model. (For a detailed discussion of techniques for selecting relevant feature subsets and for comparisons of different definitions of "relevant," focusing on classification problems, see <ref type="bibr" target="#b49">[Kohavi &amp; John, 1997</ref>].)</p><p>We plotted subset size (from 1 to the total number of variables) versus the RMSE of the best model built from a subset of each size. We then chose the smallest subset size at which there was little incremental benefit gained by moving to the next larger subset size. We examined the features in the model, and also measured each variable's cost of omission-the (normalized) difference between the RMSE of the model on the original subset and a model omitting the given variable. It is important to note that because of correlation between features many different subsets may achieve nearly the same RMSE, and that very little can be inferred from what particular variables are included in the best subset of a given size. This is of little concern, however, when subset selection is used only to gain a conceptual understanding of the features that are important for predicting empirical hardness; in this case the substitution of   one feature for another covariant feature is irrelevant because the inclusion of either feature in the model should have the same intuitive meaning. It is also worth noting that subset selection and cost of omission were both evaluated using the test set, but that all model selection was evaluated using cross validation, and all analysis was performed after our models had been learned.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.4.2">Experimental Results</head><p>Figure 9.6 shows the RMSE of the best subset containing between 1 and 25 features for linear models; since we had only 25 features in total we selected the best subsets by exhaustive comparison. We chose to examine the model with seven features because it was the first for which adding another feature did not cause a large decrease in RMSE. <ref type="figure">Figure 9</ref>.7 shows the seven features in this model and their respective costs of omission (scaled to 100). The most striking conclusion is that structural features are the most important. Edge density of BG is essentially a measure of the constrainedness of the problem, so it is not surprising to find that this feature is the most costly to omit.</p><p>Clustering coefficient, the second feature, is a measure of average cliquiness of BG;</p><p>this feature gives an indication of how local the problem's constraints are. All but one of the remaining features concern node degrees in BG or BGG; the final feature   is the 1 norm of the linear programming slack vector. <ref type="figure">Figure 9</ref>.8 shows the best subsets containing between 1 and 60 features for secondorder models. In this case we had 350 features, making exhaustive exploration of feature subsets impossible. Instead, we used three different greedy subset selection methods (forward selection; backward selection; sequential replacement) and at each size chose the best subset among the three. The subsets shown in <ref type="figure">Figure 9</ref>.8 are likely not the RMSE-minimizing subsets of the given sizes, but since our goal was only to understand what sorts of features are important this likely lack of optimality is not a serious problem. We observe that allowing interactions between features dramatically improved RMSE on very small subsets: our 5-feature quadratic model outperformed our 25-feature linear model. <ref type="figure">Figure 9</ref>.9 shows the costs of omission for the variables from the best six-feature subset. As for our linear model, we observe that most critical features are structural: edge density of BG, the clustering coefficient and node degrees. Overall many secondorder features were selected. The 1 norm becomes more important than in the linear model when it is allowed to interact with other features; in the second-order model it is also sufficiently important to be kept as the only first-order feature.</p><p>We can look at the features that were important to our quadratic and linear models in order to gain understanding about how our models work. The importance of the 1 norm is quite intuitive: the easiest problems can be completely solved by LP, yielding an 1 norm of 0; the norm is close to 0 for problems that are almost completely solved by LP (and hence often require less search to resolve), and larger for more difficult problems. The BG edge density feature describes the overall constrainedness of the problem. Generally, we would expect that very highly constrained problems would be variables that conflict with a given variable also conflict with each other, another indication as to the speed with which the search space will narrow as variables are assigned. Finally, we can now understand the importance of the feature which was by far the most important in our 6-feature quadratic model, the product of the BG edge density and the integer slack 1 norm. Note that this feature takes a large value only when both BG edge density and 1 norm are large; the explanations above show that problems are easy for CPLEX whenever either of these features has a small value.</p><p>Since BG edge density and 1 norm are relatively uncorrelated on our data, their product gives a powerful prediction of an instance's hardness.</p><p>It is also interesting to notice which features were consistently excluded by subset selection. In particular, it is striking that no price features were important in either our first-or second-order models (except implicitly, as part of LP relaxation features). Although price-based features do appear in larger models, they seem not to be as critically important as structural or LP-based features. This may be partially explained by the fact that the removal of dominated bids eliminates the bids that deviate most substantially on price, and indeed caused us to eliminate the distribution (L1) in which average price per good varied most dramatically across bids.</p><p>Another group of features that were generally not chosen for small subsets were path length features: graph radius, diameter, average minimum path length, etc. It seems that statistics derived from neighbor relations in constraint graphs are much more meaningful for predicting hardness than other graph-theoretic statistics derived from notions of proximity or connectedness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.5">Conclusions</head><p>We performed an extensive experimental investigation into the empirical hardness of the WDP. We identified structural, distribution-independent features of WDP instances and showed that, somewhat surprisingly, they contain enough information to predict CPLEX running time with high accuracy.</p><p>More importantly, we proposed a new, general methodology for understanding the empirical hardness of complex, high-dimensional N P-hard problems. We believe that our methodology, based on using machine learning techniques to identify hard regions of the feature space, is applicable to a wide variety of hard problems. In the next chapter we will discuss ways of applying these models to build algorithm portfolios and to tune benchmark distributions for hardness.</p><p>Chapter 10</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Applications of Hardness Models</head><p>This chapter describes techniques for building an algorithm portfolio that can outperform its constituent algorithms, and a method for generating test distributions to focus future algorithm design work on problems that are hard for an existing portfolio. We demonstrate the effectiveness of our techniques on the WDP. First, we show that a portfolio of CASS, CPLEX and GL <ref type="bibr" target="#b31">[Gonen &amp; Lehmann, 2001]</ref> outperforms CPLEX alone by a factor of three; second, we show that we are able to tune the CATS distributions to make them much harder for our portfolio.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1">Introduction</head><p>Although some algorithms are better than others on average, there is rarely a best algorithm for a given problem. Instead, it is often the case that different algorithms perform well on different problem instances. Not surprisingly, this phenomenon is most pronounced among algorithms for solving N P-hard problems, because runtimes for these algorithms are often highly variable from instance to instance. When algorithms exhibit high runtime variance, one is faced with the problem of deciding which algorithm to use; Rice dubbed this the "algorithm selection problem" <ref type="bibr" target="#b94">[Rice, 1976]</ref>. In the nearly three decades that have followed, the issue of algorithm selection has failed to receive widespread study, though of course some excellent work does exist. By far, the most common approach to algorithm selection has been to measure different algorithms' performance on a given problem distribution, and then to use only the algorithm having the lowest average runtime. This approach, to which we refer as "winner-take-all," has driven recent advances in algorithm design and refinement, but has resulted in the neglect of many algorithms that, while uncompetitive on average, offer excellent performance on particular problem instances. Our consideration of the algorithm selection literature, and our dissatisfaction with the winner-take-all approach, has led us to ask the following two questions. First, what general techniques can we use to perform per-instance (rather than per-distribution) algorithm selection? Second, once we have rejected the notion of winner-take-all algorithm evaluation, how ought novel algorithms to be evaluated? Taking the idea of boosting from machine learning as our guiding metaphor, we strive to answer both questions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1.1">The Boosting Metaphor</head><p>Boosting is a machine learning paradigm due to <ref type="bibr" target="#b106">Schapire [1990]</ref> and widely studied since. Although this chapter does not make use of any technical results from the boosting literature, it takes its inspiration from the boosting philosophy. Stated simply, boosting is based on two insights:</p><p>1. Poor classifiers can be combined to form an accurate ensemble when the classifiers' areas of effectiveness are sufficiently uncorrelated.</p><p>2. New classifiers should be trained on problems on which the current aggregate classifier performs poorly.</p><p>In this chapter, we argue that algorithm design should be informed by two analogous ideas:</p><p>1. Algorithms with high average running times can be combined to form an algorithm portfolio with low average running time when the algorithms' easy inputs are sufficiently uncorrelated.</p><p>2. New algorithm design should focus on problems on which the current algorithm portfolio performs poorly.</p><p>Of course the analogy to boosting is imperfect; we discuss differences in Section 10.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2">Algorithm Portfolios</head><p>Our work described in Chapter 9 demonstrated that statistical regression can be used to learn surprisingly accurate algorithm-specific models of the empirical hardness of given distributions of problem instances. Given these techniques, we propose building portfolios of multiple algorithms as follows:</p><p>1. Train a model for each algorithm, as described above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Given an instance:</head><p>(a) Compute feature values (b) Predict each algorithm's running time using runtime models.</p><p>(c) Run the algorithm predicted to be fastest Unlike the models discussed in Chapter 9, for constructing algorithm portfolios we use models that predict actual running time rather than log running time. Other transformations of the response variable, including the log transformation, are evaluated in Section 10.3.2. Overall, while we will show experimentally that our portfolios can dramatically outperform the algorithms of which they are composed, our techniques are also deceptively simple. For discussion and comparison with other approaches in the literature, please see Section 10.5.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2.1">Experimental Results</head><p>In this chapter we consider three algorithms for solving the WDP: CPLEX 7.1; GL <ref type="bibr" target="#b31">[Gonen &amp; Lehmann, 2001</ref>], a simple branch-and-bound algorithm with CPLEX's LP solver as its heuristic; and CASS. First, we used the methodology described in Chapter winner-take-all algorithm selection. The "optimal" bar shows the performance of an ideal portfolio where algorithm selection is performed perfectly and with no overhead.</p><p>The portfolio bar shows the time taken to compute features (light portion) and the time taken to run the selected algorithm (dark portion). Despite the fact that CASS and GL are much slower than CPLEX on average, the portfolio outperforms CPLEX by roughly a factor of 3. Moreover, neglecting the cost of computing features, our portfolio's selections take only 5% longer to run than the optimal selections.</p><p>Figs. 10.2 and 10.3 show the frequency with which each algorithm is selected in the ideal portfolio and in our portfolio. They illustrate the quality of our algorithm selection and the relative value of the three algorithms. We know from <ref type="figure" target="#fig_53">Figure 8</ref>.10 that CASS is often significantly uncorrelated with CPLEX; it turns out that most of the speedup in our portfolio comes from choosing CASS on appropriate instances.</p><p>Observe that our portfolio does not always make the right choice (in particular, it selects GL much more often than it should). However, most of the mistakes made by our models occur when both algorithms have very similar running times; these mistakes are not very costly, explaining why our portfolio's choices have a running time so close to optimal.</p><p>Observe that our variable importance analysis from Chapter 9.4.2 gives us some insight about why an algorithm like CASS is able to provide such large gains over algorithms like CPLEX and GL on a significant fraction of instances. Unlike either CPLEX or GL, CASS does not use an LP heuristic, and so does not incur a substantially higher per-node cost when the number of constraints (and thus the bid graph edge density feature) increases. Like any search algorithm, CASS does benefit whenever the search space becomes smaller; thus, CASS can achieve better overall performance on problems with a very large number of constraints.</p><p>These results show that our portfolio methodology can work very well even with a small number of algorithms, and when one algorithm's average performance is considerably better than the others'. We suspect that our techniques could be even more effective in other settings. 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3">Extending our Portfolio Methodology</head><p>Once it has been demonstrated that algorithm portfolios can offer significant speedups over winner-take-all algorithm selection, it is worthwhile to consider modifications to the methodology that make it more useful in practice. Specifically, we describe methods for reducing the amount of time spent computing features, transforming the response variable, and capping runs of some or all algorithms. (c) Otherwise, return with the algorithm predicted to be fastest according to M j .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3.2">Transforming the Response Variable</head><p>Average runtime is an obvious measure of portfolio performance if one's goal is to minimize computation time over a large number of instances. Since our models minimize root mean squared error on predictions of runtime, they appropriately penalize 20 seconds of error equally on instances that take 1 second or 10 hours to run. That is, they penalize the same absolute error in the same way regardless of the magnitude of the instance's runtime. However, another motivation is to achieve good relative error on every instance regardless of its hardness-we might thus consider that a 20 second error is more significant on a 1 second instance than on a 10 hour instance. Let r p i and r * i be the portfolio's runtime and the optimal runtime respectively on instance i, let n be the number of instances, and as defined in Equation (3.10) let δ be the Kronecker delta, an indicator function. One measure that gives an insight into the portfolio's relative error is percent optimal : 1 n i δ r * i (r p i ).</p><p>(10.1)</p><p>Another measure of relative error is average percent suboptimal :</p><formula xml:id="formula_159">1 n i r p i − r * i r * i . (10.2)</formula><p>Taking a logarithm of runtime before running the regression allows our minimization of root mean squared error to concentrate more on relative error than on absolute error, roughly equalizing the importance of errors on easy and hard instances. Thus, models that predict a log of runtime achieve better performance in terms of the average percent suboptimal, but worse performance in terms of average runtime. It is also possible to consider other functions between log and linear (identity) that offer different tradeoffs between the relative importance of small and large instances. <ref type="figure" target="#fig_21">Figure 10</ref>.5 (overleaf) shows linear, log and cube root, one such intermediate function.</p><p>We found that the cube root function achieved a particularly effective tradeoff on our WDP data: see Section 10.3.4. The functions are normalized by their maximum value, since this does not affect regression, but allows us to better visualize their effects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3.3">Capping Runs</head><p>The methodology of Section 10.2 requires gathering runtime data for every algorithm on every problem instance in the training set. While the time cost of this step is fundamentally unavoidable for our approach, gathering perfect data for every instance can take an unreasonably long time. For example, if algorithm a 1 is usually much slower than a 2 but in some cases dramatically outperforms a 2 , a perfect model of a 1 's runtime on hard instances may not be needed to discriminate between the two algorithms. The process of gathering data can be made much easier by capping the runtime of each algorithm at some maximum and recording these runs as having terminated at the captime. This approach is safe if the captime is chosen so that it is (almost) always significantly greater than the minimum of the algorithms' runtimes; if not, it might still be preferable to sacrifice some predictive accuracy for dramatically reduced model-building time. Note that if any algorithm is capped, it can be dangerous (particularly without a log transformation) to gather data for any other algorithm without capping at the same time, because the portfolio could inappropriately select the algorithm with the smaller captime. Compared to computing all features, we reduce overhead by almost half with nearly no cost in running time.   runtime, percent optimal and average percent suboptimal. The first row has results that would be obtained by a perfect portfolio. As discussed in Section 10.3.2, the linear (identity) transformation yields the best average runtime, while the log function leads to better algorithm selection. We tried several transformation functions between linear and log. Here we only show the best, cube root: it has nearly the same average runtime performance as linear, but also made choices nearly as accurately as log.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3.4">Experimental Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.4">Focused Algorithm Design</head><p>Once we have decided to select among existing algorithms using a portfolio approach, it makes sense to reexamine the way we design and evaluate algorithms. Since the purpose of designing a new algorithm is to reduce the time that it will take to solve problems, designers should aim to produce new algorithms that complement an existing portfolio. In order to understand what this means it is first essential to choose a distribution D that reflects the problems that will be encountered in practice. Given a portfolio, the greatest opportunity for improvement is on instances that are hard 3. Construct a distribution over instances by assigning each instance s probability</p><p>proportional to H f (s) h p (s) , and select an instance by sampling from this distribution.</p><p>Observe that if h p turns out to be helpful, hard instances from D · h f will be encountered quickly. Even in the worst case where h p directs the search away from hard instances, observe that we still sample from the correct distribution because the weights are divided by h p (s).</p><p>In practice, D may be factored as D g · D p i , where D g is a distribution over otherwise unrelated instance generators with different parameter spaces, and D p i is a distribution over the parameters of the chosen instance generator i. 3. Generate a large number of instances from (D g · h g ) · (D p i · h p i ) (a) select a generator i by sampling from D g · h g (b) select parameters for the generator by sampling from D p i · h p i (c) run generator i with the chosen parameters to generate an instance.</p><p>5 However, the experimental results presented in <ref type="figure" target="#fig_11">Figures 10.6-10</ref>.8 use hardness models H f trained on the whole dataset rather than using models trained on individual distributions. Learning new models would probably yield even better results.</p><p>4. Construct a distribution over instances by assigning each instance s from generator i probability proportional to H f,i (s) h g (s)·h p i (s) , and select an instance by sampling from this distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.4.2">Inducing Realistic Distributions</head><p>It is important for our portfolio methodology that we begin with a "realistic" D:</p><p>that is, a distribution accurately reflecting the sorts of problems expected to occur in practice. Care must always be taken to construct a generator or set of generators producing instances that are representative of problems from the target domain.</p><p>Sometimes, it is possible to construct a function R f that scores the realism of a generated instance based on features of that instance; such a function can sometimes encode additional information about the nature of realistic data that cannot easily be expressed in a generator. If a function R f is provided, we can construct D from a parameterized set of instance generators by using R f in place of H f above and learning r p in the same way we learned h p . Given these distributions, the techniques described in Section 10.4.1 are guaranteed to generate instances with increased average realism scores.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.4.3">Experimental Results</head><p>Due to the wide spread of runtimes in our composite distribution D (7 orders of magnitude) and the high accuracy of our model h f , it is quite easy for our technique to generate harder instances. These results are presented in <ref type="figure" target="#fig_21">Figure 10</ref>.6. Because our runtime data was capped, there is no way to know if the hardest instances in the new distribution are harder than the hardest instances in the original distribution; note, however, that very few easy instances are generated. Instances in the induced distribution came predominantly from the CATS arbitrary distribution, with most of the rest from L3.</p><p>To demonstrate that our technique also works in more challenging settings, we sought a different distribution with small runtime variance. As described in Section 7.4.3, there has been ongoing discussion in the WDP literature about whether those CATS distributions that are relatively easy could be configured to be harder. We consider two easy distributions with low variance from CATS, matching and scheduling, and show that they indeed can be made much harder than originally proposed.</p><p>Figures 10.7 and 10.8 show the histograms of the runtimes of the ideal portfolio before and after our technique was applied. In fact, for these two distributions we generated instances that were (respectively) 100 and 50 times harder than anything we had previously seen! Moreover, the average runtime for the new distributions was greater than the observed maximum running time on the original distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.5">Discussion and Related Work</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.5.1">Algorithm Selection</head><p>It has long been understood that algorithm performance can vary substantially across different classes of problems. <ref type="bibr" target="#b94">Rice [1976]</ref> was the first to formalize algorithm selection as a computational problem, framing it in terms of function approximation. Broadly, he identified the goal of selecting a mapping S(x) from the space of instances to the space of algorithms, to maximize some performance measure perf(S(x), x). Rice offered few concrete techniques, but all subsequent work on algorithm selection can be seen as falling into his framework. We explain our choice of methodology by relating it to other approaches for algorithm selection that have been proposed in the literature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Parallel Execution</head><p>One tempting alternative to portfolios that select a single algorithm is the parallel execution of all available algorithms. While it is often true that additional processors are readily available, it is also often the case that these processors can be put to uses besides running different algorithms in parallel, such as parallelizing a single search algorithm or solving multiple problem instances at the same time. Meaningful comparisons of running time between parallel and non-parallel portfolios require that computational resources be fixed, with parallel execution modelled as ideal (nooverhead) task swapping on a single processor. Let t * (x) be the time it takes to run the algorithm that is fastest on instance x, and let n be the number of algorithms. A portfolio that executes all algorithms in parallel on instance x will always take time nt * (x). On our WDP data such parallel execution has roughly the same average runtime as winner-take-all algorithm selection (we have three algorithms and CPLEX is three times slower than the optimal portfolio), while our techniques do much better, achieving running times of roughly 1.05t * (x).</p><p>In some domains, parallel execution can be a very effective technique. <ref type="bibr" target="#b28">Gomes and Selman [2001]</ref> proposed such an approach for incomplete SAT algorithms, using the term portfolio to describe a set of algorithms run in parallel. In this domain runtime depends heavily on variables such as random seed, making runtime difficult to predict; thus parallel execution is likely to outperform a portfolio that chooses a single algorithm. In such cases it is possible to extend our methodology to allow for parallel execution. We can add one or more new algorithms to our portfolio, with algorithm i standing as a placeholder for the parallel execution of k i of the original algorithms; in the training data i would be given a running time of k i times the minimum of its constituents. This approach would allow portfolios to choose to task-swap sets of algorithms in parts of the feature space where the minimums of individual algorithms' runtimes are much smaller than their means, but to choose single algorithms in other parts of the feature space. Our use of the term "portfolio" may thus be seen as an extension of the term coined by <ref type="bibr">Gomes and Selman, referring</ref> to a set of algorithms and a strategy for selecting a subset (perhaps one) for parallel execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classification</head><p>Since algorithm selection is fundamentally discriminative-it entails choosing the algorithm that will exhibit minimal runtime-classification is an obvious approach to consider. Any standard classification algorithm (e.g., a decision tree) could be used to learn which algorithm to choose given features of the instance and labelled training examples. The problem is that such non-cost-sensitive classification algorithms use the wrong error metric: they penalize misclassifications equally regardless of their cost. We want to minimize a portfolio's average runtime, not its accuracy in choosing the optimal algorithm. Thus we should penalize misclassifications more when the difference between the runtimes of the chosen and fastest algorithms is large than when it is small. This is just what happens when our decision criterion is to select the smallest prediction among a set of regression models that were fit to minimize root mean squared error.</p><p>A second classification approach entails dividing running times into two or more bins, predicting the bin that contains the algorithm's runtime, and then choosing the best algorithm. For example, <ref type="bibr" target="#b42">Horvitz et al. [2001;</ref> used classification to predict runtime of CSP and SAT solvers with inherently high runtime variance (heavy tails).</p><p>Despite its similarity to our portfolio methodology, this approach suffers from the use of a classification algorithm to predict runtime. First, the learning algorithm does not use an error function that penalizes large misclassifications (off by more than one bin) more heavily than small misclassifications (off by one bin). Second, this approach is unable to discriminate between algorithms when multiple predictions fall into the same bin. Finally, since runtime is a continuous variable, class boundaries are artificial. Instances with runtimes lying very close to a boundary are likely to be misclassified even by a very accurate model, making accurate models harder to learn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Markov Decision Processes</head><p>Perhaps most related to our methodology is work by <ref type="bibr" target="#b52">Lagoudakis and Littman [2000;</ref><ref type="bibr" target="#b40">2001]</ref>. They worked within the MDP framework, and concentrated on recursive algorithms (e.g., sorting, SAT), sequentially solving the algorithm selection problem on each subproblem. This work demonstrates encouraging results; however, its generality is limited by several factors. First, the use of algorithm selection at each stage of a recursive algorithm can require extensive recoding, and may simply be impossible with 'black-box' commercial or proprietary algorithms, which are often among the most competitive. Second, solving the algorithm selection problem recursively requires that the value functions be very inexpensive to compute; for the WDP we found that more computationally expensive features were required for accurate predictions of runtime.</p><p>Finally, these techniques can be undermined by non-Markovian algorithms, such as those using clause learning, taboo lists or other forms of dynamic programming. Of course, our approach could also be characterized as an MDP; we do not do so as the framework is redundant in the absence of a sequential decision-making problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Different Regression Approaches</head><p>Lobjois and Lemaître [1998] select among several simple branch-and-bound algorithms based on a prediction of running time. This work is similar in spirit to our own; however, their prediction is based on a single feature and works only on a particular class of branch-and-bound algorithms.</p><p>Since our goal is to discriminate among algorithms, it might seem more appropriate to learn models of pairwise differences between algorithm runtimes, rather than models of absolute runtimes. For linear regression (and the forms of nonlinear regression used in our work) it is easy to show that the two approaches are mathematically equivalent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.5.2">Inducing Hard Distributions</head><p>It is widely recognized that the choice of test distribution is important for algorithm development. In the absence of general techniques for generating instances that are both realistic and hard, the development of new distributions has usually been performed manually. An excellent example of such work is <ref type="bibr" target="#b108">Selman et al. [1996]</ref>, which describes a method of generating SAT instances near the phase transition threshold, which are known to be hard for most SAT solvers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.5.3">The Boosting Metaphor Revisited</head><p>Although it is helpful, our analogy to boosting is clearly not perfect. One key difference lies in the way components are aggregated in boosting: classifiers can be combined through majority voting, whereas the whole point of algorithm selection is to run only a single algorithm. We instead advocate the use of learned models of runtime as the basis for algorithm selection, which leads to another important difference. It is not enough for the easy problems of multiple algorithms to be uncorrelated; the models must also be accurate enough to reliably recommend against the slower algorithms on these uncorrelated instances. Finally, while it is impossible to improve on correctly classifying an instance, it is almost always possible to solve a problem instance more quickly. Thus improvement is possible on easy instances as well as on hard instances; the analogy to boosting holds in the sense that focusing on hard regions of the problem space increases the potential gain in terms of reduced average portfolio runtimes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.6">Conclusions</head><p>Empirical hardness models can be used to combine algorithms together into a portfolio that outperforms its constituents. We have described how to build such portfolios, also presenting techniques for reducing the cost of computing features, reducing the time spent gathering training data by capping runs, and striking the right balance between the penalties for mispredicting easy and hard instances. We argued that algorithm design should focus on problem instances upon which a portfolio of existing algorithms spends most of its time, and provided techniques for using empirical hardness models to automatically induce such distributions.</p><p>We performed experiments on WDP algorithms, and showed that a portfolio composed of CPLEX, CASS and GL outperformed CPLEX alone by a factor of 3-despite the fact that CASS and GL are much slower than CPLEX on average. We were also able to induce test data that was much harder for our portfolio, and were even able to make specific CATS distributions much harder. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Index</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 . 1 :</head><label>11</label><figDesc>Topics covered in this thesis</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 . 1 :</head><label>21</label><figDesc>Quarterly Trunk Calls on Weekdays in the United Kingdom, December 1975</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>+c−ε: an upper bound on v u and thus on all possible v functions for agents. We now define variants of Φ 3 based on different agent v functions: Φ a 3 when agents have different, arbitrary v functions, and Φ l 3 and Φ l+c−ε 3 for the cases when all agents' functions are v l and v l+c−ε , respectively. In each variant we assume that the network has full knowledge of agents' valuations and can set different p's for each agent. Let d a , d l , and d l+c−ε be the corresponding ideal distributions arising from ϕ 3 in their respective mechanisms. The revenue extracted from each agent</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>3.16), we have reordered the sums, made use of Equation (3.4) and performed factoring like that done to obtain Equation (3.13). To obtain Equation (3.17), we have factored the bracketed expression in (3.16) and shifted the dummy indices of the second sum.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Corollary 3 .</head><label>3</label><figDesc>16 (ex-post singleton) For all τ i ∈ T , for all n ≥ 2, agent i obtains the same expected utility by: 1. participating as a singleton bidder in E br and following the equilibrium from Theorem 3.10; as by 2. participating in a first-price auction with participation revelation in E s with number of bidders distributed according to p n,1 ; and by 3. participating in a first-price auction with a stochastic number of participants in E s with number of bidders distributed according to p n,k .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Corollary 3 .</head><label>3</label><figDesc>17 (ex-ante) For all n ≥ 2, as long as ∃n, ∃k, γ c (n) &gt; 0 and γ a (k) &gt; 0 and c n,k &gt; 0, agent i obtains greater expected utility by:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>maps agents' joint actions to a real number, with the property that if X and Y are joint actions differing only in the action choice of one agent i, P (X) − P (Y ) is equal to the difference in i's payoff from selecting the two actions. This result is useful because it means that the construction of a potential function is sufficient for showing the existence of a purestrategy equilibrium. Potential functions can also be used to compute equilibria: the set of pure-strategy Nash equilibria is equivalent to the set of joint actions that maximize P . Recent work in computer science and AI has explored classes of games inspired by and extending congestion games. For example, Kearns et al. examined games with</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Local-effect games (LEGs) model situations where agents' effects on each other are potentially asymmetric. Generally, action A locally affects action B if the utility of agents taking action B depends on some function F A,B of the number of agents taking action A, but the utility of agents taking action A depends on a different function F B,A of the number of agents taking action B.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Another natural domain modeled by LEGs is a role formation game, where agents can take on one of a set of partially-substitutable roles. Agents are rewarded according to the amount of work they do, so their payoff is reduced as other agents adopt the same or similar roles.Formally, let G, F, n be a local-effect game for n agents. G is a graph, defined as G = A, E . A is the set of nodes in the graph, which correspond to the actions available to each player in the game. 1 E is a set of pairs of nodes, where (a, a ) ∈ E denotes that a (directed) edge runs from a to a . Let neigh(i) denote the set of nodes from which there are edges that terminate at node i. The function F a,a : Z + ∪{0} → R labels every node and edge in G: each node a is labelled by a node function F a,a and each edge from a to a is labelled by an edge function F a,a . (For notational convenience, we define F for every pair of nodes; (a, a ) ∈ E implies ∀x, F a,a (x) = 0.) Let D denote the distribution of players across actions, and D(a) denote the number of players who chose action a ∈ A. We can now state the cost function of an agent a who chose action i ∈ A:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>For localeffect games, we can find counterexamples where exhaustive enumeration of strategies shows the absence of any PSNE, demonstrating that such a sweeping general result is impossible. One example (found experimentally, and confirmed by exhaustive search) is the B-LEG {A, B, C}, {(A, B), (B, A), (A, C), (C, A), (B, C), (C, B) , F, 11 , with</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>F</head><label></label><figDesc>i,j (x) are linear and bidirectional. That is, there is a change both in the amount of local effect acting on agent a, and new local effect caused by agent a, and bidirectionality and linearity imply that these two amounts are the same. Thus the desired result is obtained by adding 1 2 s to the congestion game potential function. Observe that Theorem 4.5 holds for B-LEGs with arbitrary node functions F i,i (x)all that is required is linearity of the local-effect functions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Theorem 4. 6</head><label>6</label><figDesc>Uniform local-effect games have pure strategy Nash equilibria if the local-effect graph is a clique.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 4 .</head><label>4</label><figDesc>1 shows the graph structure to which Lemma 4.7 refers. There may be any number of nodes other than A, B and C; their connectivity (both with A, B and C and with each other), their node functions and their edge functions are all unrestricted. The only restrictions are that A, B and C must be connected as shown, and that either F B,C = F C,B or F B,C is nonlinear.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 4</head><label>4</label><figDesc>There exists no class of local-effect games where every game in the class has a potential function, in the case where ∃A, B, C ∈ A where B ∈ neigh(C) andA ∈ neigh(B) and A ∈ neigh(C) and (F B,C = F C,B or F B,C is nonlinear).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>For more compact notation in what follows, let α = D(A), β = D(B) and γ = D(C). Define the following three distributions: X = (α, β, γ, D(4), . . . , D(n)), Y = (α − 1, β + 1, γ, D(4), . . . , D(n)) and Z = (α, β + 1, γ − 1, D(4), . . . , D(n)). Without making any assumptions about the local effects between actions A, B and C and any of the other n − 3 actions, and for x ∈ {A, B, C}, let: U x (D(x), D(4), . . . , D(n)) = F x,x (D(x)) + a ∈{4,...,n} F a ,a (D(a )) (4.5) That is, U x (D(x), D(4), . . . , D(n)) denotes the (negative) utility contributed to each agent taking action x ∈ {A, B, C} by those agents also taking action x, and by those agents taking the 4 th through n th actions. For compactness we will abbreviate U x (D(x), D(4), . . . , D(n)) as u x (D(x)) below.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>u</head><label></label><figDesc>B (β + 1) and u C (γ) all cancel out, demonstrating that this proof does not depend on what edges exist between A, B, C and the rest of the graph, or on node effects. Define</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>I</head><label></label><figDesc>a,a (x) = F a,a (x) − F a,a (x − 1): the incremental cost on the local effect between a and a of adding the x th agent to a. We then get:I C,B (γ) − I B,C (β + 1) = 0 (4.10)Clearly, Equation (4.10) will not be satisfied for all β, γ unless F B,C = F C,B and F B,C is linear. This contradicts our assumption that a potential function exists for every LEG in the class.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Lemma 4. 8 Figure 4 . 2 :</head><label>842</label><figDesc>There exists no class of local-effect games where every game in the class has a potential function, in the case where ∃A, B, C ∈ A where B ∈ neigh(C) and A ∈ neigh(B) and A ∈ neigh(C) and (F B,C = F C,B or F B,C is nonlinear or F A,B = F B,A or F A,B is nonlinear). Graph structure for Lemma 4.8</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head></head><label></label><figDesc>C,B (γ) − I B,C (β + 1) + I B,A (β + 1) − I A,B (α) = 0 (4.15) Clearly, Equation (4.15) will not be satisfied for all α, β, γ unless F A,B = F B,A , F B,C = F C,B , and both F A,B and F B,C are linear. This contradicts our assumption that a potential function exists for every LEG in the class.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 4 . 3 :</head><label>43</label><figDesc>Graph structure for Lemma 4.9</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>I</head><label></label><figDesc>A,C (α) − I A,B (α) + I B,A (β + 1) − I B,C (β + 1)+ I C,B (γ) − I C,A (γ) = 0 (4.20)Equation (4.20) may be rewritten as:I A,C (α) − I C,A (γ) + I B,A (β + 1) − I A,B (α) + I C,B (γ) − I B,C (β + 1) = 0 (4.21)From Equation(4.20)we can see that the contradiction does not obtain for all α, β, γ when F A,B = F A,C , F B,A = F B,C , and F C,A = F C,B . From Equation (4.21) we can see that the contradiction does not obtain for all α, beta, γ when F A,B = F B,A , F B,C = F C,B , F A,C = F C,A and F A,B , F A,C and F B,C are all linear. If neither condition holds, our assumption a potential function exists for every LEG in the class is contradicted.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Theorem 4. 10</head><label>10</label><figDesc>There exists a class of potential games that is equivalent to a given class of local-effect games if and only if: 1. the local-effect games are bidirectional and all local-effect functions are linear 2. the local-effect games are uniform and the local-effect graph is a clique Proof.It is easy to show that the stated conditions are sufficient. If the game is bidirectional with linear functions, Theorem 4.5 shows that an equivalent class of potential games exists. Likewise, if the game is uniform and the local-effect graph is a clique, Theorem 4.6 shows that an equivalent class of potential games exists.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>F</head><label></label><figDesc>B,B (D n−1 (B) + 1) ≤ F B,B (D n−1 (B)) + F B,B (1) (4.22)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>F</head><label></label><figDesc>B,B (D n−1 (B) + 1) ≤ F B,A (D n−1 (B)) + U n A,∼B (1) (4.28) Equation (4.28) contradicts our assumption that agent n would myopically choose A over B; therefore D n must be an independent set. Now we show that D is a Nash equilibrium. Let C be the node that the new agent i selected in making his myopic response to the distribution D. From symmetry of cost functions we know that no agent can profitably deviate from node C: if so, i would have chosen a different node in the first place. Consider an agent j who chose a node V = C. Agent j's payoff does not change from distribution D to distribution D , because D is an independent set, and so F C,V (·) = 0 (there are no local effects between nodes C and V . Since distribution D was a Nash equilibrium</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_24"><head>Figure 4 . 8 :</head><label>48</label><figDesc>Modified Grid -k n = 4, 200 agents All games shown here are B-LEGs with ∀A, ∀B F A,B (x) = k A,B log(x + 1). We use one k n for all node functions and another k e for all edge functions (i.e., ∀A, ∀B = A k A,A = k B,B and ∀A, ∀B = A, ∀C ∈ {A, B} k A,B = k A,C ). We hold k e = 1 throughout, and vary k n to highlight some of the more interesting equilibria. These equilibria are representative of average runs, and were found with a minimum of parameter manipulation. Each node is labelled with the number of agents choosing the node in equilibrium.Figure 4.4 shows a T structure representative of a simple location problem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head>Figure 4 .</head><label>4</label><figDesc>5, which we call 'arbitrary' in what follows, is interesting because there are 2 nodes with 2 neighbors, 2 with 3 neighbors and 2 with 4 neighbors. This setting could represent a role formation game.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_26"><head>Figure 4</head><label>4</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_27"><head>Figure 4</head><label>4</label><figDesc>Figure 4.9: Steps to convergence for the five graphs</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_28"><head>Figure 4 .</head><label>4</label><figDesc>10: Steps to convergence for the arbitrary graph only one neighbor, and thus the parents of leaves are chosen by few agents.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_29"><head>Figure 4 .</head><label>4</label><figDesc>7 shows a two-dimensional grid, representative of our coffee house location problem.Observe that the corners are most desirable, as they have only two neighbors; nodes neighboring corners are thus under-populated, leading to another concentration of agents in the middle of each edge. It is also interesting that agents concentrate in the central node, even though it has four neighbors, because its neighbors are relatively under-populated.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_30"><head>Figure 4 .</head><label>4</label><figDesc>8 shows what happens to the game from Figure 4.7 when</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_31"><head></head><label></label><figDesc>Figure 6.1: Partition into Bins</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_32"><head>Figure 6 Figure 6 . 4 :</head><label>664</label><figDesc>Cache Pruning in the cache when the search associated with the new entry examined more nodes. 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_33"><head>Figure 6 . 6 :</head><label>66</label><figDesc>Singleton Pre-processing Algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_34"><head>Figure 6</head><label>6</label><figDesc>CAMUS's upper bound function generalizes the CASS upper bound function described in Section 6.1.4, considering average price per unit rather than average price per good. Let π be the current allocation; recall that units i (π) denotes the number of available units of good j. Redefine a(b i ) = p(b i )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_35"><head></head><label></label><figDesc>is the best; backtrack. Set i to the index of the lowest-order good in π where units i (π) &lt; units(i). (i may or may not change) Construct a new subbin based on the previous subbin of bin i (which is bin i itself if i changed above): Include all b k from current subbin, where k &gt; j. Include all dominated bids associated with b j .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_36"><head>Figure 6</head><label>6</label><figDesc>Figure 6.8: CAMUS Pseudocode</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_37"><head></head><label></label><figDesc>Figure 7.1: Sample Railroad Graph</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_38"><head>Figure 7 . 2 :</head><label>72</label><figDesc>Graph-Building Technique unless more quantitative metrics are used to assess quality; we see the identification and application of such metrics (for this and other distributions) as an important topic for future work.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_39"><head>Figure 7 . 3 :</head><label>73</label><figDesc>Bid-Generation Technique</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_40"><head>Figure 7</head><label>7</label><figDesc>Figure 7.4: Graph-Building Technique</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_41"><head>Figure 7 .</head><label>7</label><figDesc>5 shows a sample real estate graph, generated by the technique described in Figure 7.4. Nodes of the graph are shown with asterisks, while edges are represented by solid lines. The dashed lines show one set of property boundaries that would be represented by this graph. Note that one node falls inside each piece of property, and that two pieces of property border each other iff their nodes share an edge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_42"><head>Figure 7 . 5 :</head><label>75</label><figDesc>Sample Real Estate Graph</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_43"><head></head><label></label><figDesc>For Make XOR bids on all B i where 0 ≤ value(B) ≤ budget and c i ≥ min resale value. If there are more than max substitutable bids such bundles, bid on the max substitutable bids bundles having the largest value End While Figure 7.7: Bid-Generation Technique population of the region rather than exponential in the number of regions<ref type="bibr" target="#b2">[Ausubel et al., 1997]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_44"><head>Figure 7 . 10 :</head><label>710</label><figDesc>Map of Airport Locations</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_45"><head></head><label></label><figDesc>These are the four busiest airports in the United States: La Guardia International, Ronald Reagan Washington National, John F. Kennedy International, and O'Hare International.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_46"><head>Figure 7 .</head><label>7</label><figDesc>takeof f = max(1, start time − early takeof f deviation) to min(num times, start time + late takeof f deviation) For land = takeof f + min f light length to min(start time + min f light length + late land deviation, num times) amount late = min(land − (start time + min f light length), 0) delay = land − takeof f − min f light lengthBid dev · (cost(city 1 ) + cost(city 2 )) · delay coef f delay · amount late coef f amount late for takeoff at time takeof f at city 1 and landing at time land at city 2 11: Bid-Generation Technique</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_47"><head></head><label></label><figDesc>Wellman et al., we assume that all jobs are eligible to be started in the first time slot. Our formulation of the problem differs in only one respect-we consider only allocations in which jobs receive continuous blocks of time. However, this constraint is not restrictive because for any arbitrary allocation of time slots to jobs there exists a new allocation in which each job receives a continuous block of time and no job finishes later than in the original allocation. (This may be achieved by numbering the winning bids in increasing order of scheduled end time, and then allocating continuous</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_48"><head>Figure 7 .Fixed</head><label>7</label><figDesc>12: Bid-Generation Technique published test distributions of which we are aware, that are able to scale with the number of goods and bids. Each of these distributions may be seen as an answer to three questions: what number of goods to request in a bundle, which goods to request, and the price offered for a bundle. We begin by describing different techniques for answering each of these three questions, and then show how they have been combined in previously published work. Number of Goods Uniform: Uniformly distributed on [1, num goods] Normal: Normally distributed with µ = µ goods and σ = σ goods Constant: Fixed at constant goods Decay: Starting with 1, repeatedly increment the size of the bundle until rand(0, 1) exceeds α Binomial: Request n goods with probability p n (1 − p) num goods−n num goods n Exponential: Request n goods with probability C exp −n/q Which Goods Random: Draw n goods uniformly at random from the set of all goodsRandom: Uniform on [low f ixed, hi f ixed] Linear Random: Uniform on [low linearly · n, hi linearly · n]Normal: Draw from a normal distribution with µ = µ price and σ = σ price Quadratic 9 : For each good k and each bidder i set the value v i k = rand(0, 1); then i's price offer for a set of goods S is k∈S</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_49"><head>1 [</head><label>1</label><figDesc>of goods, followed by the method used to choose the price offer. In all cases the 'random' technique was used to determine which goods should be requested in a bundle. Each case is labeled with its corresponding CATS legacy suite number; very similar distributions are given similar numbers and identical distributions are given the same number.[L1] Sandholm: Uniform, fixed random with low f ixed = 0, hi f ixed = 1 [L1a] Anderson et al.: Uniform, fixed random with low f ixed = 0, hi f ixed = 1000 [L2] Sandholm: Uniform, linearly random with low linearly = 0, hi linearly = L2a] Anderson et al.: Uniform, linearly random with low linearly = 500, hi linearly = 1500</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_50"><head>[</head><label></label><figDesc>L3] deVries and Vohra: Constant with constant goods = 3, fixed random with low f ixed = 0, hi f ixed = 1 [L4] Sandholm: Decay with α = 0.55, linearly random with low linearly = 0, hi linearly = 1 [L4] deVries and Vohra: Decay with α = 0.55, linearly random with low linearly = 0, hi linearly = 1 [L4a] Anderson et al.: Decay with α = 0.55, linearly random with low linearly = 1, hi linearly = 1000 [L5] Boutilier et al.: Normal with µ goods = 4 and σ goods = 1, normal with µ price = 16 and σ price = 3 [L6] Fujishima et al.: Exponential with q = 5, linearly random with low linearly = 0.5, hi linearly = 1.5 [L6a] Anderson et al.: Exponential with q = 5, linearly random with low linearly = 500, hi linearly = 1500 [L7] Fujishima et al.: Binomial with p = 0.2, linearly random with low linearly = 0.5, hi linearly = 1.5 [L7a] Anderson et al.: Binomial with p = 0.2, linearly random with low linearly = 500, hi linearly = 1500 [L8] deVries and Vohra: Constant with constant goods = 3, quadratic</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_51"><head></head><label></label><figDesc>the WDP, it is well known that problems become harder as the number of goods and bids increases. 10 For this reason, researchers have traditionally reported the performance of their WDP algorithms in terms of the number of bids and goods of the input instances. While it is easy to fix the number of goods, holding the number of bids constant is not as straightforward as it might appear. Most special-purpose algorithms make use of a polynomial-time preprocessing step which removes bids that are strictly dominated by one other bid. More precisely, bid i is dominated by bid j if the goods requested by i are a (non-strict) superset of the goods requested by j, and the price offer of i is smaller than or equal to the price offer of j. (This is similar in flavor to the use of arc-consistency as a preprocessing step for a CSP or weighted CSP problem.) It is thus possible for the size of problems given as input to the WDP algorithm to vary even if all generated instances had the same number of bids.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_52"><head>Figure 7 .Figure 7 .</head><label>77</label><figDesc>13: Non-Dominated Bids vs. Raw Bids many, much more complex preprocessing steps before initiating its own branch-andbound search. Our own experience with algorithms for the WDP has suggested that other polynomial-time preprocessing steps offer much poorer performance in terms of the number of bids discarded in a given amount of time. In any case, the results above suggest that strict domination checking should not be disregarded, since distributions differ substantially in the ratio between the number of non-dominated bids and the raw number of bids. The CATS software has the ability to generate instances for all CATS and legacy distributions with a specified number of non-dominated bids: the software iteratively generates bids and removes dominated bids until the specified target is reached. Observe that if we want to be able to generate any given number of non-dominated bids then we will be unable to use the distributions L1 and L5, because they often fail to generate a target number of non-dominated bids even after millions of bids were created. (This helps explain why L1 and L5 have been found empirically easy by other researchers.)7.4.2 Sampling ParametersIn our original paper on CATS<ref type="bibr" target="#b60">[Leyton-Brown et al., 2000a]</ref>, we suggested default values for the parameters of each generator. These defaults represented reasonable 14: Gross Hardness choices for the parameter values; however, the parameter space is large and the computational characteristics of the different CATS distributions may vary substantially throughout this space. An alternative to the use of default values for each parameter</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_53"><head>Figure 8 .</head><label>8</label><figDesc>in this section help us to understand CASS's performance as the number of bids 2 and goods is varied. Figures 8.1 and 8.2 show CASS's performance on the L6 and L7 distributions. Observe that for L6 runtime appears to scale exponentially in the number of goods (the four plots, representing linear increases in the number of goods, are spaced roughly equally on the log plot); for L7 runtime appears to scale sub-exponentially in the number of goods. For both L6 and L7 runtime clearly scales polynomially in the number of bids, as all the curves are sublinear on 3 shows CASS's anytime performance. Observe that the time it takes CASSto find the optimal solution is nearly of an order of magnitude smaller than the time at which it terminates: this is because proving optimality occupies most of the search.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_54"><head>Figure 8 . 3 :</head><label>83</label><figDesc>CASS Anytime Performance: L6</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_55"><head>FiguresFigure 8 . 7 :</head><label>87</label><figDesc>CASS vs. Bidtree: L4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_56"><head>Figure 8 .Figure 8 . 9 :</head><label>889</label><figDesc>8 shows the mean runtime of CASS and CPLEX on each distribution.Note that the vertical axis uses a logarithmic scale so that all the bars can be seen on CASS vs. CPLEX: first, second and third quartiles the same graph. Judging from this picture CPLEX seems to be a better choice than CASS most of the time. Exceptions are L3 and L7, where CASS does much better than CPLEX, and L2 where the difference is less pronounced.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_57"><head>Figure 8 .</head><label>8</label><figDesc>10: CASS vs. CPLEX: Scatter Plot</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_58"><head>Figure 9 . 1 :</head><label>91</label><figDesc>Four Groups of Features for the WDP</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_59"><head>Figure 9 . 3 :</head><label>93</label><figDesc>Linear Regression: Absolute Error Scatterplot (test data)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_60"><head>Figure 9 . 5 :</head><label>95</label><figDesc>Quadratic Regression: Error Scatterplot (test data)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_61"><head>Figure 9 . 6 :</head><label>96</label><figDesc>Linear Regression: Subset size vs. RMSE.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_62"><head>Figure 9 . 7 :</head><label>97</label><figDesc>Linear Regression: Cost of omission for subset size 7.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_63"><head>Figure 9 . 8 :</head><label>98</label><figDesc>Quadratic Regression: Subset size vs. RMSE.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_64"><head>Figure 9 . 9 :</head><label>99</label><figDesc>Quadratic Regression: Cost of omission for subset size 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_65"><head></head><label></label><figDesc>build regression models for GL and CASS.Figure 10.1 compares the average runtimes of our three algorithms (CPLEX, CASS, GL) to that of the portfolio 1 . As we would expect from the results in Section 8.2, CPLEX would be chosen under</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_66"><head></head><label></label><figDesc>If D j [x] &gt; c(S j+1 )[x], continue.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_67"><head>Fig. 10 .</head><label>10</label><figDesc>4 shows the performance of the smart feature computation discussed in Section 10.3.1, with the upper part of the bar indicating the time spent computing features.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_68"><head></head><label></label><figDesc>Figure 10.4: Smart Features</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_69"><head></head><label></label><figDesc>Figure 10.6: Inducing Harder Distributions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head></head><label></label><figDesc>The space of agent strategies S is the space of all functions mapping from the information available to a probability distribution over slot choices. We denote an element of S as S = Π(s): a distribution over slot choices. Agents are aware of the mechanism and consider it when determining their strategies. Let ϕ ∈ S n denote a set of agent strategies, which we formally call a strategy profile. Let ϕ(i) denote a i 's strategy under strategy profile ϕ, and let {ϕ \ i, S} denote the strategy profile where all agents j = i choose the strategy ϕ(j) and agent a i chooses the strategy S. We can write agent a i 's expected utility under strategy profile ϕ (recall that ϕ(i) is a distribution over slot choices for agent a i , and hence ϕ(i)(s) is the probability that agent a i will choose slot s under strategy profile ϕ):</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head></head><label></label><figDesc>network resource, it is worthwhile to consider various other restrictions on the class of mechanisms. For example, it may or may not be possible to reimburse agents after all agents have chosen a slot, as opposed to doing so after each agent chooses. Also, it may or may not be permissible for f to depend on what slots agents chose, as this would require that information be stored for each agent, and again that billing be deferred until after all agents have selected slots. In some settings it might not be reasonable for the network to give signals to agents; in other cases, it would be possible to give signals but not to record which signals were given to which agents.Also, it might appear that more powerful mechanisms could be designed if prices could be varied arbitrarily, as opposed to our model in which slots must be priced at either m or 0. In fact, since we assume that agents are risk-neutral, agents will be indifferent between any slot priced on the range [0, m] and the same slot made free with an appropriate probability. Furthermore, m can be increased arbitrarily. In the case of risk-averse agents, such 'continuous pricing' would be useful: our results throughout this chapter hold for risk-averse agents if and only if this sort of continuous pricing scheme is used. We have chosen not to emphasize continuous pricing because</figDesc><table>The significance of the time, space and communication complexity of the mechanism 

may also vary depending on the setting. We discuss these and other trade-offs in 

Section 2.7. 

it would be likely to make greater computational and communication demands on the 

network; however, all our results are compatible with such a scheme, and furthermore 

our bounds on q and m (see, e.g, equations (2.7), (2.8), and (2.9)) may be dropped 

in this case. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head></head><label></label><figDesc>Definition 2.4 A distribution d is ideal for p(s) if and only if an equilibrium ϕ whichdeterministically results in distribution d maximizes z(Φ all , ϕ).</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head></head><label></label><figDesc>Since the equilibrium is constant, we can expand z on both sides and simplify toget E[R|Φ, ϕ] &gt; E[R|Φ 1 , ϕ], which implies E[R i |Φ, ϕ] &gt; E[R i |Φ 1 , ϕ]for at least one agent a i . Φ 1 sets values of p, q and m so that for all slots agent a i 's expected utility</figDesc><table>is v(s) − E[R i |Φ 1 , ϕ] = 0. Thus for Φ we have ∀s u i (s) &lt; 0, implying that Φ is 

non-participation-safe, a contradiction. 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>Table 2 .</head><label>2</label><figDesc></figDesc><table>1: Comparison of Φ 1 , Φ 2 , Φ 3 , Φ 4 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head></head><label></label><figDesc>is allocated a good and −t otherwise. Thus, we assume that there are no externalities in agents' valuations and that agents are risk-neutral.b i : T → R + ∪ {0} denotes agent i's strategy, a mapping from i's type τ i to his declaration in the auction. This may be the null declaration 0, indicating that i will not participate in the auction.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11" validated="false"><head></head><label></label><figDesc>Another way of showing that bidding rings are helpful is to demonstrate that bidders prefer a world with bidding rings to a world without. We consider two other settings: an auction with participation revelation in economic environment E s , and an auction with a stochastic number of bidders in E s . First we compare the three environments ex-post, asking which an agent would prefer given knowledge of his own type. (Recall that we have defined an agent's type to include his signal s i about the number of agents in the economic environment.) Second, we compare the environments ex-ante, asking which environment an agent would prefer if he knew the distribution over types but did not know what type he would receive.Theorem 3.15 (ex-post ring) For all τ i ∈ T , for all k ≥ 2, for all n ≥ 2, for all c n,k &gt; 0, agent i obtains greater expected utility by: 1. participating in a bidding ring of size k in E br and following the equilibrium from Theorem 3.10; than by 2. participating in a first-price auction with participation revelation in E s with number of bidders distributed according to p n,k ; or by 3. participating in a first-price auction with a stochastic number of participants in E s with number of bidders distributed according to p n,k .</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12" validated="false"><head></head><label></label><figDesc>1. participating in E br and following the equilibrium from Theorem 3.10; than by 2. participating in a first-price auction with participation revelation in E s with number of bidders distributed according to p; or by 3. participating in a first-price auction with a stochastic number of bidders in E s with number of bidders distributed according to p.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13" validated="false"><head></head><label></label><figDesc>Corollary 3.18 Ex-ante, all bidders prefer the equilibrium from Theorem 3.10 to the equilibrium from Proposition 3.11. Ex-post, bidding ring invitees prefer the equilibrium from Theorem 3.10 to the equilibrium from Proposition 3.11, and singleton bidders are indifferent between the equilibria.Proof. A bidder's expected utility under the equilibrium from Proposition 3.11 (in economic environment E br ) is the same as his expected utility from an auction with participation revelation in economic environment E s with the same distribution over the number of bidders. (This is obvious from the proof of Proposition 3.11.) Thus the result is immediate from Theorem 3.15, Corollary 3.16 and Corollary 3.17.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15" validated="false"><head></head><label></label><figDesc>a subset of the units to specify unnecessary XOR bids. For example, consider an electronics manufacturer auctioning 100 identical TVs and 100 identical VCRs. A retailer who wants to buy 70 TVs and 30 VCRs would be indifferent between all bundles having 70 TVs and 30 VCRs. Rather than having to bid on each of the 100 70 · 100 30 distinct bundles, she would prefer to place the single bid (price, {70 TVs, 30 VCRs}). This can be achieved by generalizing Problem 5.1. Let q(γ) denote the number of units of good γ. Problem 5.3 The multi-unit WDP is the following integer program:</figDesc><table>maximize: 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16" validated="false"><head></head><label></label><figDesc>Some researchers have studied algorithms to approximate the WDP, despite the fact that the WDP cannot be approximated with guarantees. For example, Hoos and</figDesc><table>Boutilier [2000] and Zurel and Nisan [2000] have proposed algorithms with good em-

pirical performance despite their lack of theoretical guarantees. Furthermore others, 
notably Nisan and Ronen [2000] and </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_19" validated="false"><head></head><label></label><figDesc>This chapter presents experimental results for CASS. 1 First, scaling experiments demonstrate that CASS can scale exponentially in the number of goods, but appears to scale subexponentially in the number of bids. Second, CASS's anytime perfor-</figDesc><table>Chapter 8 

Evaluating Combinatorial Auction 

Algorithms 

mance is examined: CASS can find nearly-optimal solutions orders of magnitude 

sooner than it terminates, and can spend considerable time proving optimality after 

finding the optimal solution. Third, CASS is contrasted with the Bidtree algorithm, 

another widely-cited WDP algorithm. Finally, CASS is contrasted with the latest 

version of ILOG's CPLEX software. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_22" validated="false"><head></head><label></label><figDesc>observed that WDP algorithms vary by many orders of magnitude in their running times for different problems of the same size-even for different instances drawn from the same distribution. However, little is known about what causes WDP instances to vary so substantially in their empirical hardness. Understanding what characteristics of data instances are predictive of long running times would be useful for predicting how long an auction will take to clear, tuning data distributions for hardness, constructing algorithm portfolios, designing package bidding rules to reduce the chances of long clearing times and possibly for improving the design of WDP algorithms.We propose a novel experimental approach for predicting the running time of a given algorithm on individual instances of such a problem, drawn from one of many different distributions. Our methodology follows:1. An optimization algorithm is selected.2. A set of problem instance distributions is selected. For each parameter of each distribution a range of acceptable values is established.3. Problem size is defined and a size is chosen. Problem size will be held constant to focus on unknown sources of hardness. 4. A set of polytime-computable, distribution-independent features is selected. 5. To generate instances, a distribution is chosen at random and then the range of acceptable values for each parameter is sampled. This step is repeated until the desired number of problem instances have been generated.6. For each problem instance the running time of the optimization algorithm is determined, and all features are computed. 7. Redundant or uninformative features are eliminated. 8. A function of the features is learned to predict running time (or some other measure of empirical hardness), and prediction error is analyzed. Some sources of empirical hardness in N P-hard problem instances are well understood. Our goal in this chapter is to understand what other features of instances are predictive of hardness so we hold these parameters constant, concentrating on variations in other features. For the WDP, it is known that instances generally become harder as the problem gets larger: i.e., as the number of bids and goods increases. Our goal is to understand what other features of instances are predictive of hardness so we hold these parameters constant, concentrating on variations in other features. As argued in Chapter 7, the removal of dominated bids can have a significant effect. We therefore defined problem size as the pair (number of goods, number of non-dominated bids).In order to learn a model we must first characterize each problem instance with a set of features, obtained using domain knowledge to identify properties of the instance that appear likely to provide useful information about empirical hardness. We only consider features that can be generated from any problem instance, without knowledge of how that instance was constructed. Furthermore we restrict ourselves to those features that are computable in polynomial time, since the computation of the features should scale well as compared to solving the optimization problem. Although features must be manually selected, there are statistical techniques for identifying useless features. Identifying such features is important because highly correlated features can unnecessarily increase the dimensionality of the hypothesis space: this can degrade the performance of some regression algorithms and also makes the resulting formula harder to interpret.For our WDP case study, we determined 35 features which we thought could be relevant to the empirical hardness of the optimization, ranging in their computational complexity from linear to cubic time. After feature selection we were left with 25 features: these are summarized in</figDesc><table>experimental or theoretical approaches: instances are characterized by a large number 

of apparently relevant features, many, highly parameterized distributions exist, there 

is significant variation in edge costs throughout the search tree and it is desirable 

to predict the empirical hardness of individual problem instances. It has often been 

9.2 Building Hardness Models 

9.2.1 Our Methodology 

9.2.2 Problem Size 

9.2.3 Features 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_23" validated="false"><head>Features :</head><label>Features</label><figDesc>20-22. 1 , 2 , ∞ norms of the integer slack vector. 24. Deviation of price per number of goods: stdev(p i /|b i |) 25. Deviation of price per square root of the number of goods: stdev(p i / |b i |).</figDesc><table>Price-Based Features: 

23. Standard deviation of prices among all bids: 
stdev(pi) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_24" validated="false"><head></head><label></label><figDesc>Finally, it would be desirable to include some measure of the size of the(unpruned)    search space. For some problems branching factor and search depth are used; for WDP neither is easily estimated. A related measure is the number of maximal independent sets of BG, which corresponds to the number of feasible solutions. However, this counting problem is hard, and to our knowledge does not have a polynomial-time approximation.The third group of features is calculated from the solution vector of the LP relaxation linear programming relaxation of the WDP. We calculate the integer slack vector by replacing each component x i with min(|x i |, |1 − x i |). These features appeared particularly useful both because the slack gives insight into the quality of CPLEX's initial solution and because CPLEX uses LP as its search heuristic. Originally we also included median integer slack, but excluded the feature when we found that it was always zero.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_25" validated="false"><head></head><label></label><figDesc>). The second data set with 1000 bids and 144 goods had a total of 2080 instances; the third data set with 2000 bids and 64 goods contained 1964 instances. Where we present results for only a single data set, the first data set was always used. All of our runtime data was collected by running CPLEX 7.1 with preprocessing turned off.2  We used a cluster of 4 machines, each of which had 8 Pentium III Xeon 550 MHz processors and 4G RAM and was running Linux 2.2.12. Since many of the instances turned out to be exceptionally hard, we stopped CPLEX after it had expanded 130,000 nodes (reaching this point took between 2 hours and 22 hours, averaging 9 hours). Overall, solution times varied from as little as 0.01 seconds to as much as 22 hours. We estimate that we consumed approximately 3 years of CPU time collecting this data. We also computed our 35 features for each instance. (Recall that feature selection took place after all instances had been generated.) Each feature in each data set was normalized to have a mean of 0 and a standard deviation of 1. Regression was performed using the open-source R package (see www.r-project.org). we wanted to learn a continuous-valued model of the features, we used statistical regression techniques.3  We chose the logarithm of CPLEX running time as our response variable-the value to be predicted-rather than absolute running time, because we wanted the model to be penalized according to whether the predicted and actual values had the same order of magnitude. If we had tried to predict absolute running times then the model would have been penalized very little for dramatically mispredicting the running time of very easy instances, and would have been penalized heavily for slightly mispredicting the running time of the hardest instances. We performed regression on a training set consisting of 80% of a dataset, and then tested our model on the remaining 20% to evaluate its ability to generalize to unseen data.</figDesc><table>Since </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_26" validated="false"><head></head><label></label><figDesc>Table 9.1: Linear Regression: Errors and Adjusted R 2</figDesc><table>Data point 
Mean Abs Err RMSE Adj-R 2 
1000 Bids/256 Goods 
0.399 
0.543 
0.938 
1000 Bids/144 Goods 
0.437 
0.579 
0.909 
2000 Bids/64 Goods 
0.254 
0.368 
0.912 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_27" validated="false"><head></head><label></label><figDesc>Table 9.2: Quadratic Regression: Errors and Adjusted R 2</figDesc><table>Data point 
Mean Abs. Err. RMSE 
R 2 
1000 Bids/256 Goods 
0.183 
0.297 0.987 
1000 Bids/144 Goods 
0.272 
0.475 0.974 
2000 Bids/64 Goods 
0.163 
0.272 0.981 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_30" validated="false"><head></head><label></label><figDesc>easy, since more constraints imply a smaller search space; however, our experimental results show that CPLEX takes a long time on such problems. It seems that CPLEX's calculation of the LP bound at each node becomes much more expensive when the number of constraints in the LP increases substantially, and this cost overwhelms the savings that come from searching in a smaller space. Some other important features are intuitively similar to BG edge density. For example, the node degree statistics describe the max, min, average and standard deviation of the number of constraints in which each variable is involved; they indicate how quickly the search space can be expected to narrow as variables are given values (i.e., as bids are assigned to the allocation). Similarly, the clustering coefficient features measure the extent to which</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_31" validated="false"><head>Table 10 .</head><label>10</label><figDesc>1 shows the effect of our response variable transformations on average</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_32" validated="false"><head>Table 10 .1: Portfolio Results</head><label>10</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_33" validated="false"><head></head><label></label><figDesc>In this case it is difficult to learn a single H p . A good solution is to factor h p as h g · h p i , where h g is a hardness model using only the choice of instance generator as a feature, and h p i is a hardness model in instance generator i's parameter space. Likewise, instead of using a single feature-space hardness model H f , we can train a separate model for each generator H f,i and normalize each to a pdf h f,i . 5 The goal is now to generate instances from the distribution D g · D p i · h f,i , which can be done as follows: 1. For every instance generator i, create a hardness model H p i with features − → p i , and normalize it to create a pdf, h p i . 2. Construct a distribution over instance generators h g , where the probability of each generator i is proportional to the average hardness of instances generated by i.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_34" validated="false"><head></head><label></label><figDesc>aligned, an auction with a signal, 50 allocation, 98, 104 anytime algorithm, 103 arbitrary complementarities, 132 auctions, 96 first-price, 44 classical, 46 with participation revelation, 48 with stochastic number of bidders, 47 second-price, 43 average percent suboptimal, 176 bid graph, 159 bid-good graph, 159 bids, 98, 117 Bidtree, 147-148 bins, 105 boosting, 171, 186 branch-and-bound search, 104 bulletin board system, 28 CABOB, 149 caching, 107 CAMUS, 110-114 CASS, 103-110, 145-174 CATS, 121, 143, 149, 154, 181 Combinatorial auctions, 97 complementarity, 96 congestion games, 74, 78 context-specific independence, 74 cost of omission, 164 CPLEX, 144, 148-151, 160, 161, 172, 174 dominated bids, 104, 111, 141, 158 dummy goods, 99 edge function, 76 empirical hardness, 154 FAA take-off and landing rights auction, 135 FCC spectrum auction, 97, 130 focused loading, 12 focused-loading equilibrium, 21 GL, 172, 174</figDesc><table>absolute error, 176 

agents, 1 

website, 121 

cheap talk, 28 

classification, 184 

</table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">That is, encapsulated blocks of data and code common to object-oriented programming languages such as C++ and Java.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">A number of proposals for usage-based pricing of bandwidth suggest charging according to the "effective" bandwidth consumed by an operator. Roughly, the effective bandwidth of a connection</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">We redefine q as the expected number of "potentially free" slots; the same redefinition is required for Section 2.6.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">This note is intended for readers familiar with game theory. Consider the space of all functions H : N → {1, . . . , t} mapping from agent names to suggested slots. Let P rob be a probability distribution over all functions h ∈ H that give rise to the agent distribution d * . If signals are assigned based on an h drawn from P rob then ϕ 3 can easily be formulated as a correlated equilibrium. However, for ease of exposition and to emphasize the sequential assignment of agent signals for implementation reasons, we do not make further use of this formulation.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">Another disadvantage is that an agent could register from one computer, receive a slot assignment, use the network from a second computer and be denied a chance for a free slot because the</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Of course, this is in addition to the sense in which all auctions are asymmetric: agents have different valuations for the good.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">We can use 2 rather than −∞ as the lower limit of the sum in Equation (3.4) because p(k) has support which is a subset of {2, 3, . . .}. While Z (F, v i , p) is undefined when F (v i ) = 0, this technicality is of no practical interest.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">Observe that in this case, the n announced by the auctioneer will include the d additional agents who deviate from the bidding ring.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">We note in passing that a natural extension to local-effect games is the case where the set of actions available to each agent i is A i ⊆ A.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Except for completely disconnected graphs, which are trivially congestion games and are handled in Theorem 4.10.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">Observe that Lemma 4.7 (like Lemmas 4.8 and 4.9) speak about classes of games-i.e., localeffect game structures for which the number of agents is unspecified. This is because there may exist particular numbers of agents for which the contradictions in the lemmas do not obtain for a given graph structure and given node/edge functions. For example, if the game is a B-LEG and all edge functions are linear for integers between 0 and some value x, but nonlinear overall, then potential functions nonetheless exist for all games in the class which have no more than x agents.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">Recall that an independent set is a subset of the nodes in a graph with the property that no two nodes in the subset are neighbors.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">So far, we have only experimented with B-LEGs because undirected local-effect graphs are easier to specify and generate, and because we consider them to be among the most natural LEGs. We expect to experiment with other classes of LEGs in our future work.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">In fact, this case can be extended to the case where goods are placed around a ring and each bid requests only consecutive goods. Consider adding each bid in turn (and removing all other bids that conflict with this bid): the remaining subproblem to be solved has only bids that request consecutive goods given a one-dimensional ordering, because the selection of the first bid breaks the ring.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">We must, however, store g(π) in the hash table along with c(g(π)), so that we can detect cache collisions.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">In fact, this bound can be tightened. Let G = g(π 2 ) \ g(π 1 ) ∩ g(π 2 ). We can actually backtrack whenever p(π 2 ) + c(g(π 1 )) − (π 2 , G) ≤ p(π best ), where (π 2 , G) is a lower bound on the revenue that could be achieved from the goods G given the allocation π. A simple implementation of () would be the sum of the singleton bids for each of the goods in G.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Electric power distribution is a frequently discussed real world problem which seems superficially similar to the problems discussed here. However, many of the complementarities in this domain arise from physical laws governing power flow in a network. Consideration of these laws becomes very complex in networks of interesting size. Also, because these laws are taken into account during the construction of power networks, the networks themselves are difficult to model using randomly generated graphs. For these reasons, we do not attempt to model this domain.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6">This assumption would be violated, for example, if some bidders wanted to secure the right to broadcast at the same frequency in several adjacent areas.7 To see why this cannot be modeled as a multi-unit CA, consider an auction for three regions with two units each, and three bidders each wanting one unit of two goods. In the optimal allocation, b 1 gets 1 unit of g 1 and 1 unit of g 2 , b 2 gets 1 unit of g 2 and 1 unit of g 3 , and b 3 gets 1 unit of g 3 and 1 unit of g 1 . In this example there is no way of assigning frequencies to the units so that each bidder gets the same frequency in both regions.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">We do not present experimental results for CAMUS here, since Chapter 7 focused on single-unit distributions, and Chapter 9 will go on to consider only the single-unit WDP. For an experimental evaluation of CAMUS, please see<ref type="bibr" target="#b63">[Leyton-Brown et al., 2000b]</ref>.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Unlike the data in Section 8.2 and in later chapters, the experiments in this section consider raw numbers of bids rather than numbers of undominated bids.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The paths distribution is missing from this chapter and the next because of a technical glitch. It will appear in the final version of this thesis.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Note the change of scale on the graph, and the repeated CPLEX bar</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Although it is not presented in this thesis, we have had success applying the same techniques to the satisfiability problem, even placing second and third in several categories in the 2003 International SAT Competition.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">. Using the second training set, learn models D 1 . . . D l−1 , with D k predicting the difference in runtime between the algorithms selected by M k and M k+1 based on S k . The second set must be used to avoid training the difference models on data to which the runtime models were fit.Given an instance x, the portfolio now works as follows: 4. For j = 1 to l3  We assume here that features will have low runtime variance. We have found this assumption to hold for the WDP. If feature runtime variance makes it difficult to partition the features into time complexity sets, smart feature computation is more difficult.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">In true rejection sampling step 2 would generate a single instance that would be then accepted or rejected in step 3. Our technique approximates this process, but doesn't require us to normalize H f and allows us to output an instance after generating a constant number of samples.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">goods, 98, 117 ideal, 20 indicator variable, 98 integer slack vector, 160 job-shop scheduling, 136 knockout procedure, 43 legacy distributions, 137 linear programming relaxation, 101, 160 local-effect game, 75, 76 bidirectional, 77 class of, 77 uniform, 77 location problem, 75 Markov decision processes, 185 multiagent systems, 1 competitive, 2 cooperative, 1 myopic best response, 90 Nash equilibrium, 16 strict, 17 weak, 17 network bandwidth allocation, 11, 126 node function, 76 objects, 1 optimality, mechanism-equilibrium pair, 21 c-optimality, 21 parallel execution, 183 pareto-optimality, 3 participation-safe, 17 paths in space, 122 percent optimal, 176 portfolio, 184 potential function, 78-80, 86 potential functions, 75 potential games, 75 price offer, 98 proximity in space, 127 pruning, 104 pure strategy equilibria, 74 railroad auctions, 97, 123 real estate auctions, 127 regression, 161 linear, 161 MARS, 164 quadratic, 164 regular asymmetric auction, 50 rejection sampling, 179 relative error, 176 resources, 2 revenue maximization, 3 role formation game, 76 singleton bids, 111 social-welfare maximization, 3 subbins, 111 subset selection, 165 substitutability, 97</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">superlinear summation functions, 19 symmetry, 74 temporal matching, 134 units, 100 upper bound, 106, 113 Vickrey-Clarke-Groves mechanism, 102 weighted set-packing, 100 winner determination problem, 98 ascending auction mechanisms for, 102 economic mechanisms for approximate, 102 multi-unit, 100 single-unit, 98 single-unit with XOR constraints, 99 tractable subcases, 101 XOR bids, 99, 118, 120</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3.1">Smart Feature Computation</head><p>Feature values must be computed before the portfolio can choose an algorithm to run.</p><p>We expect that portfolios will be most useful when they combine several exponentialtime algorithms having high runtime variance, and that fast polynomial-time features should be sufficient for most models. Nevertheless, on some instances the computation of individual features may take substantially longer than one or even all algorithms would take to run. In such cases it would be desirable to perform algorithm selection without spending as much time computing features, even at the expense of some accuracy in choosing the fastest algorithm. In order to achieve this, we partition the features into sets ordered by time complexity, S 1 , . . . , S l , with i &gt; j implying that each feature in S i takes significantly longer to compute than each feature in S j . 3 The portfolio can start by computing the easiest features, and iteratively compute the next set only if the expected benefit to selection exceeds the cost of computation.</p><p>More precisely:</p><p>1. For each set S j learn or provide a model c(S j ) that estimates time required to compute it. Often, this could be a simple average time scaled by input size. for that portfolio, common in D, or both. More precisely, the importance of a region of problem space is proportional to the amount of time the current portfolio spends working on instances in that region. This is analogous to the principle from boosting that new classifiers should be trained on instances that are hard for the existing ensemble, in the proportion that they occur in the original training set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.4.1">Inducing Hard Distributions</head><p>Let H f be a model of portfolio runtime based on instance features, constructed as the minimum of the models that constitute the portfolio. By normalizing, we can reinterpret this model as a density function h f . By the argument above, we should generate instances from the product of this distribution and our original distribution,</p><p>Dh f ). However, it is problematic to sample from D · h f : D may be non-analytic (an instance generator), while h f depends on features and so can only be evaluated after an instance has been created.</p><p>One way to sample from D ·h f is rejection sampling <ref type="bibr" target="#b19">[Doucet et al., 2001]</ref>: generate problems from D and keep them with probability proportional to h f . This method works best when another distribution is available to guide the sampling process toward hard instances. Test distributions usually have some tunable parameters − → p , and although the hardness of instances generated with the same parameter values can vary widely, − → p will often be somewhat predictive of hardness. We can generate instances from D · h f in the following way: 4 1. Create a new hardness model H p , trained using only − → p as features, and normalize it so that it can be used as a pdf, h p .</p><p>2. Generate a large number of instances from D · h p . Observe that we can sample from this distribution: h p is a polynomial, so we can sample from it directly; this gives us parameter values that we can pass to the generator.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Generating satisfiable problem instances</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Achlioptas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">P</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>Kautz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Selman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>AAAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Integer programming for combinatorial auction winner determination</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tenhunen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ygge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ICMAS</title>
		<imprint>
			<biblScope unit="page" from="39" to="46" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Synergies in wireless telephony: Evidence from the broadband PCS auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ausubel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cramption</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcafee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcmillan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economics and Management Strategy</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="497" to="527" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Allocating uncertain and unresponsive resources: An experimental approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ledyard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Porter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RAND Journal of Economics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1" to="23" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Approximating game-theoretic optimal strategies for full-scale poker</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Billings</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Burch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Davidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Holte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schaeffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Schauenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Szafron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Impact of the Internet on core switching network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Blair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ENPW&apos;98. Les Arcs</title>
		<meeting>of ENPW&apos;98. Les Arcs<address><addrLine>France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A continuation method for Nash equilibria in structured games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Shelton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Planning, learning and coordination in multiagent decision processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Boutilier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theoretical Aspects of Rationality and Knowledge</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="195" to="201" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Sequential auctions for the allocation of resources with complementarities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Boutilier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Goldszmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sabata</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note>IJCAI</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A binary conflict ascending price (BICAP) mechanism for the decentralized allocation of the right to use railroad tracks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Brewer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Plott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Industrial Organization</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="857" to="886" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Mutually destructive bidding: The FCC auction design problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bykowsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Cull</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ledyard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report Social Science Working Paper 916</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cats Website</surname></persName>
		</author>
		<ptr target="http://robotics.stanford.edu/CATS" />
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Where the Really Hard Problems Are</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cheeseman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kanefsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">M</forename><surname>Taylor</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note type="report_type">IJCAI-91</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Complexity Results about Nash Equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Conitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
		<idno>CM-CS-02-135). CMU</idno>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Cartel enforcement with uncertainty about costs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cramton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Palfrey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Economic Review</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="17" to="47" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Strategic information transmission</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Crawford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sobel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Econometrica</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1431" to="1451" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Combinatorial auctions: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>De Vries</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Vohra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFORMS Journal on Computing</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">15</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">A new and improved design for multi-object iterative auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Demartini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kwasnica</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ledyard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Porter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<pubPlace>Pasadena</pubPlace>
		</imprint>
		<respStmt>
			<orgName>California Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report Social Science Working Paper 1054</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Analysis and simulation of a fair queuing algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Demers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of internetworking research and experience</title>
		<imprint>
			<biblScope unit="page" from="3" to="26" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Sequential monte carlo methods in practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Doucet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>De Freitas</surname></persName>
		</author>
		<editor>N., &amp; (ed.), N. G.</editor>
		<imprint>
			<date type="published" when="2001" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Asymmetric behavior and collusive behavior in auction markets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Feinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Block</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Nold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Economic Review</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="441" to="460" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">TCP and explicit congestion notification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="10" to="23" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Random early detection gateways for congestion avoidance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="397" to="413" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Multivariate adaptive regression splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Statistics</title>
		<imprint>
			<biblScope unit="page">19</biblScope>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Game theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fudenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tirole</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Fujishima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>IJ-CAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Resource pricing and the evolution of congestion control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gibbens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Kelly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="1969" to="1985" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">The use of games to assess user strategies for differential quality of service in the internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gibbens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Key</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<pubPlace>Microsoft Research, Cambridge</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Algorithm portfolios</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Selman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">126</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="43" to="62" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Problem structure in the presence of perturbations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">P</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Selman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>AAAI/IAAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Optimal solutions for multi-unit combinatorial auctions: Branch and bound heuristics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gonen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lehmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Conference on Electronic Commerce</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Linear programming helps solving large multi-unit combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gonen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lehmann</surname></persName>
		</author>
		<idno>TR-2001-8</idno>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
		<respStmt>
			<orgName>Leibniz Center for Research in Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Collusive bidder behavior at single-object secondprice and English auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Marshall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Political Economy</title>
		<imprint>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="page" from="579" to="599" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Differential payments within a bidder coalition and the Shapley value</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Marshall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-F</forename><surname>Richard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Economic Review</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="493" to="510" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">The allocation of scarce resources: Experimental economics and the problem of allocating airport slots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Grether</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Isaac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Plott</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Westview Press</publisher>
			<pubPlace>Boulder, CO</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Parr</surname></persName>
		</author>
		<title level="m">Multiagent planning with factored MDPs. 14th Neural Information Processing Systems (NIPS-14)</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="1523" to="1530" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Canada</forename><surname>Vancouver</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Equilibrium bid functions for auctions with an uncertain number of bidders</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Harstad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Economic Letters</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="35" to="40" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Elements of statistical learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hastie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tibshirani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Friedman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Collusion in auctions. Annales d&apos;Économie et de Statistique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hendricks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Porter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="216" to="229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Combinatorial auctions, knapsack problems, and hill-climbing search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Holte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Canadian Conference on AI</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Solving combinatorial auctions using stochastic local search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Boutilier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 17th national conference on artificial intelligence</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="22" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Horvitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ruan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kautz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Selman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chickering</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">A Bayesian approach to tackling hard computational problems</title>
		<imprint>
			<publisher>UAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Stability in competition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hotelling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Economic Journal</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="41" to="57" />
			<date type="published" when="1929" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">On the sensitivity of incremental algorithms for combinatorial auctions. UCLA CS Tech</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kastner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Potkonjak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Graphical models for game theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kearns</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Littman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Singh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>UAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">Efficient nash computation in large population games with bounded influence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kearns</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Mansour</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>UAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Differential QoS and pricing in networks: Where flow control meets game theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Key</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mcauley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEE Proc Software</title>
		<imprint>
			<biblScope unit="volume">146</biblScope>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Wrappers for feature subset selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kohavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>John</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence Journal, special issue on relevance</title>
		<imprint>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="273" to="324" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Multi-agent influence diagrams for representing and solving games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Milch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Complexity analysis of admissible heuristic search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Korf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Reid</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>AAAI-98</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">Algorithm selection using reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lagoudakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Littman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">Learning to select branching rules in the DPLL procedure for satisfiability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lagoudakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Littman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Designing organizations for trading pollution rights</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ledyard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Szakaly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economic Behavior and Organization</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="167" to="196" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Experiments testing multiobject allocation mechanisms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">O</forename><surname>Ledyard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rangel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economics &amp; Management Strategy</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="639" to="675" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Truth revalation in rapid, approximately efficient combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lehmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>O&amp;apos;callaghan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Conference on Electronic Commerce</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Boosting as a metaphor for algorithm design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nudelman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcfadden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note type="report_type">Constraint Programming</note>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">A portfolio approach to algorithm selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nudelman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcfadden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">Learning the empirical hardness of optimization problems: The case of combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nudelman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>CP</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title level="m" type="main">Towards a universal test suite for combinatorial auction algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pearson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>ACM EC</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Smoothing out focused demand for network resources</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Venkataraman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Prabhakar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Electronic Commerce</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>short paper</note>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Incentive mechanisms for smoothing out a focused demand for network resources</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Venkataraman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Prabhakar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Communications</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="237" to="250" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">An algorithm for multiunit combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of AAAI-00</title>
		<meeting>AAAI-00</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Bidding clubs: institutionalized collusion in auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Conference on Electronic Commerce</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Bidding clubs in firstprice auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 19th National Conference on Artificial Intelligence</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Local-effect games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<monogr>
		<title level="m" type="main">Branch and bound algorithm selection by performance prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lobjois</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lemaître</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>AAAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Pricing the internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mackie-Mason</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Varian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Public access to the internet</title>
		<editor>B. Kahin and J. Keller</editor>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Collusion in second-price auctions with heterogeneous bidders</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Mailath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Zemsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Games and Economic Behavior</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="467" to="486" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title level="m" type="main">Microeconomic theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mas-Colell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Whinston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Green</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Oxford University Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Auctions with a stochastic number of bidders</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcafee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcmillan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economic Theory</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="1" to="19" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Bidding rings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcafee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcmillan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Economic Review</title>
		<imprint>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="page" from="579" to="599" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<monogr>
		<title level="m" type="main">Putting auction theory to work: The simultaneous ascending auction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Milgrom</surname></persName>
		</author>
		<idno>98-0002</idno>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
		<respStmt>
			<orgName>Department of Economics, Stanford University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Pricing policies in selected European telephone systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 6th Conference on Telecommunications Policy Research</title>
		<meeting>6th Conference on Telecommunications Policy Research</meeting>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="page" from="437" to="475" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Determining computational complexity for characteristic &apos;phase transitions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Monasson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zecchina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Selman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Troyansky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="page">400</biblScope>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Potential games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Monderer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Shapley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Games and Economic Behavior</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="124" to="143" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Monderer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Optimal Auctions Revisited. Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">120</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="42" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Mura</surname></persName>
		</author>
		<title level="m">Game networks. UAI</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Equilibrium points in n-person games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nash</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the National Academy of Sciences of the United States of America</title>
		<meeting>the National Academy of Sciences of the United States of America</meeting>
		<imprint>
			<date type="published" when="1950" />
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="48" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<monogr>
		<title level="m" type="main">Integer and combinatorial optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Nemhauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>Wiley</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<title level="m" type="main">Bidding and allocation in combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Nisan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>ACM Conference on Electronic Commerce</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<monogr>
		<title level="m" type="main">Computationally feasible VCG mechanisms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Nisan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ronen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>ACM Conference on Electronic Commerce</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<monogr>
		<title level="m" type="main">A modest proposal for preventing internet congestion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Odlyzko</surname></persName>
		</author>
		<idno>TR 97.35.1</idno>
		<imprint>
			<date type="published" when="1997" />
			<publisher>AT&amp;T Research</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Equilibrium in Hotelling&apos;s model of competition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Osborne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Pitchik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Econometrica</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="911" to="922" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<monogr>
		<title level="m" type="main">A course in game theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Osborne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rubinstein</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<monogr>
		<title level="m" type="main">Approximate fairness through differential dropping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Breslau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Prabhakar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>Submitted</note>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">CHOKe: A stateless active queue management scheme for approximating fair bandwidth allocation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Prabhakar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Psounis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="942" to="951" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<monogr>
		<title level="m" type="main">iBundle: An efficient ascending price bundle auction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Parkes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>ACM Conference on Electronic Commerce</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">EPA&apos;s new emissions trading mechanism: A laboratory evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Plott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Cason</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Environmental Economics and Management</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="133" to="160" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<analytic>
		<title level="a" type="main">Real estate auctions: A survey of theory and practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Quan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Real Estate Finance and Economics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="23" to="49" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">Cotenancy and competition in an experimental auction market for natural gas pipeline networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rassenti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Economic Theory</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="41" to="65" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">A combinatorial auction mechanism for airport time slot allocation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rassenti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bulfin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell Journal of Economics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="402" to="417" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Computing equilibrium strategies in infinite games of incomplete information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Reeves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wellman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fifth Workshop on Game Theoretic and Decision Theoretic Agents at the 2nd Conference on Autonomous Agents and Multi-Agent Systems</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">The algorithm selection problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Rice</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in Computers</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="65" to="118" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">Optimal auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Riley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Samuelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Economic Review</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="page" from="381" to="392" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Collusion and the choice of auction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Robinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rand Journal of Economics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="141" to="145" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">A class of games possessing pure-strategy Nash equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rosenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Game Theory</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="65" to="67" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Computationally manageable combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rothkopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pekeč</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Harstad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1131" to="1147" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<monogr>
		<title level="m" type="main">Bounding the inefficiency of equilibria in nonatomic congestion games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roughgarden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tardos</surname></persName>
		</author>
		<idno>TR2002-1866</idno>
		<imprint>
			<date type="published" when="2001" />
			<pubPlace>Cornell, Ithaca</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b100">
	<monogr>
		<title level="m" type="main">Restart policies with dependence among runs: A dynamic programming approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ruan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Horvitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kautz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>CP</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<monogr>
		<title level="m" type="main">Market-based control: A paradigm for distributed resource allocation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename><surname>Clearwater</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>World Scientific</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<monogr>
		<title level="m" type="main">An algorithm for optimal winner determination in combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<monogr>
		<title level="m" type="main">Improved algorithms for optimal winner determination in combinatorial auctions and generalizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Suri</surname></persName>
		</author>
		<idno>AAAI-00</idno>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<analytic>
		<title level="a" type="main">CABOB: A fast optimal algorithm for combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Suri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gilpin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<analytic>
		<title level="a" type="main">An implementation of the contract net protocol based on marginal cost calculations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sanholm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of AAAI-93</title>
		<meeting>AAAI-93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="256" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">The strength of weak learnability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Schapire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="197" to="227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b107">
	<monogr>
		<title level="m" type="main">The exponentiated subgradient algorithm for heuristic boolean programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schuurmans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Southey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Holte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note type="report_type">IJCAI-01</note>
</biblStruct>

<biblStruct xml:id="b108">
	<analytic>
		<title level="a" type="main">Generating hard satisfiability problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Selman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">G</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">J</forename><surname>Levesque</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="17" to="29" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<analytic>
		<title level="a" type="main">Making greed work in networks: A game-theoretic analysis of switch service disciplines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="819" to="831" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b110">
	<monogr>
		<title level="m" type="main">Backbones in optimization and approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Slaney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Walsh</surname></persName>
		</author>
		<idno>IJCAI- 01</idno>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b111">
	<analytic>
		<title level="a" type="main">Usage-based charging using effective bandwidths: studies and reality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Songhurst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Stamoulis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stoer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Teletraffic Congress</title>
		<meeting>the International Teletraffic Congress</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page">16</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b112">
	<analytic>
		<title level="a" type="main">Some tractable combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of AAAI-2000</title>
		<meeting>AAAI-2000</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b113">
	<analytic>
		<title level="a" type="main">Economic mechanism design for computerized agents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">R</forename><surname>Varian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Usenix Conference on Electronic Commerce</title>
		<meeting>the First Usenix Conference on Electronic Commerce</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b114">
	<monogr>
		<title level="m" type="main">Multi-agent algorithms for solving graphical games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Vickrey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>AAAI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b115">
	<analytic>
		<title level="a" type="main">Cartel stability in sealed bid second price auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Von Ungern-Sternberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Industrial Economics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="351" to="358" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b116">
	<analytic>
		<title level="a" type="main">A market-oriented programming environment and its application to distributed multicommodity flow problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wellman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="23" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b117">
	<analytic>
		<title level="a" type="main">The 2001 trading agent competition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wellman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Greenwald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Stone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wurman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronic Markets</title>
		<imprint>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">13</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b118">
	<analytic>
		<title level="a" type="main">Auction protocols for distributed scheduling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wellman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wurman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Walsh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mackie-Mason</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Games and Economic Behavior</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b119">
	<monogr>
		<title level="m" type="main">State-space search: Algorithms, complexity, extensions, and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b120">
	<analytic>
		<title level="a" type="main">An efficient approximate allocation algorithm for combinatorial auctions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zurel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Nisan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Conference on Electronic Commerce</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
