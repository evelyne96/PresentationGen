<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/sda1/Dissertation/grobid/grobid-0.5.6/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Scaling Up Game Theory: Representation and Reasoning with Action Graph Games</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Leyton-Brown</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Albert</forename><forename type="middle">Xin</forename><surname>Jiang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">R M</forename><surname>Thompson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Avi</forename><surname>Pfeffer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Damien</forename><surname>Bargiacchi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Wright</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Navin</forename><forename type="middle">A R</forename><surname>Bhat</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Albert</forename><forename type="middle">Xin</forename><surname>Jiang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Computer Science University of British Columbia</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Scaling Up Game Theory: Representation and Reasoning with Action Graph Games</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.5.6" ident="GROBID" when="2019-12-23T23:48+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>This talk is primarily based on papers with:</head><p>and a joint paper [GEB, to appear 2010]    and also touches on more recent joint work with</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>graph structure independent of # agents overlapping action sets context-specific independence without strict independence n vendors sell either ice cream or strawberries at one of four stations along a beach n I ice cream (I) vendors; -n S strawberry (S) vendors; -n W can sell I/S, but only on the west side.</p><p>competition between nearby sellers of same type; synergy between nearby different types " How many jobs prefer workers with this training, and how desirable are the jobs? " How many other jobs are willing to take such workers as a second choice, and how good are these jobs?</p><p>" Employers will take workers who are overqualified, but only by one degree. " They will also interchange similar degrees, but only at the same level.</p><p>" How many other graduates want the same jobs? The Coffee Shop Problem " Now the red node has only three incoming edges:</p><p>" itself, the blue function node and the orange function node " so, the action-graph now has in-degree three " Size of representation is now O(N 3 )</p><p>6 £ 5 Coffee Shop Problem: projected action graph at the red node</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example: Parallel Edges</head><p>Based on <ref type="bibr">[Thompson, Jiang &amp; LB, 2007]</ref>; inspired by <ref type="bibr">[Odlyzko, 1998]</ref> " Network with one source, one sink, two parallel edges " both edges offer identical speed " one is free, one costs $1 " latency is an additive function of the number of users on an edge " Two classes of users " 18 users pay $0.10/unit of delay " 2 users pay $1.00/unit of delay " Which edge should users choose? " Example scales to longer paths " not a congestion game because of player-specific utility Further Representational Results " Without loss of compactness, AGGs can also encode:</p><p>" Graphical games (AGG-;) " Symmetric games (AGG-;) " Anonymous games <ref type="bibr">(AGG-FN)</ref> " One other extension to AGGs: explicit additive structure " Enables compact encoding of still other game classes:</p><p>" Congestion games (AGG-FNA) " Polymatrix games (AGG-FNA) " Local-Effect games <ref type="bibr">(AGG-FNA)</ref> Conclusion: AGGs compactly encode all major compact classes of simultaneous-move games, and also many new games that are compact in none of these representations. " then add agents one by one:</p><p>" C k : the set of configurations that can be built by adding any action from the support of player k's mixed strategy to any configuration from C k-1 " .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computing with AGGs: Complexity</head><p>" Complexity of our approach:</p><p>" Exponential speedup vs. standard approach:</p><p>In AGG-FNs, players are no longer guaranteed to affect c independently " but the DP algorithm still works when function nodes can be expressed using some commutative, associative operator is an inner-loop problem in many game-theoretic algorithms: • Best Response (e.g., for multiagent reinforcement learning) • Govindan-Wilson Algorithm (Nash equilibrium) • Simplicial Subdivision Algorithm (Nash equilibrium) • Papadimitriou's Algorithm (correlated Nash equilibrium) • Turocy's Path Tracing Algorithm (quantal response equilibrium) • Predicted Action Distributions under Level-k; Cognitive Hierarchy Because we compute exactly, our expected utility algorithm yields an exponential speedup in every one of these algorithms,</p><p>(1) Computing Pure-Strategy Equilibrium " Pure Nash equilibrium is often a more interesting solution concept than mixed Nash equilibrium " It also presents a very computationally different problem " PSNE in normal form admits a very simple polytime algorithm " just check every action profile " For AGG-;s the representation can be exponentially smaller " thus, the same algorithm is exponential time Theorem (Conitzer, personal communication; also proven independently in <ref type="bibr">(Daskalakis et al. 2008)</ref>): The problem of determining whether a pure Nash equilibrium exists in an AGG-; is NP-complete, even when the AGG-; is symmetric and has max in-degree of three.</p><p>(1) Computing PSNEs in AGG-;s <ref type="bibr">[Jiang &amp; LB, 2007]</ref> We propose a message passing algorithm:</p><p>partition action graph into subgraphs (via tree decomposition) construct equilibria of the game from equilibria of games played on subgraphs</p><p>This algorithm finds PSNE in polynomial time for every symmetric AGG-; that has bounded treewidth.</p><p>" it can also be applied to other bounded-treewidth settings</p><p>• Generalizes earlier algorithms finding pure equilibria in graphical games <ref type="bibr">[Gottlob, Greco, &amp; Scarcello 2003;</ref><ref type="bibr">Daskalakis &amp; Papadimitriou 2006]</ref> finding pure equilibria in simple congestion games <ref type="bibr">[Ieong, McGrew, Nudelman, Shoham, &amp; Sun 2005]</ref> (2) Sponsored Search Auctions <ref type="bibr">[Thompson &amp; LB, 2008;</ref><ref type="bibr">2009]</ref> " Position auctions are used to sell $10Bs of keyword ads " Some theoretical analysis, but based on strong assumptions " Unknown how different auctions compare in more general settings </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>•</head><label></label><figDesc>set of players: want to open coffee shops • actions: choose a location for your shop, or choose not to enter the market • utility: profitability of a location some locations might have more customers, and so might be better ex ante utility also depends on the number of other players who choose the same or an</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>"</head><label></label><figDesc>AGG-;s are more compact than the normal form when the game exhibits either or both of the following properties: 1. Context-Specific Independence: " pairs of agents can choose actions that are not neighbors in the action graph 2. Anonymity: " multiple action profiles yield the same configuration When max in-degree I is bounded by a constant: " polynomial size: O(|A max |n I ) " in contrast, size of normal form is O(n|A max | n ) The Coffee Shop Problem Revisited " What if utility also depends on total # shops? " Now action graph has in-degree |A| " NF &amp; Graphical Game representations: O(|A| N ) " AGG-; representation: O(N |A| ) " when |A| is held constant, the AGG-; representation is polynomial in N The "configuration" of a function node p is a (given) function of the configuration of its neighbors: c[p] = f p (c[º(p)]) " Coffee-shop example: for each action node s, introduce: " a function node with adjacent actions as neighbors " c[p' s ] = total number of shops in surrounding nodes " similarly, a function node with non-adjacent actions as neighbors 6 £ 5 Coffee Shop Problem: function nodes for the red node</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Expected utility of agent i for playing (pure) action a i , if other agents play according to mixed-strategy profile s "i : is an inner-loop problem in many game-theoretic algorithms: • Best Response (e.g., for multiagent reinforcement learning) • Govindan-Wilson Algorithm (Nash equilibrium) • Simplicial Subdivision Algorithm (Nash equilibrium) • Papadimitriou's Algorithm (correlated Nash equilibrium) • Turocy's Path Tracing Algorithm (quantal response equilibrium) • Predicted Action Distributions under Level-k; players' mixed strategies are independent " s is a product probability distribution " each player affects a configuration c independently " We can use dynamic programming to compute the probability of a configuration:" base case: zero agents and the mixed strategy s 0 :</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>"</head><label></label><figDesc>Idea: analyze the auctions computationally " Main hurdle: ad auction games are large; infeasible as normal form AGG-FN representation of a Weighted, Generalized First-Price (GFP) Auction</figDesc><table># 
e i =10 

0 

0 

0 

# 
e i =0 

# 
e i ≥0 

1 

1 

# 
e i =2 

# 
e i ≥2 

1 

# 
e i =3 

# 
e i ≥3 

2 

2 

# 
e i =4 

# 
e i ≥4 

3 

3 

2 

# 
e i =6 

# 
e i ≥6 

4 

4 

# 
e i =8 

# 
e i ≥8 

3 

# 
e i =9 

# 
e i ≥9 

5 

5 

# 

e i ≥10 

Effective 
Bid (e i ) 
0 
2 
3 
4 
6 
8 
9 
10 

Agent C 
β=3 

Agent B 
β=2 

Agent A 
β=2 
</table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">. Recent Directions</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">" but still doesn't effectively capture game structure " given i's action, his payoff depends only on 3 quantities! 6 £ 5 Coffee Shop Problem: projected action graph at the red node</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">. Computing Expected Utility4. Recent Directions</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>" Position auctions are used to sell $10Bs of keyword ads " Some theoretical analysis, but based on strong assumptions " Unknown how different auctions compare in more general settings " Idea: analyze the auctions computationally " Main hurdle: ad auction games are large; infeasible as normal form Social welfare and revenue of EOS auction model (2) Sponsored Search Auctions <ref type="bibr">[Thompson &amp; LB, 2008;</ref><ref type="bibr">2009]</ref> (3) Temporal Action Graph Games <ref type="bibr">[Jiang, LB &amp; Pfeffer, 2009]</ref> Goal: extend AGGs to temporal settings " Model: An AGG-FN played over a series of discrete time steps " at each time step, a subset of players move " action counts on the action nodes grow over time " Allow payoff uncertainty using random variables that are realized at a given time step " Imperfect information: players may condition their actions on a given set of observed previous actions, chance variables and action counts " Utility functions: action-specific and time-specific</p><p>(3) Properties of TAGGs <ref type="bibr">[Jiang, LB &amp; Pfeffer, 2009]</ref> " Can compactly represent a wide range of dynamic games, including:</p><p>" arbitrary MAIDs <ref type="bibr">[Milch &amp; Koller, 2001]</ref> " games whose straightforward MAID representations are not compact " Can be efficiently encoded as MAIDs by introducing deterministic chance nodes " Efficient computation of expected utility " exploit anonymity and context-specific independence as in AGG-;s " also exploit the temporal structure " as with AGG-;s, can be leveraged to yield exponential speedups in computation (Nash equilibrium, etc.) (4) Bayesian Games " TAGGs aren't the most appropriate way of representing simultaneous-move Bayesian games " indeed, while such models are widely used (e.g., in auction theory), the setting has largely been neglected by the computational game theory community " As far as we know, there are no representations or algorithms targeting general BNE computation " This leaves two general approaches, both of which make use of complete-information Nash algorithms:</p><p>1. Induced normal form " one action for each pure strategy (mapping from type to action) " set of players unchanged 2. Agent form " one player for each type of each of the BG's players " action space unchanged Bayesian AGG: an AGG-like representation of a Bayesian game's utility functions, which compactly encodes its agent form:</p><p>" Bayesian network for the joint type distribution " A (potentially separate) action graph for each type of each agent " A utility function that depends on which types are realized and on the actions taken by the other agents of the appropriate types " Representation size grows polynomially in |£|, |A|, n, when action graph has constant-bounded in-degree " Exponential savings over an unstructured Bayesian game " When types are independent, expected utility can be computed in time polynomial in the size of the BAGG " When types are not independent, expected utility can still be computed in polynomial time when an induced Bayesian network has bounded treewidth.</p><p>(4) Bayesian AGGs <ref type="bibr">[Jiang &amp; LB, work under review 2010]</ref> (5) Free Software Tools <ref type="bibr">[Jiang, Bargiacchi &amp; LB, 2007</ref><ref type="bibr">"2010</ref> " Goal: make it easier for other researchers to use AGGs " Equilibrium computation algorithms:</p><p>" Govindan-Wilson (NE) " Simplicial Subdivision (NE) " Papadimitriou (CE) * in progress " Turocy (QRE) * in progress " GAMUT:</p><p>" extended to support AGGs " Action Graph Game Editor:</p><p>" creates AGGs graphically " facilitates entry of utility fns " supports "player classes" " auto creates game generators " visualizes eq. on the action graph Conclusions " AGGs compactly represent games exhibiting contextspecific independence, anonymity and/or additive structure " Generalizes all major, existing compact representations of simultaneous-move games " graphical games, congestion games, many others " Recent directions:</p><p>" Polytime algorithm for computing pure strategy Nash equilibrium <ref type="bibr">(bounded treewidth; symmetric AGG-;)</ref> " modeling and comparing sponsored search auctions " extending AGGs to temporal settings " extending AGGs to Bayesian games " developing free software tools http://www.cs.ubc.ca/~kevinlb google://"Kevin Leyton-Brown"</p></div>			</div>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
