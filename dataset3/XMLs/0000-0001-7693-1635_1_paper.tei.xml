<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/sda1/Dissertation/grobid/grobid-0.5.6/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Econometrica Supplementary Material</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2017-09">September 2017,</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tayfun</forename><surname>Sönmez</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">HALUK ERGIN Department of Economics</orgName>
								<orgName type="department" key="dep2">Department of Economics, Boston College and Distinguished Research Fellow</orgName>
								<orgName type="department" key="dep3">Department of Economics, Boston College and Distinguished Research Fellow</orgName>
								<orgName type="institution" key="instit1">University of California at Berkeley</orgName>
								<orgName type="institution" key="instit2">Koç University</orgName>
								<orgName type="institution" key="instit3">Koç University</orgName>
								<address>
									<postCode>1645-1671</postCode>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Utku Ünver</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">HALUK ERGIN Department of Economics</orgName>
								<orgName type="department" key="dep2">Department of Economics, Boston College and Distinguished Research Fellow</orgName>
								<orgName type="department" key="dep3">Department of Economics, Boston College and Distinguished Research Fellow</orgName>
								<orgName type="institution" key="instit1">University of California at Berkeley</orgName>
								<orgName type="institution" key="instit2">Koç University</orgName>
								<orgName type="institution" key="instit3">Koç University</orgName>
								<address>
									<postCode>1645-1671</postCode>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Econometrica Supplementary Material</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2017-09">September 2017,</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.3982/ECTA13971</idno>
					<note>SUPPLEMENT TO &quot;DUAL-DONOR ORGAN EXCHANGE&quot;: APPENDICES B, C, D, E (Econometrica, Vol. 85, No. 5,</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.5.6" ident="GROBID" when="2019-12-24T15:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX B: DYNAMIC SIMULATIONS</head><p>IN THE DYNAMIC SIMULATIONS, PATIENTS AND THEIR DONORS ARRIVE over time and remain in the population until they are matched through exchange. We run statically optimal exchange algorithms once in each period. 25  In each simulation, we generate S = 500 such populations and report the averages and sample standard errors of the simulation statistics.</p><p>Haluk Ergin: hie@berkeley.edu Tayfun Sönmez: sonmezt@bc.edu M. Utku Ünver: unver@bc.edu 25 Moreover, among the optimal matchings, we choose a random one rather than using a priority rule to choose whom to match now and whom to leave to future runs. The number of patients who can be matched dynamically can be further improved using dynamic optimization. For example, see Ünver (2010) for such an approach for kidney exchanges. 26  Roughly, a dynamic simulation corresponds to 3 5 months in real time and the exchange is run once every 5-6 days. This is a very crude mapping that relies on our specific patient and paired donor generation</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1. Dynamic Simulations for Lung Exchange</head><p>In the dynamic lung-exchange simulations, we consider 200 triples arriving over 20 periods at a uniform rate of 10 triples per period. This time horizon roughly corresponds to more than 1 year of Japanese patient arrival, when exchanges are run once about every 3 weeks. We only consider the 2-way and 2&amp;3-way exchange regimes.</p><p>Based on the 2&amp;3-way exchange simulation results reported in <ref type="table" target="#tab_0">Table V</ref>, we can increase the number of living-donor transplants by 190%, thus nearly tripling them. This increase corresponds to 24% of all triples in the population. Even the logistically simpler 2-way exchange technology has a potential to increase the number of living-donor transplants by 125%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2. Dynamic Simulations for Dual-Graft Liver Exchange</head><p>For dual-graft liver exchange, we consider 500 triples arriving over 20 periods at a uniform rate of 25 triples per period. In each period, we follow the same four-step transplantation scenario we used for the static simulations. The unmatched triples remain in the patient population waiting for the next period. 26 The dynamic simulation results are reported in <ref type="table" target="#tab_0">Table VI</ref>. Under 2&amp;3-way exchanges, the number of transplants via 2-donor exchange is only 15% short of those from 2-donor direct transplants, but 25% more than those from 1-donor exchanges. Hence dual-graft liver exchange is a viable modality under 2&amp;3-way exchanges. With only 2-way exchanges, the number of transplants via 2-donor exchange is 39% less than those from 2-donor direct transplantation, but still 7% more than those from 1-donor exchange. In summary, dual-graft liver exchange increases the number of living-donor liver transplants by nearly 30% when 2&amp;3-way exchanges are possible, and by more than 22% when only 2-way exchanges are possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX C: SIMULTANEOUS LIVER-KIDNEY TRANSPLANTATION</head><p>For end-stage liver disease patients who also suffer from kidney failure, simultaneous liver-kidney transplantation (SLK) is a common procedure. In 2015, 626 patients received SLK transplants from deceased donors in the United States. Transplanting a deceaseddonor kidney to a (primarily liver) patient who lacks the highest priority on the kidney waitlist is a controversial topic, and this practice is actively debated in the U.S. <ref type="bibr" target="#b10">(Nadim et al. (2012)</ref>). SLK transplants from living donors are not common in the U.S. due to the low rate of living-donor liver donation. In contrast, living donation for both livers and kidneys is the norm in most Asian countries, such as South Korea, and countries with predominantly Muslim populations, such as Turkey. SLK transplantation from living donors is reported in the literature for these two countries, as well as for Azerbaijan and India (see <ref type="bibr" target="#b9">Lee et al. (2011)</ref>, <ref type="bibr" target="#b5">Astarcioglu et al. (2003)</ref>, <ref type="bibr" target="#b3">Ahmadov et al. (2014)</ref>, <ref type="bibr" target="#b4">Aneja and Upwar (2011)</ref>, respectively). assumptions. It is obtained as follows: Under the current patient and donor generation scenario, a bit more than half of the patients will have at least one single-graft left-or right-lobe compatible donor or dual-graft compatible two donors (with more than 30% remnant donor liver). There are around 850 direct transplants a year in Korea from live donors, meaning that 1700 patients and their paired donors arrive a year. Then 500 patients arrive in roughly 3 5 months.</p><p>For SLK exchange, the analytical model we presented in Section 4 will be an approximation, since, in addition to the blood-type compatibility requirement of solid organs, kidney transplantation requires tissue-type compatibility and (single-graft) liver transplantation requires size compatibility.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.1. Simulations for Simultaneous Liver-Kidney Exchange</head><p>As our last application, we consider simulations for simultaneous liver-kidney (SLK) exchange. We use the underlying parameters reported in <ref type="table" target="#tab_0">Table III in the main text and  Table VII</ref> here based on (mostly) Korean characteristics. In addition to an isolated SLK exchange, we also consider a possible integration of the SLK exchange with kidney-alone (KA) and liver-alone (LA) exchanges.</p><p>Following the South Korean statistics reported in these tables, we assume that the number of liver patients (LA and SLK) is 9 11 th of the number of kidney patients. We failed to find data on the percentage of South Korean liver patients who are in need of a SLK transplantation. <ref type="bibr">27</ref> Based on data from the U.S., we consider two treatments where 7 5% and 15% of all liver patients are SLK candidates, respectively. We interpret these numbers as lower and upper bounds for SLK diagnosis prevalence. 28  <ref type="bibr">27</ref> The gender of an SLK patient is determined using a Bernoulli distribution with a female probability as a weighted average of liver and kidney patients' probabilities reported in Tables III and VII with the ratio of weights 9 to 11. <ref type="bibr">28</ref> In the United States, according to the SLK transplant numbers given in <ref type="bibr" target="#b8">Formica et al. (2016)</ref>, 7 5% of all liver transplants involved SLK transplants between 2011 and 2015. On the other hand, <ref type="bibr" target="#b7">Eason et al. (2008)</ref> We generate the patients and their attached donors as follows: We assume that each KA patient is paired with a single kidney donor, each LA patient is paired with a single liver donor, and each SLK patient is paired with one liver and one kidney donor. A kidney donor is deemed compatible with a kidney patient (KA or SLK) if he is blood-type and tissue-type compatible with the patient. 29 Following the methodology in Section 3.2, a liver donor is deemed compatible with a liver patient (LA or SLK) if he is blood-type compatible and his liver's left lobe volume is at least 40% of the patient's liver volume. An SLK patient participates in exchange if any one of her two donors is incompatible, and a KA or LA patient participates in exchange if her only donor is incompatible.</p><p>We consider two scenarios, referred to as "isolated" and "integrated," respectively, for our SLK simulations. For both scenarios, a kidney donor can be exchanged only with another kidney donor, and a liver donor can be exchanged only with another liver donor.</p><p>In the "isolated" scenario, we simulate the three exchange programs separately for each patient group, LA, KA, and SLK, using the 2-way exchange technology. Note that a 2-way exchange for the SLK group involves four donors, while a 2-way exchange for other groups involves two donors.</p><p>In the "integrated" scenario, we simulate a single exchange program to assess the potential welfare gains from a unification of individual exchange programs. For our simulations, we use the smallest meaningful exchange sizes that would fully integrate KA and LA with SLK. As such, we allow for any feasible 2-way exchange in our integrated scenario along with 3-way exchanges between one LA, one KA, and one SLK patient. <ref type="bibr">30</ref> We consider population sizes of n = 250, 500, and 1000 for our simulations, reported in <ref type="table" target="#tab_0">Table VIII</ref>. For a population of n = 1000 and assuming 15% of liver patients are in need of SLK transplantation, the integrated exchange increases the number of SLK transplants over those from direct donation by 290%, almost quadrupling the number of SLK transplants. More than 20% of all SLK patients receive liver and kidney transplants through exchange in this case. For the same parameters, this percentage reduces to 5 7% under the isolated scenario. Equivalently, the number of SLK transplants from an isolated SLK exchange is equal to 81% of the SLK transplants from direct transplantation. As such, integration of SLK with KA and LA increases transplants from exchange by about 260% for the SLK population. <ref type="bibr">31</ref> When 7 5% of all liver patients are in need of SLK transplantation, integration becomes even more essential for the SLK patients. For a population of n = 1000, exchange increases the number of SLK transplants by 55% under the isolated scenario. In contrast, exchange increases the number of SLK transplants by more than 300% under the integrated scenario. Hence, integration increases the number of transplants from exchange by almost 450%, matching 21% of all SLK patients.</p><p>reported that only 73% of all SLK candidates received SLK transplants in 2006 and 2007 in the U.S. Moreover, <ref type="bibr" target="#b11">Slack, Yeoman, and Wendon (2010)</ref> reported that 47% of liver transplant patients develop either acute kidney injury (20%) or chronic kidney disease (27%), and patients from both of these categories could be suitable for SLK transplants. <ref type="bibr">29</ref> For checking tissue-type compatibility, we generate a statistic known as panel reactive antibody (PRA) for each patient. PRA determines with what percentage of the general population the patient would have tissuetype incompatibility. The PRA distribution used in our simulations is reported in <ref type="table" target="#tab_0">Table VII</ref>. Therefore, given the PRA value of a patient, we randomly determine whether a donor is tissue-type compatible with the patient. <ref type="bibr">30</ref> We are not the first ones to propose a combined liver-and-kidney exchange. <ref type="bibr" target="#b6">Dickerson and Sandholm (2014)</ref> showed that higher efficiency can be obtained by combining kidney exchange and liver exchange if patients are allowed to exchange a kidney donor for a liver donor. Such an exchange, however, is quite unlikely given the very different risks associated with living-donor kidney donation and living-donor liver donation. <ref type="bibr">31</ref> The contribution of integration is modest for other groups with an increase of 4% for KA transplants from exchange, and an increase of 4 5% for LA transplants from exchange. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DUAL-DONOR ORGAN EXCHANGE</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2. Dynamic Simulations for Simultaneous Liver-Kidney Exchange</head><p>For simultaneous liver-kidney exchange dynamic simulations, we consider a population of n = 2000 patients arriving over 20 periods under the identical regimes of our static simulations. 32 <ref type="table" target="#tab_5">Table IX</ref> reports the results of these simulations.</p><p>When 15% of all liver patients are in need of SLK transplants, most outcomes essentially double with respect to the n = 1000 static simulations: For LA and SLK, the changes are slightly more than 100%, while for KA, the changes are slightly less than 100%. The increases for SLK patients are more substantial when 7 5% of all liver patients are in need of SLK transplants: An integrated exchange can facilitate transplants for 25% of all SLK patients, an overall increase of 360% with respect to SLK transplants from direct donation.</p><p>APPENDIX D: THE SUBALGORITHM FOR ALGORITHM 2</p><p>In this section, we present a subalgorithm that solves the constrained optimization problem in Step 1 of the matching algorithm for 2-&amp; 3-way exchanges. We define</p><formula xml:id="formula_0">κ A := min n(A − A − B) + n(A − B − B) n(B − O − A) κ B := min n(B − B − A) + n(B − A − A) n(A − O − B)</formula><p>We can equivalently restate Step 1 by strengthening constraint ( * ) to be satisfied with equality:</p><p>Carry out the 2-and 3-way exchanges in <ref type="figure">Figure 7</ref> among  <ref type="figure" target="#fig_9">Figure 11</ref> summarizes the 2-and 3-way exchanges that may be carried out in Step 1 above. In the following discussion, we restrict attention to the types and exchanges represented in <ref type="figure" target="#fig_9">Figure 11</ref>. To satisfy the first part of constraint ( * * ), we can set aside any</p><formula xml:id="formula_1">A − A − B, A − B − B, B − B − A, and B − A − A</formula><formula xml:id="formula_2">combination l A of A − A − B types and m A of A − B − B types, where l A and m A are integers satisfying 0 ≤ l A ≤ n(A − A − B) 0 ≤ m A ≤ n(A − B − B) and l A + m A = κ A<label>(1)</label></formula><p>For any l A and m A satisfying Equation <ref type="formula" target="#formula_2">(1)</ref>, the remaining number γ A of B donors of A patients is  We can analogously define the integers l B ,l B , m B , andm B , γ B , andγ B such that the possible number of remaining A donors of B patients that respect the second part of constraint</p><formula xml:id="formula_3">γ A = n(A − A − B) − l A + 2 n(A − B − B) − m A (2) Let l A andl A [m A andm A ]</formula><formula xml:id="formula_4">( * * ) is an integer interval [γ A γ A ], where γ A = n(A − A − B) − l A + 2 n(A − B − B) −m A and γ A = n(A − A − B) −l A + 2 n(A − B − B) − m A 7</formula><formula xml:id="formula_5">( * * ) is an integer interval [γ B γ B ].</formula><p>In the first step of the subalgorithm, we determine which combination of types to set aside to satisfy constraint ( * * ). We will consider three cases depending on the relative</p><formula xml:id="formula_6">positions of the intervals [γ A γ A ] and [γ B γ B ].</formula><p>SUBALGORITHM 1-Subalgorithm of the Sequential Matching Algorithm for 2-and 3-way Exchanges:</p><p>Step 1: We first determine γ A and γ B :</p><formula xml:id="formula_7">Case 1. "[γ A γ A ] ∩ [γ B γ B ] = ∅": Choose any γ A = γ B ∈ [γ A γ A ] ∩ [γ B γ B ]. Case 2. "γ A &lt; γ B ": Case 2.1. If n(A − A − B) −l A − [n(B − B − A) − l B ] is positive and odd, and γ A &lt;γ A , then set γ A =γ A − 1 and γ B = γ B . Case 2.2. Otherwise, set γ A =γ A and γ B = γ B . Case 3. "γ B &lt; γ</formula><p>A ": Symmetric to Case 2, interchanging the roles of A and B. Then, we set aside l A many A − A − B's and m A many A − B − B's, where the integers l A and m A are uniquely determined by Equations <ref type="formula" target="#formula_2">(1)</ref> and <ref type="formula">(2)</ref> to ensure that the remaining number of B donors of A patients is γ A . The integers l B and m B are determined analogously.</p><p>Step 2: In two special cases explained below, the second step of the subalgorithm sets aside one extra triple on top of those already set aside in Step 1.</p><formula xml:id="formula_8">Case 1. Ifγ A &lt; γ B , n(A − A − B) −l A − [n(B − B − A) − l B ] is positive and odd, γ A =γ A , and n(B − B − A) − l B &gt; 0, then set an extra B − B − A triple aside. Case 2. Ifγ B &lt; γ A , n(B − B − A) −l B − [n(A − A − B) − l A ] is positive and odd, γ B =γ B , and n(A − A − B) − l A &gt; 0, then set an extra A − A − B triple aside.</formula><p>Step 3: After having set the triples determined in Steps 1 and 2 of the subalgorithm aside, we sequentially maximize three subsets of exchanges among the remaining triples in <ref type="figure" target="#fig_9">Figure 11</ref>.</p><p>Step 3.1: Carry out the maximum number of 2-way exchanges between the A − A − B and B − B − A types.</p><p>Step 3.2: Carry out the maximum number of 3-way exchanges consisting of two A−A− B and one B − A − A triples, and those consisting of two B − B − A and one A − B − B triple, among the remaining types.</p><p>Step <ref type="formula" target="#formula_11">3</ref>   PROPOSITION 1: The subalgorithm described above solves the constrained optimization problem in Step 1 of the matching algorithm for 2-&amp;3-way exchanges.</p><p>PROOF: Constraint ( * ) is satisfied by construction, since in Step 1 of the subalgorithm,</p><formula xml:id="formula_9">γ i is chosen from [γ i γ i ] for i = A B.</formula><p>Below, we show optimality by considering different cases.</p><p>Case</p><formula xml:id="formula_10">1. "[γ A γ A ] ∩ [γ B γ B ] = ∅": In this case, Step 1 of the subalgorithm sets γ A = γ B , that is, n(A − A − B) − l A + 2 n(A − B − B) − m A = n(B − B − A) − l B + 2 n(B − A − A) − m B</formula><p>and no extra triple is set aside in Step 2. Note that the above equality implies that at the end of Step 3.1 of the subalgorithm, the numbers of remaining A − A − B and B − B − A triples are even (at least one being zero). So again, by the above equality, all triples that are not set aside in Step 1 take part in 2-and 3-way exchanges by the end of Step 3 of the subalgorithm. This implies optimality.</p><p>Case 2. "γ A &lt; γ B , that is,</p><formula xml:id="formula_11">n(A − A − B) −l A + 2 n(A − B − B) − m A &lt; n(B − B − A) − l B + 2 n(B − A − A) −m B ".<label>(3)</label></formula><p>We next establish an upper bound on the number of triples with B patients that can participate in 2-and 3-way exchanges. Suppose that p B many B − B − A triples and r B many B − A − A triples can take part in 2-and 3-way exchanges while respecting condition ( * ). </p><formula xml:id="formula_12">Since matching each B − B − A triple requires one B donor of an A patient" matching each B − A − A triple</formula><formula xml:id="formula_13">p B + 2r B ≤γ A Note also that p B ≤p B := n(B − B − A) − l B</formula><p>. Therefore, we cannot match any more triples with B patients than the bound</p><formula xml:id="formula_14">p B + 1 2 (γ A −p B ) = max p B r B ∈R p B + r B s.t. p B + 2r B ≤γ A p B ≤p B (4) Case 2.1. "n(A − A − B) −l A − [n(B − B − A) − l B</formula><p>] is positive and odd, and γ A &lt;γ A ": <ref type="bibr">B</ref> ] is positive and even. Furthermore, no extra triple is set aside in Step 2. Therefore, an even number of A − A − B types remain unmatched at the end of Step 3.1. Also, by Equation <ref type="formula" target="#formula_11">(3)</ref>,</p><formula xml:id="formula_15">Note that γ A =γ A − 1 and γ B = γ B imply that l A =l A − 1, m A = m A + 1, l B = l B , and m B =m B . So n(A − A − B) − l A − [n(B − B − A) − l</formula><formula xml:id="formula_16">n(A − A − B) − l A + 2 n(A − B − B) − m A &lt; n(B − B − A) − l B + 2 n(B − A − A) − m B<label>(5)</label></formula><p>So all the A − B − B types available at the end of Step 3.1 take part in 3-way exchanges with B − A − A types in Step 3.2, and there are enough remaining B − A − A types to accommodate all A − B − B types in Step 3.3. Therefore, all triples with A donors that are not set aside in Step 1 take part in 2-and 3-way exchanges in Step 3 of the subalgorithm.</p><p>We next show that it is impossible to match more triples with B patients while respecting constraint ( * ), which will prove optimality. Since in Case 2.1,γ A −p B is odd and γ A = γ A − 1, rounding down the upper bound in Equation <ref type="formula">(4)</ref> to the nearest integer gives</p><formula xml:id="formula_17">p B + 1 2 (γ A −p B )</formula><p>Note that this is the number of triples with B patients who take part in 2-and 3-way exchanges in</p><p>Step 3 of the subalgorithm. <ref type="table">(In Step 3</ref></p><formula xml:id="formula_18">.1,p B ≡ n(B − B − A) − l B many B − B −</formula><p>A triples take part in 2-way exchanges; and in Steps 3.2 and 3.3, 1 2 (γ A −p B ) many B − A − A triples take part in 2-and 3-way exchanges.)</p><p>Case 2.2. We further break Case 2.2 into four subcases:</p><formula xml:id="formula_19">Case 2.2.1. "n(A − A − B) −l A − [n(B − B − A) − l B ] is positive and odd, γ A =γ A , and n(B − B − A) − l B &gt; 0": Note that γ A =γ A and γ B = γ B imply that l A =l A , m A = m A , l B = l B , and m B =m B . So n(A − A − B) − l A − [n(B − B − A) − l B</formula><p>] is positive and odd, and Equation <ref type="formula" target="#formula_16">(5)</ref> holds. Since one more B − B − A triple is set aside in Step 2, an even number of A − A − B types remain unmatched at the end of Step 3.1. By Equation <ref type="formula" target="#formula_16">(5)</ref>, all triples with A donors that are not set aside in Step 1 take part in 2-and 3-way exchanges in Step 3 of the subalgorithm.</p><p>We next show that it is impossible to match more triples with B patients while respecting constraint ( * ), which will prove optimality. Since in this case,γ A −p B is odd and γ A =γ A , rounding down the upper bound in Equation <ref type="formula">(4)</ref> to the nearest integer gives</p><formula xml:id="formula_20">p B − 1 + 1 2 γ A − (p B − 1)</formula><p>Note that this is the number of triples with B patients who take part in 2-and 3-way exchanges in</p><p>Step <ref type="formula" target="#formula_11">3</ref>  of the subalgorithm correspond to the unique way of satisfying constraint ( * * ). That is, To see that it is not possible to match any more triples with A patients, remember that in the current case the combination of triples that are set aside in Step 1 of the algorithm is determined uniquely; and note that since there are no remaining B − B − A triples, the A − A − B triples can only participate in 3-way exchanges with B − A − A triples. Each such 3-way exchange requires exactly two A − A − B triples; therefore, it is impossible to match all of the (odd number of) A − A − B triples.</p><formula xml:id="formula_21">γ A = γ A =γ A and γ B = γ B =γ B , l A = l A =l A , m A = m A =m A , l B = l B =Ī B ,</formula><p>We next show that it is impossible to match more triples with B patients while respecting constraint ( * ), which will prove optimality. Since in Case 2.2.2,γ A −p B is odd and γ A = γ A , rounding down the upper bound in Equation <ref type="formula">(4)</ref> to the nearest integer gives</p><formula xml:id="formula_22">p B + 1 2 (γ A − 1) −p B</formula><p>Note that this is the number of triples with B patients who take part in 2-and 3-way exchanges in</p><p>Step <ref type="formula" target="#formula_11">3</ref>   <ref type="formula" target="#formula_16">(5)</ref> holds. Since no other triple is set aside in Step 2, an even number of A − A − B types remain unmatched at the end of Step 3.1. By Equation <ref type="formula" target="#formula_16">(5)</ref>, all triples with A donors that are not set aside in Step 1 take part in 2-and 3-way exchanges in Step 3 of the subalgorithm.</p><p>We next show that it is impossible to match more triples with B patients while respecting constraint ( * ), which will prove optimality. Since in this case,γ A −p B is even and γ A =γ A , the upper bound in Equation (4) is integer valued:</p><formula xml:id="formula_23">p B + 1 2 [γ A −p B ]</formula><p>Note that this is the number of triples with B patients who take part in 2-and 3-way exchanges in</p><p>Step <ref type="formula" target="#formula_11">3</ref>  We next show that it is impossible to match more triples with B patients while respecting constraint ( * ) by considering three cases, which will prove optimality.</p><p>Suppose first thatγ A −p B ≤ 0. Since matching each triple with a B patient requires at least one B donor of an A patient and the maximum number of B donors of A patients is γ A , we cannot match more triples with a B patient thanγ B . Since in this case n(B − B − A) − l B ≡p B ≥γ A = γ A , the subalgorithm matchesγ A many B − B − A triples in Steps 3.1 and 3.2, which achieves this upper bound.</p><p>Suppose next thatγ A −p B is positive and even. Then, the upper bound in Equation <ref type="formula">(4)</ref> is integer valued, and since γ A =γ A , it can be written as</p><formula xml:id="formula_24">p B + 1 2 (γ A −p B )</formula><p>Note that this is the number of triples with B patients who take part in 2-and 3-way exchanges in</p><p>Step <ref type="formula" target="#formula_11">3</ref>  Suppose last thatγ A −p B is positive and odd. Then, since γ A =γ A , rounding down the upper bound in Equation <ref type="formula">(4)</ref> to the nearest integer gives</p><formula xml:id="formula_25">p B − 1 + 1 2 γ A − (p B − 1)</formula><p>Note that this is the number of triples with B patients who take part in 2-and 3-way exchanges in</p><p>Step <ref type="formula" target="#formula_11">3</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX E: PROOF OF THEOREM 3 AND OTHER RESULTS FOR UNRESTRICTED EXCHANGES</head><p>Before delving into the analysis, we introduce some new terminology. For a given exchange pool E , we refer to an exchange pool K ≤ E as a subpool of E . We fix a dual-donor exchange pool E throughout the section. Given a subpool K, let D X [K] be the number of X blood-type donors in K and P X [K] be the number of X blood-type patients in K. We also use n(X − Y − Z)[K] to denote the number of X − Y − Z triples in K (while we omit the arguments of these expressions if K = E ). For a subpool K, by a slight abuse of notation, let |K| be the total number of triples in K. Given a matching μ, we will sometimes denote the subpool of triples matched through it also as μ, with a slight abuse of notation.</p><p>We denote with E the essential types:</p><formula xml:id="formula_26">E := {A − A − B A − O − B A − B − B B − B − A B − O − A B − A − A}</formula><p>Recall that by Lemma 2, each exchange should have at least two pairs of two different types in E, one with an A patient and one with a B patient. Let E E ≤ E be the subpool with only essential-type triples. Also recall that by Lemma 5, the only types that can be a part of an optimal matching in this setting besides the essential types are O − O − A and O − O − B, which are sufficiently many by the long-run assumption. The following lemma will characterize the role of such triples and reduce the problem to focus only on essential types in constructing an optimal matching. This is a counterpart of Lemma 6 for unrestricted exchange sizes:</p><p>LEMMA 8: Suppose that E satisfies the long-run assumption and μ is an optimal matching in the absence of any exchange-size constraints in the essential type subpool E E . </p><formula xml:id="formula_27">O − A − B, O − A − A, O − B − B, O − O − A, and O − O − B iteratively.</formula><p>The final matching, which we refer to as μ , is feasible and consists of only essential-type triples of ν .</p><p>Q.E.D.</p><p>Let μ and ν be defined as in the hypothesis of the lemma. Suppose that ν is an arbitrary optimal matching in E . We will show that |ν| = |ν |.</p><p>By Lemma 5, the types of triples that can be part of a feasible exchange besides the essential types are O − O − A and O − O − B under the long-run assumption.</p><p>We form a matching μ by removing the non-essential-type triples from ν by the Claim. We have</p><formula xml:id="formula_28">|μ| ≥ μ<label>(6)</label></formula><p>by optimality of μ in E E . We also have</p><formula xml:id="formula_29">n(A − O − B)[μ] + n(B − O − A)[μ] ≥ n(A − O − B) μ + n(B − O − A) μ (7)</formula><p>by the fact that μ maximizes the number of</p><formula xml:id="formula_30">A − O − B and B − O − A triples matched in E E . The O − O − A and O − O − B triples matched in ν require at least n(O − O − B)[ν ] + n(O − O − A)[ν ]-many other triples with O donors in ν . Since these triples can only be of types A − O − B and B − O − A, we have n(O − O − A)[ν] + n(O − O − B)[ν] = n(A − O − B)[μ] + n(B − O − A)[μ] ≥ n(A − O − B) μ + n(B − O − A) μ ≥ n(O − O − A) ν + n(O − O − B) ν</formula><p>where the equality follows from the construction of ν, the first inequality follows from Equation <ref type="formula">(7)</ref>, and the last inequality follows from the feasibility of ν . This and Equation <ref type="formula" target="#formula_28">(6)</ref> </p><formula xml:id="formula_31">imply |ν| = |μ| + n(O − O − A)[ν] + n(O − O − B)[ν] ≥ |μ | + n(O − O − A)[ν ] + n(O − O − B)[ν ] = |ν |. Since ν is optimal in E , ν is optimal in E with |ν| = |ν |, completing the proof. Q.E.D.</formula><p>If we can show that it is possible to construct a matching μ, which simultaneously matches 1. the maximum number of A − O − B and B − O − A triples in any possible matching, and 2. the maximum number of essential-type triples, then, using Lemma 8, we can construct an optimal matching using μ, and it matches</p><formula xml:id="formula_32">|μ| + n(A − O − B)[μ] + n(B − O − A)[μ]</formula><p>triples. This will also give us the optimal number of triples that can be matched in the absence of exchange-size constraints.</p><p>Hence, our larger goal is to reach the above two goals simultaneously. Next, we define two nonnegative numbers for triples in E E . These tell us the minimum (s A ) and maximum (s A ) numbers of donors compatible with B blood-type patients that can be supplied by patients with A blood-type patients:</p><formula xml:id="formula_33">s A := n(A − O − B) + n(A − A − B) + 2n(A − B − B)<label>(8)</label></formula><formula xml:id="formula_34">s A := 2n(A − O − B) + n(A − A − B) + 2n(A − B − B)<label>(9)</label></formula><p>Here, s A assumes that all We define a subalgorithm using these numbers:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SUBALGORITHM 2-Group and Match Subalgorithm for Triple Types</head><formula xml:id="formula_35">A − O − B, A − B − B, A − A − B, B − O − A, B − A − A, B − B − A:</formula><p>Group: Two cases are possible for s A , s A , s B , s B , defined in Equations <ref type="formula" target="#formula_33">(8)</ref> and <ref type="formula" target="#formula_34">(9)</ref>.</p><formula xml:id="formula_36">Case 1. "[s A s A ] ∩ [s B s B ] = ∅": Fix α A , α B such that 0 ≤ α A ≤ n(A − O − B), 0 ≤ α B ≤ n(B − O − A), and s A − α A = s B − α B : 1. Group α A -many A − O − B triples with A − A − B types and the rest with A − B − B types. 2. Group α B -many B − O − A triples with B − B − A types and the rest with B − A − A types. Case 2. "s B &lt; s A ": 1. Group all A − O − B triples (i.e., (s A − s A )-many) with A − A − B types (i.e., α A = s A − s A ). 2. Group all B − O − A triples (i.e., (s B − s B )-many) with B − A − A types (i.e., α B = s B − s B ).</formula><p>Case 3. "s A &lt; s B ": Symmetric situation with Case 2 replacing A blood type with B.</p><p>We refer to all</p><formula xml:id="formula_37">X − O − Z triples grouped with X − Y − Z triples and all X − Y − Z triples for all for X Y Z ∈ {A B} such that X = Z as X − Y * − Z triples or group. Let n(X − Y * − Z) be the number of triples in the X − Y * − Z group and n(X − O − Z|X − Y * − Z) be the number of X − O − Z triples in the X − Y * − Z group. Define: :=n A − A * − B − n B − B * − A<label>(10)</label></formula><p>Match: Starting with the triples with O donors in each group in each step:</p><p>Step <ref type="formula" target="#formula_2">1</ref> Step 2: Carry out the maximum number of 3-way exchanges consisting of two A − A * − B triples and one B − A * − A triple, and those consisting of two B − B * − A triples and one A − B * − B among the remaining ones.</p><p>Step <ref type="formula" target="#formula_11">3</ref>  . Each solid line represents 2-way exchanges, and each solid line with a dot at the end represents 3-way exchanges in each of which two triples participate from the group that is pointed by the circular end. Only one of the two 3-way exchanges will be conducted in Step 2 in each subfigure. Exceptions are not depicted in Case 2. <ref type="figure" target="#fig_1">Figure 13</ref> summarizes how the Group and Match Subalgorithm works, along with its consequences (to be proven in Propositions 2 and 3 below). This subalgorithm is embedded in the optimal matching algorithm as follows:</p><p>ALGORITHM 3-Sequential Matching Algorithm in the Absence of Exchange-Size Constraints:</p><p>Step 1: Use Subalgorithm 2, Group and Match, to match triples of types E.</p><p>Step <ref type="formula">2</ref> </p><formula xml:id="formula_38">m := m A + m B where m A := min P A [E E ] D A [E E ] + D O [E E ] 2 s B and<label>(11)</label></formula><formula xml:id="formula_39">m B := min P B [E E ] D B [E E ] + D O [E E ] 2 s A PROOF: The first term in m A , P A [E E ]</formula><p>, is the number of A blood-type patients and the second term,</p><formula xml:id="formula_40">D A [E E ]+D O [E E ] 2</formula><p>, is the maximum number of A blood-type patients who can receive two lobes from donors who are compatible with A blood-type patients, that is, O and A blood-type donors in E E . Hence, each of them is an upper bound for the number of triples with A blood-type patients in E E who can receive a transplant. Next consider the third term:</p><formula xml:id="formula_41">s B = n(B − B − A) + 2n(B − O − A) + 2n(B − A − A)</formula><p>is the maximum number of A or O blood-type donors whom the B blood-type patients can provide for the triples with A blood-type patients in E E . Each triple with an A blood-type patient in E E requires at least one A or O blood-type donor coming from another triple to be matched feasibly, as it can provide at most one compatible donor for itself. Hence, s B is also an upper bound to the number of A blood-type patients who can be matched within E E , establishing the formula for m A .</p><p>The argument is the same in m B for B blood-type patients. There are no triples with AB or O blood-type patients in E E . This concludes the proof and establishes m as an upper bound to the essential types that can be matched.</p><p>Q.E.D.</p><p>We will prove that the upper bound found above is almost tight, and the Group and Match subalgorithm matches always at least one fewer patient than m upper bound, and often matches exactly m patients. Moreover, we show that when Group and Match matches m − 1 triples, no more triples can be matched among the essential types. This shows that Group and Match is an optimal matching algorithm for the essential types. It also uses entirely 2-and 3-way exchanges.</p><p>PROPOSITION 2: In the absence of any exchange-size constraints, an optimal matching within E E exactly matches m or m − 1 patients, and moreover, Subalgorithm 2, Group and Match, finds such a matching in this subpool using only 2-and 3-way exchanges.</p><p>PROOF: First observe that by construction, Group and Match conducts only 2-and 3way exchanges. For notational and expositional simplicity, suppose E = E E , that is, E E is the whole pool. Thus, we drop the argument E E from D X and P X throughout.</p><p>Case 1. "[s A s A ] ∩ [s B s B ] = ∅": We will prove that all triples are matched by the subalgorithm, and that is m-many. Without loss of generality assume that</p><formula xml:id="formula_42">= n A − A * − B − n B − B * − A ≥ 0 Thus, all B − B * − A triples are matched in 2-way exchanges with A − A * − B triples in</formula><p>Step 1 of the Match stage of the subalgorithm.</p><p>We first show that is even. This will be used in the proofs for other cases to rule out certain scenarios:</p><formula xml:id="formula_43">= α A + n(A − A − B) − α B − n(B − B − A) = s B − s A + n(A − A − B) − n(B − B − A) = 2 n(A − B − B) + n(A − O − B) − n(B − A − A) − n(B − O − A)</formula><p>showing is even.</p><p>Next, we write down the number of B −A * −A triples needed to match all A blood-type patients remaining in Step 2 and Step 3 of the Match stage:  </p><formula xml:id="formula_44">2 in Step 2 + n(A − B − B) + n(A − B − O) − α A in Step 3 = α A + n(A − A − B) − α B − n(B − B − A) 2 + n(A − B − B) + n(A − B − O) − α A = −α B − α A + s A − n(B − B − A) 2 = n(B − A − A) + n(B − O − A) − α B = n B − A * − A Thus, all B − A * − A</formula><formula xml:id="formula_45">P B = n(B − B − A) + n(B − O − A) + n(B − A − A) ≤ s B ≤ s B &lt; s A ≤ s A and P B ≤ n(B − B − A) + n(B − O − A) + n(B − A − A) + s A − s B 2 = n(A − O − B) + n(A − B − B) + n(B − B − A) + n(B − O − A) + n(A − A − B) 2 = D B + D O 2 Since m B = min{P B D B +D O 2 s A },</formula><formula xml:id="formula_46">+ 2 min n(B − A − A) + n(B − O − A) 2 in</formula><p>Step 2</p><formula xml:id="formula_47">+ max 0 n(B − A − A) + n(B − O − A) − 2 in</formula><p>Step 3</p><p>A blood-type patients are matched in the subalgorithm.</p><p>We claim that a = m A : Recall that a ≤ m A by the upper bound by Lemma 9. Also recall that</p><formula xml:id="formula_48">m A = min P A D A + D O 2 s B and P A = n(A − A − B) + n(A − O − B) + n(A − B − B) D A + D O 2 = n(B − A − A) + n(B − O − A) + n(A − A − B) + n(A − O − B) + n(B − B − A) 2 s B = n(B − B − A) + 2n(B − O − A) + 2n(B − A − A)</formula><p>Consider the following two subcases:</p><formula xml:id="formula_49">(a) If n(B − A − A) + n(B − O − A) ≥ 2 , then m A ≥ a = n(B − B − A) + n(A − A − B) + n(A − O − B) − n(B − B − A) 2 + n(B − A − A) + n(B − O − A) = D A + D O 2 ≥ m A (b) If n(B − A − A) + n(B − O − A) &lt; 2 , then m A ≥ a =n(B − B − A) + 2n(B − O − A) + 2n(B − A − A) = s B ≥ m A</formula><p>Hence, in either case, we have a = m A . Next, consider B blood-type patients. Observe that all B patients are matched in the subalgorithm. As m B = P B , we have m = m A + m B (the maximum possible number by Lemma 9) patients matched.</p><p>Case 2.2. " &lt; 0": Below, we will prove that m patients can be matched except when is odd and yet Exception (I) cannot be invoked. In this case, we will show that (a) only m A A patients and m B − 1 B patients can be matched at most, and (b) our subalgorithm matches exactly that many agents. (Recall that Exception (II) is never invoked in Case 2.) Then by Lemma 9, the result will follow. We analyze Case 2.2 in three subcases: </p><formula xml:id="formula_50">+ n(B − A − A) + n(B − O − A) − 1 in Step 3 = n(B − A − A) + n(B − O − A) + n(A − A − B) + n(A − O − B) + − 2 = n(B − A − A) + n(B − O − A)<label>(12)</label></formula><formula xml:id="formula_51">+ n(A − A − B) + n(A − O − B) + n(B − B − A) 2 = D A + D O 2 Recall that a ≤ m A ≤ D A +D O 2</formula><p>, where the first inequality follows from Lemma 9. Thus, a = m A .</p><p>(b) " &lt; 0 is odd and Exception (I) <ref type="bibr">(B)</ref> is invoked in Match stage": Since is odd, one of the A blood-type donors provided by one of the B blood-type patients is not used in this upper bound, even though some A patients remain unmatched. Thus, at least one B patient will not be matched in any matching. Thus, the subalgorithm is matching the maximum possible number of B blood-type patients. Q.E.D.</p><formula xml:id="formula_52">Since s A &gt; s B , n(A − B * − B) − n(B − A * − A) − − 2 &gt; 0. Moreover, n(B − O − A|B − A * − A) = 0,</formula><p>The number of A blood-type patients matched by the subalgorithm is Q.E.D.</p><p>THEOREM 4: Suppose that the dual-donor exchange pool E satisfies the long-run assumption. In the absence of exchange-size constraints, an optimal matching can be found through Algorithm 3, which uses only 2-6-way exchanges. Moreover, the number of patients matched in an optimal matching is given by where I ∈ {0 1}, s X for X ∈ {A B} is defined as in Equation <ref type="formula" target="#formula_34">(9)</ref>, and m is defined in Equation system (11). PROOF: By Proposition 2, m − I patients from the essential triple types E are matched through the Group and Match subalgorithm (in the first step of the sequential matching algorithm in absence of exchange-size constraints), and by Proposition 3, this algorithm also matches the maximum possible number of A − O − B and B − O − A triples. Let μ be the outcome of this subalgorithm, which is optimal for triples from E. By Lemma 8, we can add additionally one triple from types not in triples, and its outcome is optimal. Matching μ has exchanges no larger than 3-ways. Since at most one additional triple is inserted in each exchange for each triple matched in the second step of the algorithm, then the final outcome has exchanges no larger than 6-ways.</p><p>Q.E.D.</p><p>Theorem 4 implies Theorem 3.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>types to maximize the number of transplants subject to the following constraints ( * * ): 1. Leave exactly a total of κ A of A − A − B and A − B − B types unmatched. 2. Leave exactly a total of κ B of B − B − A and B − A − A types unmatched.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>. 3 :</head><label>3</label><figDesc>Carry out the maximum number of 2-way exchanges between the remaining A − B − B and B − A − A types.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 12</head><label>12</label><figDesc>graphically illustrates the 2-and 3-way exchanges that are carried out at Steps 3.1-3.3 of the subalgorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FIGURE 12 .</head><label>12</label><figDesc>-Steps 3.1-3.3 of the subalgorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>of the subalgorithm. (In Step 3.1,p B − 1 ≡ n(B − B − A) − l B − 1 many B − B − A triples take part in 2-way exchanges; and in Steps 3.2 and 3.3, 1 2 [γ A − (p B − 1)] many B − A − A triples take part in 2-and 3-way exchanges.) Case 2.2.2. "n(A − A − B) −l A − [n(B − B − A) − l B ] is positive and odd, γ A =γ A , and n(B − B − A) − l B = 0": Since n(B − B − A) ≥l B ≥ l B and n(B − B − A) − l B = 0, we havel B = l B , which implies thatγ B = γ B . Since γ A =γ A and γ B =γ B in this case, the choices of γ A and γ B in Step 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>and m B = m B =m B . Also, Equation (5) holds. So n(A − A − B) − l A is positive and odd, and n(B − B − A) − l B = 0. Furthermore, no extra triple is set aside in Step 2. Therefore, there are no matches in Step 3.1 and all of the (odd number of) A − A − B triples are available in the beginning of Step 3.2. By Equation (5), all but one of these A − A − B triples take part in 3-way exchanges with B − A − A types in Step 3.2; and there are enough remaining B − A − A types to accommodate all A − B − B types in Step 3.3. Therefore, all triples with A donors, except one A − A − B triple, that are not set aside in Step 1 take part in 2-and 3-way exchanges in Step 3 of the subalgorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>of the subalgorithm. (In Step 3.1,p B ≡ n(B − B − A) − l B many B − B − A triples take part in 2-way exchanges; and in Steps 3.2 and 3.3, 1 2 [(γ A − 1) −p B ] many B − A − A triples take part in 2-and 3-way exchanges.) Case 2.2.3. "n(A − A − B) −l A − [n(B − B − A) − l B ] is positive and even": Note that γ A =γ A and γ B = γ B imply that l A =l A , m A = m A , l B = l B , and m B =m B . So n(A − A − B) − l A − [n(B − B − A) − l B ] is positive and even and Equation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>of the subalgorithm. (In Step 3.1,p B ≡ n(B − B − A) − l B many B − B − A triples take part in 2-way exchanges; and in Steps 3.2 and 3.3, 1 2 (γ A −p B ) many B − A − A triples take part in 2-and 3-way exchanges.) Case 2.2.4. "n(A − A − B) −l A − [n(B − B − A) − l B ] ≤ 0": Note that γ A =γ A and γ B = γ B imply that l A =l A , m A = m A , l B = l B , and m B =m B . Also Equation (5) holds. Since no other triple is set aside in Step 2 and n(B −B −A)−l B ≥ n(A − A − B) − l A , all A − A − B triples are matched in Step 3.1. By Equation (5), there are sufficient remaining B − B − A and B − A − A triples to ensure that all A − B − B triples take part in 2-and 3-way exchanges in Steps 3.2 and 3.3. So all triples with A donors that are not set aside in Step 1 take part in 2-and 3-way exchanges in Step 3 of the subalgorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>of the subalgorithm. (In Steps 3.1 and 3.2,p B ≡ n(B − B − A) − l B many B − B − A triples take part in 2-and 3-way exchanges; and in Step 3.3, 1 2 (γ A −p B ) many B − A − A triples take part in 2-way exchanges.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>1 2</head><label>1</label><figDesc>of the subalgorithm. (In Steps 3.1 and 3.2,p B − 1 ≡ n(B − B − A) − l B − 1 many B − B − A triples take part in 2-and 3-way exchanges; and in Step 3.3, [γ A − (p B − 1)] many B − A − A triples take part in 2-way exchanges.) Case 3. "γ B &lt; γ A ": Symmetric to Case 2, interchanging the roles of A and B. Q.E.D.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>Suppose further that μ matches the maximum possible number of A − O − B and B − O − A triples that can be matched in any matching in E E . 1. Then μ can be modified to obtain a matching ν such that n(A − O − B)[μ] + n(B − O − A)[μ]-many O − O − A and O − O − B triples can be matched in addition to all triples matched by μ. 2. Moreover, ν is an optimal matching of E in the absence of any exchange-size constraints. PROOF: The first part of the lemma is easy to prove: Take any B − O − A or A − O − B triple i matched in μ. Observe that as μ is a matching within essential types, the O donor of i is necessarily donating to an A or a B patient in μ. If i's O donor is donating to an A patient, then take a triple j of type O − O − A, and otherwise take a triple j of type O − O − B. Such triples (which are unmatched in μ) exist by the long-run assumption. Modify μ as follows: Let i's and j's O donors donate to j's patient and j's non-O donor donate to the patient i's O donor was previously donating to in μ. Otherwise, do not change any other donations in μ. We repeat the procedure for all B −O −A and A−O −B triples matched in μ. Let ν be the matching obtained as a result of this procedure. It matches n(A − O − B)[μ] + n(B − O − A)[μ]-many O − O − A and O − O − B triples. For the second part of the lemma, we first prove a claim: CLAIM: For any optimal matching ν of E , we can construct another matching μ involving only the essential-type triples matched by ν . PROOF OF THE CLAIM: By Lemma 5, besides the essential-type triples, O − O − A and O − O − B types can participate in ν . Take a patient of a triple matched in ν of type O − O − X for any X ∈ {A B}. Without loss of generality, assume that her O donor directly donates to her in ν . Another triple's O donor d 1 donates to her in ν as well.In return, her X donor donates to a (different) patient p 1 in ν . We can simply take this O − O − X triple out, and form a new matching by d 1 directly donating to p 1 and rest of the donations remain intact as in ν . We repeat this procedure for all triples of types</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>A − O − B triples are treated like A − A − B types: the O bloodtype donor can be utilized internally, and hence, each A − O − B triple requires one donor from outside, and so does each A − A − B triple. On the other hand, each A − B − B triple needs two donors from outside. In calculating s A , we treat A − O − B triples like A − B − B's. Therefore, each of them requires two donors from outside instead of one. Symmetrically, we define s B and s B . Observe that s A − s A = n(A − O − B) and s B − s B = n(B − O − A)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>:</head><label></label><figDesc>Carry out the maximum number of 2-way exchanges between the A − A * − B and B − B * − A triples with the following exceptions: (I) In Case 2 if &lt; 0 and is odd: (A) If n(B −O −A) &gt; 0: add one B −O −A triple to B −B * −A group from B −A * −A group and continue with Step 1. (B) If n(B − O − A) = 0 and an exchange can be conducted in Step 1: do not conduct the last A − A * − B &amp; B − B * − A 2-way exchange in Step 1 (and thus, exactly one A − A * − B triple and an even number of B − B * − A triples remain unmatched in Step 1), and if the remaining A − A * − B triple is of type A − O − B, then move it to the A − B * − B group. (II) In Case 3 if &gt; 0 and is odd: (A) If n(A−O −B) &gt; 0: add one A−O −B triple to A−A * −B group from A−B * −B group and continue with Step 1. (B) If n(A − O − B) = 0 and an exchange can be conducted in Step 1: do not conduct the last A − A * − B &amp; B − B * − A 2-way exchange in Step 1 (and thus, exactly one B − B * − A triple and an even number of A − A * − B triples remain unmatched in Step 1), and if the remaining B − B * − A triple is of type B − O − A, then move it to the B − A * − A group.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>:</head><label></label><figDesc>If there are any A − O − B and B − O − A triples left in A − A * − B and B − B * − A groups, respectively, then move them to A − B * − B and B − A * − A groups, respectively. Carry out the maximum number of 2-way exchanges between the remaining A − B * − B and B − A * − A triples.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>FIGURE 13 .</head><label>13</label><figDesc>-Cases 1 and 2 of Group and Match Subalgorithm (Subalgorithm 2)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>:</head><label></label><figDesc>In any exchange determined in this matching, for eachA − O − B or B − O − A triple in the exchange, insert an O − O − A or an O − O − B triple using Lemma 8.Before proving the optimality of Algorithm 3, we find an upper bound to the number of triples that can be matched in an exchange pool:LEMMA 9-Upper Bound Lemma: Consider the subpool E E . Then m, defined below, is an upper bound to the number of triples that can be matched in a matching consisting only of triples in E E :</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head></head><label></label><figDesc>we obtain m B = P B . In the Group stage, all A−O −B triples are grouped with A−A−B's and all B −O −A triples are grouped with B − A − A's. There are two subcases, ≥ 0 and &lt; 0: Case 2.1. " ≥ 0": We have = n(A−A * −B)−n(B −B * −A) = n(A−A−B)+n(A− O − B) − n(B − B − A). First, since ≥ 0, Exception (I) is not needed. Second, invoking Exception (II) requires s B &gt; s A , contradicting we are in Case 2. Thus, no exceptions are invoked in Step 1. Then a := n(B − B − A) in Step 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>2 &gt; 0 .+</head><label>20</label><figDesc>(a) " &lt; 0 is odd and Exception (I)(A) is invoked in Match stage":Since s A &gt; s B , we have n(A − B * − B) − n(B − A * − A) − − Moreover, n(B − O − A|B − A * − A) &gt; 0. Thus, b := n(A − A − B) + n(A − O − B) n(B − A − A) + n(B − O − A)− 1 in Step 3 = n(B − A − B) + n(B − A − A) + n(B − O − A) = P B = m B B patients are matched. On the other hand, the number of A patients matched is a := n(A − A − B) + n(A − O − B)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>+A</head><label></label><figDesc>and at least one exchange can be conducted in Step 1. Now, the last A − A * − B &amp; B − B * − A 2-way exchange in Step 1 is not conducted: Hence, exactly one A − A * − B triple and an even number of B − B * − A triples remain unmatched in Step 1. In Step 2, all remaining B − B * − A triples are matched with A − B * − B triples. Moreover, in Step 3, all B − A * − A triples are matched. Thus, m B = P B B patients are matched. On the other hand, a := n(A − A − B) + n(A − O − B) n(B − A − A) + n(B − O − A) patients are matched (where the equality follows from Equation (12)). Thus, a = m A . (c) " &lt; 0 is odd and yet none of the exceptions are invoked, or &lt; 0 is even": As s A &gt; s B , in Steps 1 and 2 of the Match stage, if is odd, only one of the B − B − A triples is unmatched, and otherwise, all B − B − A triples are matched. In Step 3, all B − A − A and B − O − A triples are matched with A − B − B triples in 2-way exchanges. Hence, all B blood-type patients, but at most one, are matched. Next we prove the following claim: CLAIM: In Case 2.2(c), the subalgorithm matches the maximum possible number of B patients that can be matched, that is, m B − 1{ is odd}. 33 PROOF OF THE CLAIM: If P B -many B patients are matched, then we are done. Suppose the subalgorithm matches P B − 1-many B blood-type patients. In this case, m B = P B . Moreover, is odd. If we could use all B blood-type patients in exchange, we can collectively provide at most s B = n(B − B − A) + 2n(B − A − A) + 2n(B − O − A) donors to A blood-type patients. Therefore, the maximum number of A patients that can be matched (if it were possible) is: All A − A − B's and all A − O − B's each of which demands one A donor from outside (since &lt; 0, i.e., n(A − A − B) + n(A − O − B) &lt; n(B − B − A), this is feasible), and r A := n(A − B − B's, each of which demands two outside donors. Observe that r A = n(B − A − A) + n(B − O − A) + − 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>a+</head><label></label><figDesc>:= n(A − A − B) + n(A − O − B) n(B − A − A) + n(B − O − A) (12). Since we have a ≤ m A ≤ D A +D O 2Step 2). Suppose some A − O − B's are unmatched. Since we have m A A patients matched in this case by the Proof of Proposition 2, all of them are from triples of type A − O − B.Since m A is the upper-bound of A patients matched, then maximum possible number ofA − O − B triples are matched. Thus, κ = min{m A n(A − O − B)} = min{n(A − O − n(B − A − A) + n(B − O − A) + n(A − A − B) + n(A − O − B) + n(B − B − A) 2 = n(A − A − B) + s B + n(A − O − B) 2 ≥ min n(A − O − B) s B Thus, κ = min{n(A − O − B) s B }.Case 3. "s B &gt; s A ": All A − O − B's are in the A − B * − B group. If ≤ 0 or &gt; 0 is even, then all A − O − B triples are matched following the proof of Proposition 2. If Exception (II)(A) is invoked, then one A − O − B is moved to the A − A * − B group after Step 1, but is immediately matched in Step 2. Moreover, all remaining A − O − B's are matched in Step 3. If Exception (II)(B) or if &gt; 0 is odd and yet no Exception is invoked, then there are no A − O − B triples. Thus, κ = n(A − O − B) ≤ m A ≤ s B . Hence, κ = min{n(A − O − B) s B }. By Lemma 9, this is the maximum number of A − O − B type triples that can be matched (i.e., if there were no other A patients, we would have m A = κ).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>m</head><label></label><figDesc>− I + min n(A − O − B) s B + min n(B − O − A) s A</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head></head><label></label><figDesc>E for each A − O − B and B − O − A triple matched in μ. This is the maximum number of triples we can match from types not in E in any matching by the same lemma. Since the number of A − O − B and B − O − A triples matched in μ is min{n(A − O − B) s B } + min{n(B − O − A) s A } (by Proposition 3), then the sequential matching algorithm in absence of exchange-size constraints matches a total of m − I + min{n(A − O − B) s B } + min{n(B − O − A) s A }</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>TABLE V</head><label>V</label><figDesc>DYNAMIC LUNG-EXCHANGE SIMULATIONS</figDesc><table>Exchange Tech. 
Population 
Direct 
Size 
Donation 
2-way 
2&amp; 3-way 

200 
24.846 
31.2 
47.976 
(in 20 periods) 
(4.5795) 
(6.6568) 
(8.7166) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>TABLE VI DYNAMIC</head><label>VI</label><figDesc>DUAL-GRAFT LIVER-EXCHANGE SIMULATIONS</figDesc><table>Population 
1-Donor 
1-Donor 
2-Donor 
2-Donor 
Size 
Direct 
Exchange 
Direct 
Exchange 

500 
119.83 
2-way 
58.284 
102.24 
62.296 
(in 20 periods) 
(10.016) 
(9.6765) 
(10.05) 
(9.1608) 

2&amp;3-way 
68.034 
100.47 
85.632 
(11.494) 
(10.063) 
(12.058) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>TABLE VII SUMMARY</head><label>VII</label><figDesc>STATISTICS FOR SIMULTANEOUS-LIVER-KIDNEY-EXCHANGE SIMULATIONS FROM THE SOUTH KOREAN KIDNEY PATIENTS/DONORS a The patient PRA distribution is obtained from American UNOS data as we could not find detailed Korean PRA distributions. The transplant data were obtained from the Korean Network for Organ Sharing (KONOS) 2014 Annual Report, retrieved from https://www.konos.go.kr/ konosis/index.jsp on 04/10/2016.</figDesc><table>Live Kidney Donation Recipients in 2010-2014 
(55% Among Liver and Kidney) 

Female 
2555 (53.38%) 
Male 
2231 (46.62%) 

Total 
4786 (100.0%) 

Live Kidney Donors in 2010-2014 

Female 
1922 (41.16%) 
Male 
2864 (59.84%) 

Total 
4786 (100.0%) 

Patient PRA Distribution 

Range: 0-10% 
70.19% 
Range: 11-80% 
20.00% 
Range: 81-100% 
9.81% 

a </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>TABLE VIII SIMULTANEOUS</head><label>VIII</label><figDesc>LIVER-KIDNEY EXCHANGE SIMULATIONS FOR n = 250 500 1000 PATIENTS</figDesc><table>Exchange Regime 
Population 
Direct 
Sizes 
Donation 
Isolated 
Integrated 
SLK Patient 
Fraction in 
Liver Pool 
KA 
SLK 
LA 
KA 
SLK 
LA 
KA 
SLK 
LA 
KA 
SLK 
LA 

7.5% 
133 
9 
108 
61.114 
0.58 
17.128 
30.776 
0.128 
8.332 
31.25 
1.126 
8.622 
n = 250 
(5.944) 
(0.70753) 
(3.756) 
(6.7362) 
(0.49) 
(3.91) 
(6.7675) 
(1.008) 
(3.8999) 

267 
18 
215 
121.3 
1.29 
33.786 
70.168 
0.452 
21.356 
71.508 
3.11 
22.012 
n = 500 
(8.3792) 
(1.1119) 
(5.3514) 
(10.475) 
(0.91945) 
(6.0982) 
(10.48 ) 
(1.6283) 
(6.0243) 

535 
35 
430 
244.09 
2.426 
67.982 
151.34 
1.352 
53.26 
154.48 
7.468 
54.264 
n = 1000 
(11.783) 
(1.5222) 
(7.8642) 
(14.841) 
(1.5128) 
(9.5101) 
(14.919) 
(2.4366) 
(9.5771) 

15% 
129 
18 
103 
59.288 
1.168 
16.364 
29.64 
0.464 
7.812 
30.55 
2.186 
8.434 
n = 250 
(5.9075) 
(1.0421) 
(3.5996) 
(6.6313) 
(0.9688) 
(3.7886) 
(6.7675) 
(1.4211) 
(3.7552) 

259 
36 
205 
117.64 
2.566 
32.254 
67.916 
1.352 
20.052 
70.266 
5.782 
21.466 
n = 500 
(8.3432) 
(1.5933) 
(5.2173) 
(10.416) 
(1.6546) 
(5.9837) 
(10.441) 
(2.2442) 
(5.9319) 

518 
72 
410 
236.23 
5.076 
64.874 
146.18 
4.108 
50.084 
152.17 
14.74 
52.376 
n = 1000 
(11.605) 
(2.2646) 
(7.5745) 
(14.758) 
(2.6883) 
(9.3406) 
(14.986) 
(3.5175) 
(9.3117) 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>TABLE IX</head><label>IX</label><figDesc>DYNAMIC SIMULTANEOUS LIVER-KIDNEY EXCHANGE SIMULATIONS FOR n = 2000 PATIENTS</figDesc><table>Exchange Regime 
Population 
Direct 
Sizes 
Donation 
Isolated 
Integrated 
SLK Patient 
Fraction in 
Liver Pool 
KA 
SLK 
LA 
KA 
SLK 
LA 
KA 
SLK 
LA 
KA 
SLK 
LA 

7.5% 
1070 
70 
860 
487.84 
4.946 
134.93 
306.62 
5.588 
110.35 
312.92 
18.246 
113.17 
(in 20 periods) 
(15.948) 
(2.1071) 
(10.424) 
(18.95) 
(4.0752) 
(12.785) 
(19.141) 
(4.4835) 
(12.941) 

15% 
1036 
144 
820 
472.38 
10.072 
128.75 
284.24 
10.688 
105.29 
291.01 
28.478 
106.85 
(in 20 periods) 
(15.618) 
(3.0314) 
(10.151) 
(18.79) 
(4.2759) 
(12.462) 
(18.637) 
(4.6644) 
(12.12) 
FIGURE 11.-The exchanges in Step 1 of the 2-&amp;3-way matching algorithm. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head></head><label></label><figDesc>requires two B donors of A patients, and the maximum number of B donors of A patients isγ A , we have the constraint</figDesc><table></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="32">This arrival rate roughly corresponds to 6 months of liver and kidney patients in South Korea with an exchange carried out every 9 days.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="33">Function 1{S} gets value 1 when statement S is true and 0 otherwise.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Note that, in the Group and Match subalgorithm, whenever we can, we prioritized A − O − B and B − O − A triples in their group while matching. There is a reason for that. Next, we prove that Group and Match not only finds an optimal matching within E E , but also matches the maximum possible number of A − O − B and B − O − A triples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">Q E D</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Group and Match, matches the maximum number of A − O − B and B − O − A triples possible in any matching; and these numbers are min{n(A − O − B) s B } and min{n(B − O − A) s A }. respectively. PROOF: First, we show that Group and Match subalgorithm matches min{n(A − O −</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Define κ as the number of A − O − B triples matched in the algorithm. Case 1</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>}-Many A − O − B Triples And Min{n(b − O − A) S A }-Many B − O − A Triples</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Hence n(A − O − B)-many A − O − B triples are matched. We have that m A -many A blood-type patients are matched by Lemma 9. Since n(A − O −</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Case 2. &quot;s A &gt; s B &quot;: In the subalgorithm, triples with O donors are matched before any other triple in their respective group. Observe that after Steps 1 and 2, either all A − O − B&apos;s are matched, or no A − A − B&apos;s are matched, as they are always processed before A − A − B&apos;s. Similarly, after Step 3, either all A − O − B&apos;s are matched, or no A − B − B&apos;s are matched</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>≤ M A ≤ S B , Κ-Many A − O − B ; A − O − B) ≤ P A = M A ≤ S B</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Thus, κ = n</title>
		<imprint/>
	</monogr>
	<note>as remaining A − O − B types are moved to the A − B * − B group after REFERENCES</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">The Outcomes of Donor Operations in 184 Living Donor Operations at the First Organ Transplantation Center in Azerbaijan Republic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ahmadov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kazimi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Beydullayev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Isayev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Aliyeva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Faracov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Huseynov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sal-Imov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cafarova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Yahyayev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Rustamzada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sadiev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Valiyeva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><forename type="middle">O</forename><surname>Faracli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note>in Abstract Book of the 14th Congress of the Middle East Society for Organ Transplantation. [2</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Anaesthesia for Living Donor Combined Liver Kidney Transplantation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Aneja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><forename type="middle">S</forename><surname>Upwar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Apollo Medicine</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="142" to="144" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Primary Hyperoxaluria: Simultaneous Combined Liver and Kidney Transplantation From a Living Related Donor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Astarcioglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Karademir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Gülay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bora</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Astarcioglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kavukcu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Türkmen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><forename type="middle">A</forename><surname>Soylu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Liver Transplantation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="433" to="436" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Multi-Organ Exchange: The Whole Is Greater Than the Sum of Its Parts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Dickerson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Association for the Advancement of Artificial Intelligence</title>
		<meeting>the Association for the Advancement of Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Eason</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Gonwa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Sung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gerber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Bloom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Consensus Conference on Simultaneous Liver Kidney Transplantation (SLK)</title>
		<meeting>Consensus Conference on Simultaneous Liver Kidney Transplantation (SLK)</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="2243" to="2251" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Simultaneous Liver-Kidney Allocation Policy: A Proposal to Optimize Appropriate Utilization of Scarce Resources</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">N</forename><surname>Formica</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Aeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Boyle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kucheryavaya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stewart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hirose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><forename type="middle">D</forename><surname>Mulligan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Journal of Transplantation</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="758" to="766" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">G</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">I</forename><surname>Min</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">D</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Min</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N.-J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-S</forename><surname>Suh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><forename type="middle">J</forename><surname>Ha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of the Korean Society for Transplantation</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="270" to="275" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Kidney Transplantation: A Single Center Experience</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">K</forename><surname>Nadim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Sung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Andreoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Biggins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Danovitch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Friedewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Kellum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Lake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">B</forename><surname>Melton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Pomfret</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Saab</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">S</forename><surname>Genyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Simultaneous Liver-Kidney Transplantation Summit: Current State and Future Directions</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="2901" to="2908" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Renal Dysfunction in Chronic Liver Disease</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Slack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Yeoman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><forename type="middle">J</forename><surname>Wendon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Critical Care</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Dynamic Kidney Exchange</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">U</forename><surname>Ünver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Review of Economic Studies</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="372" to="414" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>1] Co-editor Dirk Bergemann handled this manuscript</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
